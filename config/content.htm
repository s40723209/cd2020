<h1>weeks</h1>
<p>week1 ~ week5(<a href="https://s40723209.github.io/cd2020/content/week1%20~%20week5.html">https://s40723209.github.io/cd2020/content/week1%20~%20week5.html</a>)</p>
<h3>week1 ~ week5</h3>
<p>week1</p>
<p>1.建立個人倉儲及網站編譯</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/bl73noVMBFU" width="560"></iframe></p>
<p>week2</p>
<p>升級python3.8.2</p>
<p>1.先新增data資料夾，在data下新增資料夾py382、wscite432、portablegitwscite432、portablegit。</p>
<p>2.到https://www.python.org/downloads/release/python-382/ 下載Windows x86 web-based installer。</p>
<p>3.開始下載，必須將pip選項取消，接著按下next並將檔案下載至資料夾py382。</p>
<p>4.到<a href="https://www.scintilla.org/SciTEDownload.html">https://www.scintilla.org/SciTEDownload.html</a> 下載<a href="https://www.scintilla.org/wscite432.zip">full 64-bit download</a> ，下載完成後解壓縮到資料夾<span>wscite432。</span></p>
<p><span>5.建立新的start.bat及stop.bat。(下方)</span></p>
<p><span>6.下載MSYS2 <a class="button" href="http://repo.msys2.org/distrib/x86_64/msys2-x86_64-20190524.exe">msys2-x86_64-20190524.exe</a><span> 至data下。</span></span></p>
<p><span><span>7.<span color="#000000">到</span><a href="https://bootstrap.pypa.io/get-pip.py">https://bootstrap.pypa.io/get-pip.py</a><span>頁面，滑鼠右鍵另存新檔到data下。</span></span></span></p>
<p><span><span><span>8.輸入指令</span></span></span></p>
<p><span><span><span><code class="py plain">python get</code><code class="py keyword">-</code><code class="py plain">pip.py</code></span></span></span></p>
<p><span><span><span><code class="py plain">pip install flask bs4 lxml pelican markdown flask_cors leo</code></span></span></span></p>
<p><span>start.bat</span></p>
<p><span>@echo off<br/>set Disk=y<br/>subst %Disk%: "data"<br/> <br/>%Disk%:<br/> <br/>set HomePath=%Disk%:\home<br/>set HomeDrive=%Disk%:\home<br/>set Home=%Disk%:\home<br/>set USERPROFILE=%Disk%:\home<br/> <br/>REM 將系統 Python 程式的 io 設為 utf-8<br/>set PYTHONIOENCODING="utf-8"<br/> <br/>set PYTHONPATH=%Disk%:\py381\DLLs;%Disk%:\py381\Lib;%Disk%:\py381\Lib\site-packages;<br/>set PYTHONHOME=%Disk%:\py381<br/> <br/>#REM for putty<br/>#Set GIT_HOME=%CDisk%:\portablegit\bin\<br/>#Set GIT_SSH=%Disk%:\putty\plink.exe<br/> <br/>set path_python=%Disk%:\py381;%Disk%:\py381\Scripts;<br/>set path_msys2=%Disk%:\msys64\mingw64\bin;<br/>set path_git=%Disk%:\portablegit\bin;<br/>set path_cmake=%Disk%:\cmake-3.10.1-win64-x64\bin;<br/>set path_vscode=%Disk%:\vscode;<br/>set path_tcc=%Disk%:\tcc;<br/> <br/> <br/>path=%Disk%:;%path_python%;%path_msys2%;%path_git%;%path_cmake%;%path_tcc%;<br/> <br/>start /MIN cmd.exe<br/>start /MIN cmd.exe<br/>start /MIN cmd.exe<br/>start /MIN cmd.exe<br/> <br/>start /MIN %Disk%:\wscite\SciTE.exe<br/>start /MIN %Disk%:\wscite\SciTE.exe<br/> <br/>Exit</span></p>
<p><span>stop.ba<span>t</span></span></p>
<p><span><span>@echo off<br/>set Disk=y<br/>path=%PATH%;<br/> <br/>taskkill /IM python.exe /F<br/>taskkill /IM pythonw.exe /F<br/>taskkill /IM scite.exe /F<br/>taskkill /IM ShareX.exe /F<br/> <br/>REM 終止虛擬硬碟與目錄的對應<br/>subst %Disk%: /D<br/>REM 關閉 cmd 指令視窗<br/>taskkill /IM cmd.exe /F<br/> <br/>EXIT</span></span></p>
<p></p>
<p></p>
<p></p>
<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>