var tipuesearch = {"pages": [{'title': 'weeks', 'text': 'week1 ~ week5 \n week6 ~ week9 \n week10 ~ week14 \n', 'tags': '', 'url': 'weeks.html'}, {'title': 'week1 ~ 5', 'text': 'week1 \n 建立個人倉儲及網站編譯 \n \n week2 \n 升級python3.8.2 \n 1.先新增data資料夾，在data下新增資料夾py382、wscite432、portablegitwscite432、portablegit。 \n 2.到 https://www.python.org/downloads/release/python-382/  下載Windows x86 web-based installer。 \n 3.開始下載，必須將pip選項取消，接著按下next並將檔案下載至資料夾py382。 \n 4.到 https://www.scintilla.org/SciTEDownload.html \xa0下載 full 64-bit download \xa0，下載完成後解壓縮到資料夾 wscite432。 \n 5.建立新的start.bat及stop.bat。(下方) \n 6.下載MSYS2\xa0 msys2-x86_64-20190524.exe \xa0至data下。 \n 7. 到 https://bootstrap.pypa.io/get-pip.py 頁面，滑鼠右鍵另存新檔到data下。 \n 8.輸入指令 \n \n python get - pip.py \n pip install flask bs4 lxml pelican markdown flask_cors leo \n \n 9.git clone自己的倉儲 \n start.bat \n \n stop.bat \n \n 第三組第一次小組會議: \n 會議內容:討論工作內容 \n 作業1: \n 1.請描述如何針對該課程進行有效的隨機分組，或者隨機進行點名？ 2.描述如何為Windows 10 64位系統準備一個可移植的Python編程系統，以允許在Github上維護CMSiMDE網站，Pelican博客和js演示文稿？ 3.您需要從 http://www.coppeliarobotics.com/helpFiles/index.html 了解什麼來實現四輪機器人？ \n 工作分配圖 \n \n 注意事項: \n 1.3/26(四)之前要做完，做成pdf檔繳交。 \n 2.有問題到gitter上提問。 \n 3.每週要更新上傳。 \n \n week3 \n 工作任務:您需要從http://www.coppeliarobotics.com/helpFiles/index.html了解什麼來實現四輪機器人？ \n 分配到翻譯章節:BubbleRob tutorial \n \n 我們使用[菜單欄->添加->基本形狀->球體]將直徑為0.2的基本球體添加到場景中。我們將X尺寸項目調整為0.2，然後點擊“確定”。默認情況下，創建的球體將顯示在可見性層1中，並且是動態且可響應的（因為我們已啟用“創建動態且可響應的形狀”項）。我們開始模擬，複製並貼上創建的球體（使用[菜單欄->編輯->複製所選對象]，然後[菜單欄->編輯->黏貼緩衝區]，這兩個球將對碰撞做出反應並滾動。 \n 我們在“平移”選項卡上打開“位置”對話框，選擇表示BubbleRob身體的球體，並為“沿Z”輸入0.02。確保將“相對於”項設置為“世界”。然後我們點擊翻譯選擇。這會將所有選定對象沿絕對Z軸平移2 cm，並有效地將我們的球體抬高了一點。在場景層次結構中，我們雙擊球體的名稱，以便我們可以編輯其名稱。我們輸入bubbleRob，然後按Enter。 \n 接下來，我們將添加一個接近傳感器，以便BubbleRob知道它何時接近障礙物：我們選擇[菜單欄->添加->接近傳感器->圓錐類型]。在“方向”選項卡上的“方向”對話框中，我們為“周圍的Y”和“周圍的Z”輸入90，然後點擊“旋轉選擇”。在位置對話框的“位置”選項卡上，為X坐標輸入0.1。 Z坐標為0.12。現在，接近傳感器已相對於BubbleRob的身體正確定位。我們在場景層次中點擊接近傳感器的圖標以打開其屬性對話框。我們點擊顯示體積參數以打開接近傳感器體積對話框。我們將偏移量調整為0.005，角度調整為30，範圍調整為0.15。然後在接近傳感器屬性中，點擊“顯示檢測參數”。這將打開接近傳感器檢測參數對話框。如果距離小於則取消選中“不允許檢測”項，然後再次關閉該對話框。在場景層次結構中，我們點擊接近傳感器的名稱，以便我們可以編輯其名稱。我們輸入bubbleRob_sensingNose並按返回鍵。 \n 我們選擇bubbleRob_sensingNose，然後按住Control鍵選擇bubbleRob，然後點擊[菜單欄->編輯->將上一個選定的對象設為父對象]。這會將傳感器連接到機器人的身體。我們還可以將bubbleRob_sensingNose拖動到場景層次中的bubbleRob上。 \n \n 接下來，我們將製作BubbleRob的車輪。我們使用[菜單欄->文件->新場景]創建一個新場景。跨多個場景工作通常非常方便，以便可視化並僅對特定元素進行工作。我們添加一個尺寸為（0.08,0.08,0.02）的純原始圓柱體。對於BubbleRob的主體，如果尚未啟用，則在該圓柱的對象通用屬性中啟用Collidable，Measurable，Renderable和Detectable。然後，將圓柱的絕對位置設置為（0.05,0.1,0.04），並將其絕對方向設置為（-90,0,0）。我們將名稱更改為bubbleRob_leftWheel。我們複製並貼上滾輪，然後將複製的絕對Y坐標設置為-0.1。我們將副本重命名為bubbleRob_rightWheel。我們選擇兩個輪子，複製它們，然後切換回場景1，然後貼上輪子。 \n 現在，我們需要為車輪添加接頭（或電動機）。我們單擊[菜單欄->添加->關節->旋轉]將旋轉關節添加到場景。在大多數情況下，將新對象添加到場景時，該對象將出現在世界的起源處。我們保持關節處於選中狀態，然後控制選擇bubbleRob_leftWheel。在位置對話框的“位置”選項卡上，我們單擊“應用於”選擇按鈕：這將關節定位在左輪的中心。然後，在“方向”對話框中的“方向”選項卡上，執行相同的操作：這將關節與左輪定向的方向相同。我們將關節重命名為bubbleRob_leftMotor。現在，我們在場景層次中雙擊關節的圖標以打開關節屬性對話框。然後，單擊“顯示動態參數”以打開關節動力學屬性對話框。我們啟用電動機，然後選中目標速度為零時鎖定電動機。現在，我們對右馬達重複相同的過程，並將其重命名為bubbleRob_rightMotor。現在，我們將左輪連接到左馬達，將右輪連接到右馬達，然後將兩個馬達連接到bubbleRob。 \n \n 我們運行模擬，並注意到機器人向後倒下。我們仍然缺少與地板的第三個聯繫點。現在，我們添加一個小的滑塊（或腳輪）。在一個新場景中，我們添加一個直徑為0.05的純原始球體，並使該球體可碰撞，可測量，可渲染和可檢測（如果尚未啟用），然後將其重命名為bubbleRob_slider。我們在形狀動力學屬性中將Material設置為noFrictionMaterial。為了將滑塊與機器人的其餘部分牢固地鏈接在一起，我們使用[菜單欄->添加->力傳感器]添加了力傳感器對象。我們將其重命名為bubbleRob_connection並將其上移0.05。我們將滑塊連接到力傳感器，然後復制兩個對象，切換回場景1並貼上它們。然後，我們將力傳感器沿絕對X軸移動-0.07，然後將其安裝到機器人主體上。如果現在運行仿真，我們會注意到滑塊相對於機器人主體略微移動，這是因為兩個對象彼此碰撞。為了避免在動力學模擬過程中產生奇怪的影響，我們必須通知CoppeliaSim兩個對像不會相互碰撞，我們可以通過以下方式進行此操作，在形狀動力學屬性中，對於bubbleRob_slider，我們將本地可響應蒙版設置為00001111，對於bubbleRob，我們將本地可響應掩碼設置為11110000。再次運行仿真，我們會注意到兩個對像不再相互干擾。 \n \n 我們再次運行仿真，發現即使在電機鎖定的情況下，BubbleRob也會輕微移動。我們還嘗試使用不同的物理引擎運行仿真，結果將有所不同。動態仿真的穩定性與所涉及的非靜態形狀的質量和慣性緊密相關。現在，我們嘗試糾正這種不良影響。我們選擇兩個輪子和滑塊，然後在“形狀動力學”對話框中點擊3次M = M * 2（用於選擇）。效果是所有選定形狀的質量都將乘以8。我們對3個選定形狀的慣性進行相同的操作，然後再次運行仿真：穩定性得到了改善。在關節動力學對話框中，我們將兩個電機的目標速度都設置為50。我們運行模擬，BubbleRob現在向前移動並最終掉落在地板上。我們將兩個電機的目標速度項都重置為零。 \n 對象bubbleRob是所有對象的基礎，所有對象隨後將形成BubbleRob模型。我們將在稍後定義模型。同時，我們要定義代表BubbleRob的對象的集合。為此，我們定義了一個收集對象。我們單擊[菜單欄->工具->集合]以打開集合對話框。 \n \n 在集合對話框中，點擊添加新集合。一個新的集合對像出現在下面的列表中。目前，新添加的集合仍為空（未定義）。在列表中選擇新的收藏項時，在場景層次中選擇bubbleRob，然後在收藏對話框中點擊“添加”。現在，我們的集合被定義為包含層次結構樹的所有對象（從bubbleRob對像開始）（集合的組成顯示在“組成元素和屬性”部分中）。要編輯集合名稱，請點擊它，然後將其重命名為bubbleRob_collection。 \n 在此階段，我們希望能夠跟踪BubbleRob與任何其他對象之間的最小距離。為此，我們使用[菜單欄->工具->計算模塊屬性]打開距離對話框。 \n \n 在距離對話框中，點擊“添加新距離對象”並選擇一個距離對 bubbleRob_collection-場景中所有其他可測量對象。這只是添加了一個距離對象，該距離對象將測量集合bubbleRob_collection（即該集合中的任何可測量對象）與場景中任何其他可測量對象之間的最小距離。我們通過點擊其名稱將距離對象重命名為bubbleRob_distance。我們關閉距離對話框。現在，當我們運行模擬時，我們不會看到任何區別，因為距離對象將嘗試測量（並顯示）BubbleRob與場景中任何其他可測量對象之間的最小距離段。 \n 接下來，我們將向BubbleRob添加一個圖形對象，以顯示最小距離以上的距離，同時還顯示BubbleRob隨時間的軌跡。我們點擊[菜單欄->添加->圖]，並將其重命名為bubbleRob_graph。我們將圖形附加到bubbleRob，並將圖形的絕對坐標設置為（0,0,0.005）。現在，通過在場景層次結構中雙擊其圖標來打開圖形屬性對話框。我們取消選中“顯示XYZ平面”，然後點擊“添加新數據流以進行記錄”，然後選擇“對象：數據流類型的絕對x位置”，並選擇“ bubbleRob_graph”作為要記錄的對象/項目。數據流記錄列表中出現了一個項目。該項目是bubbleRob_graph的絕對x坐標的數據流。現在，我們還想記錄y和z位置：我們以與上述類似的方式添加這些數據流。現在，我們有3個數據流，分別表示BubbleRob的x，y和z軌跡。我們將再添加一個數據流，以便能夠跟踪機器人與其環境之間的最小距離，點擊添加新數據流以進行記錄，然後選擇“距離，數據流類型的段長度”和“氣泡Rob_distance”作為要記錄的對象/項目。在數據流記錄列表中，我們現在將Data重命名為bubbleRob_x_pos，將Data0重命名為bubbleRob_y_pos，將Data1重命名為bubbleRob_z_pos，將Data2重命名為bubbleRob_obstacle_dist。 \n 我們在“數據流”記錄列表中和“時間圖屬性”部分中選擇bubbleRob_x_pos，取消選中“可見”。我們對bubbleRob_y_pos和bubbleRob_z_pos都執行相同的操作。這樣，在時間圖中只能看到bubbleRob_obstacle_dist數據流。 \n \n 接下來，我們將建立一個顯示BubbleRob軌蹟的3D曲線，點擊“編輯3D曲線”以打開XY圖形和3D曲線對話框，然後點擊“添加新曲線”。在彈出的對話框中，我們為X值項目選擇bubbleRob_x_pos，為Y值項目選擇bubbleRob_y_pos，為Z值項目選擇bubbleRob_z_pos。我們將新添加的曲線從Curve重命名為bubbleRob_path。最後，我們檢查“相對於世界”項目並將“曲線寬度”設置為4。 \n \n 我們關閉與圖有關的所有對話框。現在我們將一個電機目標速度設置為50，運行模擬，然後將看到BubbleRob的軌跡顯示在場景中。然後，我們停止仿真並將電動機目標速度重置為零。 \n 我們添加具有以下尺寸的純原始圓柱體（0.1，0.1，0.2）。我們希望此圓柱體是靜態的，但仍會對非靜態的可響應形狀施加一些碰撞響應。為此，我們在形狀動力學屬性中禁用“主體是動態的”。我們還希望圓柱體是可碰撞的，可測量的，可渲染的和可檢測的。我們在對象的公共屬性中執行此操作。現在，在仍然選擇圓柱體的情況下，我們點擊對象平移工具欄按鈕。 \n \n 現在我們可以拖動場景中的任何點，圓柱體將跟隨運動。同時始終受約束以保持相同的Z坐標。我們複製並貼上圓柱幾次，然後將它們移動到BubbleRob周圍的位置。在對象移動期間，按住Shift鍵可以執行較小的移動步驟。按住ctrl鍵可以在與常規方向正交的方向上移動。完成後，再次選擇相機平移工具欄按鈕。 \n \n 我們將左馬達的目標速度設置為50並運行模擬。現在，圖形視圖顯示了到最近障礙物的距離，並且該距離段在場景中也可見。我們停止模擬並將目標速度重置為零。 \n 現在，我們需要完成BubbleRob作為模型定義。我們選擇模型基礎（即對象bubbleRob），然後選中"對像是模型基礎\'\'，然後選擇`"對象/模型可以轉移或接受對象共同屬性中的DNA\'\'，現在有一個點畫的邊界框包含模型層次結構中的所有對象。我們選擇兩個關節，即接近傳感器和圖形，然後啟用項目“不顯示為內部模型選擇”，然後在同一對話框中點擊“應用於選擇”，模型邊界框現在將忽略兩個關節和接近傳感器。仍在同一對話框中，我們禁用攝像機可見性層，並為兩個關節和力傳感器啟用攝像機可見性層，這有效地隱藏了兩個關節和力傳感器。我們可以隨時修改整個場景的可見性層。要完成模型定義，我們選擇視覺傳感器，兩個輪子，滑塊和圖形，然後啟用“選擇模型基礎”選項：如果現在嘗試在場景中選擇模型中的對象，則整個模型而是選擇，這是一種將單個模型處理和操縱整個模型的便捷方法。此外，這可以防止模型受到意外修改。仍然可以通過在按住Shift的同時點擊選擇對像或在場景層次結構中正常選擇它們，來在場景中選擇模型中的單個對象。最後，我們將模型樹折疊到場景層次中。 \n \n 接下來，我們將在與BubbleRob接近傳感器相同的位置和方向上添加視覺傳感器。我們再次打開模型層次結構，然後點擊[菜單欄->添加->視覺傳感器->透視類型]，然後將視覺傳感器連接到接近傳感器，並將視覺傳感器的本地位置和方向設置為（0,0,0）。我們還確保視覺傳感器不可見，不是模型邊界框的一部分，並且點擊該模型，則會選擇模型。為了自定義視覺傳感器，我們打開其屬性對話框。將“遠裁剪平面”項設置為1，將“分辨率x”和“分辨率y”項設置為256和256。向場景中添加一個浮動視圖，並在新添加的浮動視圖上，點擊[彈出菜單->視圖->將視圖與選定的視覺傳感器關聯]。 \n 通過點擊[菜單欄->添加->關聯的子腳本->非線程]，將非線程子腳本附加到視覺傳感器。我們點擊場景層次結構中視覺傳感器旁邊出現的小圖標，這將打開我們剛剛添加的子腳本。我們將以下代碼複製並粘貼到腳本編輯器中，然後將其關閉。 \n \n 為了能夠看到視覺傳感器的圖像，我們開始模擬，然後再次停止。 \n 我們場景所需的最後一件事是一個小的子腳本，它將控制BubbleRob的行為。我們選擇bubbleRob並點擊[菜單欄->添加->關聯的子腳本->非線程]。我們點擊場景層次結構中bubbleRob名稱旁邊顯示的腳本圖標，然後將以下代碼複製並粘貼到腳本編輯器中，然後將其關閉。 \n \n 我們運行模擬。 BubbleRob現在在嘗試避開障礙物的同時向前移動（以非常基本的方式）。在模擬仍在運行時，更改BubbleRob的速度，然後將其複制/貼上幾次。在模擬仍在運行時，也嘗試擴展其中的一些。請注意，根據環境的不同，最小距離計算功能可能會嚴重降低仿真速度。您可以通過選中/取消選中“啟用所有距離計算”項來在“距離”對話框中打開和關閉該功能。 \n', 'tags': '', 'url': 'week1 ~ 5.html'}, {'title': 'week6 ~ 9', 'text': 'week6 \n 抽查影片: \n \n 第三組第二次小組會議: \n 作業2： \n  1.根據主題0和主題1的材料，您能具體描述機械設計團隊為完成分配1的四輪機器人需要做什麼。  \n 2.您需要從https://cyberbotics.com/doc/guide/index了解什麼以實現四輪機器人？ \n \n \n \n 成員 \n 題目 \n \n \n 40623114 \n 1 \n \n \n 40623121 \n 1 \n \n \n 40723203 \n 1 \n \n \n 40723205 \n 1 \n \n \n 40723207 \n 1 \n \n \n 40723209 \n 0 \n \n \n 40723218 \n 1 \n \n \n 40723219 \n 1 \n \n \n 40723227(組長 ) \n 0 \n \n \n 40723233 \n 0 \n \n \n 40723239 \n 0 \n \n \n 40723247 \n 0 \n \n \n 40739214 \n 0 \n \n \n \n 影片: \n \n 注意事項: \n \n 作業二必須在 4/23 前完成，並上傳 pdf 檔到個人倉儲的 download 上。 \n 每周務必上傳進度。 \n 不會做的可以問會的同學或在 gitter 上發問。 \n 請依每個人的作業二 pdf 檔、網站內容，進行互評。 \n \n week7 \n 四輪車基本外型設計及鍵盤操控 \n 1.建立四輪車的本體，給定尺寸並將車身拉高。 \n 2.建立四輪車的輪胎，給定尺寸並調整其方向及位置。 \n 3.建立馬達並調整其方向及位置。 \n 4.複製其輪胎並將位置及結構設置好。 \n 5.將四輪車的前輪馬達重新命名為 right_motor 及 left_motor 。 \n 6.調整馬達轉動的速率 20 設置好。 \n 7.將寫好的子程式加入車體。 \n 8.開始 用鍵盤控制四輪車進行測試。 \n 影片: \n \n week9 \n 期中考報告影片: \n \n', 'tags': '', 'url': 'week6 ~ 9.html'}, {'title': 'week10 ~ 14', 'text': 'week10 \n 第三組第三次小組會議: \n 會議內容:討論工作內容 \n 作業三: \n 根據對 Topic2 和 Topic3 的閱讀，使用 CoppeliaSim 、 Webots 、 Onshape 提出一個機電一體化項目。 \n 注意事項: \n 1.作業三必須在5/28前完成，並上傳pdf檔到個人倉儲的download上。 \n 2.每周務必上傳進度。 \n 3.不會做的可以問會的同學或在gitter上發問。 \n 4.請依每個人的作業三pdf檔、網站內容，進行互評。 \n \n \n \n 成員 \n 題目 \n \n \n 40623114 \n 2 \n \n \n 40623121 \n 2 \n \n \n 40723203 \n 3 \n \n \n 40723205 \n 3 \n \n \n 40723207 \n 2 \n \n \n 40723209 \n 3 \n \n \n 40723218 \n 2 \n \n \n 40723219 \n 2、3 \n \n \n 40723227(組長 ) \n 2 \n \n \n 40723233 \n 2 \n \n \n 40723239 \n 3 \n \n \n 40723247 \n 3 \n \n \n 40739214 \n 3 \n \n \n \n 影片: \n \n 用戶登入設置 \n 操作步驟: \n 1.先git clone cd2020pj1倉儲。 \n 2.新增專案。 \n 3.點選啟用API和服務，點選Google+ Domains API並點選管理。 \n 4.設定同意畫面選擇內部並建立。 \n 5.點選憑證建立OAuth用戶端ID。 \n 6.設定來源及URL \n 7.將ID及密碼複製到編輯器，存儲在tmp下。 \n 8.開啟leo，並打開cd2020pj1.leo。 \n 9.將路徑及名稱改為自己的。 \n 10.存儲，並點選ROC。 \n 11.輸入pip install authomatic。 \n 影片: \n \n week11 \n 虛擬主機設置 \n 操作步驟 \n 1.下載Ubuntu \n 2.下載Virtualbox \n 3.開啟點選檔案>喜好設定 \n 4.新建網路 \n 5.把下載的Ubuntu匯入 \n 6.點擊啟動 \n 7.輸入密碼kmol2020 \n 8.點擊左上方activites>show\xa0 application>LX terminal \n 9.輸入指令xterm& \n 10.輸入指令 cd coppeliasim4_rev4 \n 11.輸入指令ls \n 12.輸入指令cd CoppeliaSim_Edu_V4_0_0_ubuntu18_04 \n 13.輸入指令 輸入 ./coppeliaSim.sh \n 影片: \n \n 第三組第四次小組會議 \n 討論內容:示範操作ubuntu \n \n week12 \n IPV4虛擬主機對外設定 \n \n 第三組第五次小組會議 \n 討論內容:示範操作IPV4虛擬主機對外連線 \n \n week13 \n \n', 'tags': '', 'url': 'week10 ~ 14.html'}, {'title': 'Assignments 1', 'text': '', 'tags': '', 'url': 'Assignments 1.html'}, {'title': '四輪車手冊', 'text': '從 \xa0 http://www.coppeliarobotics.com/helpFiles/index.html \xa0裡挑了五個有關四輪車的章節來翻譯了解。 \n 章節:Line following BubbleRob tutorial \n 在CoppeliaSim的安裝文件夾中的tutorials / BubbleRob中加載第一個BubbleRob教程的場景。 \n \n 我們首先創建3個視覺傳感器中的第一個，並將其附加到bubbleRob對象。選擇[菜單欄->添加->視覺傳感器->正交類型]。通過雙擊場景層次中新創建的視覺傳感器圖標來編輯其屬性，並更改參數以反映。 \n \n 視覺傳感器必鬚麵向地面，因此選擇它，然後在“方向”對話框中的“方向”選項卡上，將“ Alpha-Beta-Gamma”項設置為[180; 0; 0]。 \n 我們有幾種可能性可以讀取視覺傳感器。由於我們的視覺傳感器只有一個像素，並且操作簡單，因此我們只需查詢視覺傳感器讀取的圖像的平均強度值即可。對於更複雜的情況，我們可以設置視覺回調函數。現在，複製並粘貼視覺傳感器兩次，並將其名稱調整為leftSensor，middleSensor和rightSensor。 \n \n \n 讓我們正確放置傳感器。為此，使用位置對話框，在位置選項卡上，並設置以下絕對坐標： \n \n 左傳感器：[0.2; 0.042; 0.018] \n 中間傳感器：[0.2; 0; 0.018] \n 右傳感器：[0.2; -0.042; 0.018] \n \n 現在讓我們修改環境。我們可以移去BubbleRob前面的幾個圓柱體。接下來，我們將構建機器人將嘗試遵循的路徑。從現在開始最好切換到頂視圖：通過頁面選擇器工具欄按鈕選擇頁面4。然後單擊[菜單欄->添加->路徑->圓圈類型]。使用鼠標啟用對象移動。 \n 選擇路徑（並且只有路徑）後，按住Ctrl並單擊其控制點之一。然後可以將它們拖動到正確的位置。 \n 選擇路徑後，進入路徑編輯模式。在那裡，您可以靈活地調整各個路徑控制點。 \n 一旦對路徑的幾何形狀滿意（您隨時可以在以後的階段對其進行修改），請選擇它，然後在路徑屬性中取消選中“顯示點的方向”，“顯示路徑線”和“顯示路徑上的當前位置”。然後單擊顯示路徑整形對話框。這將打開路徑整形對話框。單擊啟用路徑整形，將類型設置為水平線段，並將縮放因子設置為4.0。最後將顏色調整為黑色。我們必須對路徑進行最後一個重要的調整：當前，路徑的z位置與地板的z位置重合。結果是有時我們會看到路徑，有時會看到地板（這種效果在openGl行話中被稱為“ z-fighting”）。這不僅影響我們所看到的，而且還會影響視覺傳感器所看到的。為了避免與z戰鬥有關的問題，只需將路徑對象的位置向上移動0.5毫米即可。 \n 最後一步是調整BubbleRob的控制器，使其也將遵循黑色路徑。 \n 章節:External controller tutorial \n 在 CoppeliaSim 中，有幾種方法可以控制機器人或仿真 : \n \n 方法一是編寫一個腳本來處理給定機器人或模型的行為。這是最方便的方法，因為子腳本直接附加到場景對象，它們將與相關的場景對像一起復制，它們不需要使用外部工具進行任何編譯，它們可以在線程或非線程模式下運行，它們可以通過自定義 Lua 函數或 Lua 擴展庫進行擴展。使用子腳本的另一個主要優點是：與本節中提到的後 3 種方法（即使用常規 API ）一樣，沒有通信延遲，並且子腳本是應用程序主線程的一部分（固有的同步操作）。 \n 方法二是編寫插件。插件機制允許使用回調機制，自定義 Lua 函數註冊，當然還可以訪問外部函數庫。插件通常與子腳本結合使用（例如，插件註冊自定義的 Lua 函數，當從子腳本中調用時，該 Lua 函數將回調特定的插件函數）。使用插件的主要優勢還在於，與本節中提到的後 3 種方法（即使用常規 API ）一樣，沒有通信延遲，並且插件是應用程序主線程的一部分（固有的同步操作）。插件的缺點是：它們的編程更加複雜，並且也需要使用外部編譯。 \n 方法三是編寫依賴於遠程 API 的外部客戶端應用程序。如果您需要從外部應用程序，機器人或另一台計算機運行控制代碼，這是一種非常便捷的方法。這也使您可以使用與運行真實機器人完全相同的代碼來控制仿真或模型（例如虛擬機器人）。 \n 方法四是通過 ROS 節點。  ROS 與遠程 API 相似，是使多個分佈式進程相互通信的便捷方法。儘管遠程 API 非常輕巧且快速，但它僅允許與 CoppeliaSim 通信。另一方面， ROS 允許幾乎將任意數量的進程相互連接，並且提供了大量兼容的庫。但是，它比遠程 API 重並且更複雜。 \n 方法五是通過 BlueZero （ BØ ）節點。與 ROS 類似， BlueZero 是使多個分佈式進程相互通信的一種便捷方法，並且是一種輕量級的跨平台解決方案。 \n 方法六 是編寫一個外部應用程序，該應用程序通過各種方式（例如管道，套接字，串行端口等）與 CoppeliaSim 插件或 CoppeliaSim 腳本進行通信。選擇編程語言（可以是任何一種語言）和靈活性是兩個主要優點。同樣，控制代碼也可以在機器人或其他計算機上運行。 \n \n \n 章節:Simulation dialog \n 可以通過[菜單欄->模擬->模擬設置]或點擊以下工具欄按鈕來訪問模擬對話框 \n \n \n \n 時間 ：模擬時間。每次執行主腳本時，仿真時間都會增加仿真時間步長。使用較大的時間步會導致快速但不准確/不穩定的仿真。另一方面，較小的時間步長（通常）會導致更精確的仿真，但是會花費更多時間。強烈建議保留默認時間步長。 \n 每幀模擬遍數 ：一個渲染遍的模擬遍數。值為10表示刷新屏幕之前，主腳本已執行10次。如果您的圖形卡較慢，則可以選擇僅顯示兩幅中的一幅。 \n 當仿真時間高於以下時間時暫停 ：允許指定暫停仿真的仿真時間。 \n 腳本錯誤暫停 ：如果啟用，則在腳本錯誤發生時暫停仿真。 \n 模擬開始時全屏 ：如果啟用，則模擬以全屏模式開始。請注意，在全屏模式下，對話框和消息將不會出現或不可見，只有鼠標左鍵處於活動狀態。因此，僅在正確配置場景並最終確定場景後才建議使用該模式。可以使用esc鍵保留全屏模式，並在仿真過程中通過布爾參數sim_booparam_fullscreen進行切換。 Unler Linux和MacOS可能僅部分支持全屏模式，並且在某些系統上切換回普通模式可能會失敗。 \n 實時仿真，倍增係數 ：如果選擇，則仿真時間將嘗試跟隨實時。 X的乘數將使仿真運行比實時快X倍。 \n 在落後時嘗試趕上 ：在實時仿真過程中，仿真時間可能無法實時跟踪（例如，由於某些瞬間繁重的計算）。在這種情況下，如果選中此復選框，則模擬時間將嘗試趕上損失的時間，從而明顯加快速度。 \n 將場景重置為初始狀態 ：選中後，所有對像都將重置為其初始狀態：包括對象的局部位置，局部方向及其父對象（只要未進行其他修改（例如，縮放），以及路徑的固有位置，浮動視圖的位置和大小等。這意味著除非進行了重大更改（形狀縮放，對象移除等），否則下一次模擬運行將以與上一次相同的方式執行。 \n 刪除新對象 ：選中後，在仿真運行期間添加的場景對象將在仿真結束時被刪除。 \n \n 章節:Simulation \n 模擬 \n 使用[菜單欄->模擬->開始/暫停/停止模擬]或通過相關的工具欄按鈕來啟動，暫停和停止CoppeliaSim中的模擬： \n \n 在內部，模擬器將使用其他中間狀態，以正確告知腳本或程序接下來將發生的情況。 \n \n 腳本和程序應始終根據當前系統調用功能以及可能的模擬狀態進行反應，以便正確運行。優良作法是將每個控制代碼至少分為4個系統調用函數 \n \n 初始化函數 ： 僅在腳本初始化時調用該函數 \n 激活函數 ：應在發生激活時調用該函數。 \n 傳感功能 ：應在傳感發生時調用此函數。 \n 清理函數 ：該函數在腳本未初始化之前被調用。 \n \n 仿真循環 \n 模擬器通過以恆定的時間步長推進模擬時間來進行操作。 \n \n 通過嘗試使仿真時間與實時保持同步來支持實時仿真: \n \n 以下是一個非常簡化的主客戶端應用程序: \n \n 取決於模擬的複雜性，計算機的性能和模擬設置，實時模擬可能並不總是可能的。 \n 仿真速度 \n 在非實時仿真中，仿真速度主要取決於兩個因素，仿真時間長和一個渲染通道的仿真通道數量。在實時仿真的情況下，仿真速度主要取決於實時乘法係數，而且在一定程度上取決於仿真時間步長。由於計算機的計算能力有限，因此無法進行仿真。在模擬過程中，可以使用以下工具欄按鈕來調整模擬速度： \n \n 以某種方式調整模擬速度，以使初始模擬時間步長永遠不會增加。以下兩個圖說明了仿真速度調整機制： \n \n \n 默認情況下，每個模擬週期由以下順序操作組成： \n \n 執行主腳本 \n 渲染場景 \n \n 螺紋渲染 \n 渲染操作將始終增加仿真週期的持續時間，從而也降低了仿真速度。可以定義每個場景渲染的主腳本執行次數，但這在某些情況下還不夠，因為渲染仍然會減慢每個第x個模擬週期的時間。在這種情況下，可以通過用戶設置或以下工具欄按鈕激活線程渲染模式： \n \n 激活線程渲染模式後，模擬週期將僅包含在執行主腳本中，因此模擬將以最大速度運行。渲染將通過不同的線程進行，並且不會減慢模擬任務的速度。然而，必須考慮缺點。 \n \n 渲染將與模擬循環異步進行，並且可能會出現視覺故障。 \n 錄像機將無法以恆定速度運行。 \n 應用程序的穩定性可能會降低。 \n 某些操作需要等待渲染線程完成工作才能執行，反之亦然。在那些情況下，循環可能比順序渲染模式花費更多的時間。 \n \n', 'tags': '', 'url': '四輪車手冊.html'}, {'title': '亂數分組', 'text': 'Describe how\xa0to\xa0do an efficient random grouping for this\xa0course or do the roll calling randomly? \n 請描述如何針對該課程進行有效的隨機分組，或者隨機進行點名？ \n 在隨機分組及亂數抽點的程式中，利用 Dart 隨機分組源代碼中修改 html 來參考製作亂數分組。 \n 影片: \n \n', 'tags': '', 'url': '亂數分組.html'}, {'title': 'Assignments 2', 'text': '', 'tags': '', 'url': 'Assignments 2.html'}, {'title': '主題0', 'text': "翻譯章節: DigitalProductCollaboration \n 通過設計協作創建更好的產品 - 思想，工具，過程，數字產品今天比以往任何時候都更加複雜之前。創建他們需要多個團隊成員，每個團隊成員都有自己的一套技能和專業知識。例如，在 Savvy ，我們的客戶與以下人員緊密合作：產品經理， UX 設計師，視覺設計師，開發人員，內容策略師和成長專家。我們使用設計協作來處理這種複雜性。如果設計得當，設計協作將使每位專家都擁有思維方式，過程和工具，從而團結起來，更快地構建更好的產品。 \xa0 我們編寫了此資源，以幫助其他應用程序創建者採用協作文化和流程。繼續閱讀以了解為什麼設計協作對於創建引人注目的產品和體驗很重要。我們還將深入探討設計協作思想和文化的要素，有效設計協作的工具，以及工作中設計協作的真實示例。 \xa0 \n 什麼是“設計”協作？ \xa0 \n 在進入之前，我們需要在同一頁面上了解什麼是設計協作 …… 不是。簡單來說，設計協作就是在設計優先的環境中進行協作。但是，由於設計的本質，尤其是我們在 Savvy 所做的設計，設計協作往往會超出人們通常認為的協作範圍。 \xa0 通常將協作定義為兩個或兩個以上的人在共同的目標上共同努力，而設計協作則涉及更多。設計協作包括更多具有不同技能，更艱鉅挑戰和更大目標，影響深遠的人。 \xa0 您可能將協作視為兩個人掛在一塊藝術品上。它只需要溝通，團隊合作和四隻手。設計協作是指一組策展人精心設計訪問者的體驗。他們選擇藝術品，選擇在何處以及如何懸掛藝術品，它所居住的房間（以及房間的照明，家具），甚至是先前的房間以及整個建築物。 \xa0 \n 為什麼設計協作很重要? \n 您可以在沒有協作的情況下設計產品，但是需要一個協作設計過程才能使該產品出色。這就是設計協作如此重要的原因。 \xa0 \n 我們不僅為客戶構建應用程序。精明的人建立了多平台的體驗，複雜的內部系統，在某些情況下還建立了整個品牌和業務。為此，我們利用跨多個核心學科的專業知識：戰略，設計，開發和增長。每個項目涉及很多人，每個人都有自己的技能和專長。設計協作將這些思想融合在一起，結合他們各自的專業知識，共同創建解決方案，以解決共同目標的各個方面。設計協作不是從一個角度來解決問題，而是將這個問題擺在所有專家面前，迫使他們考慮新的觀點和可能性。例如，我們在設計過程的早期就讓我們的開發人員參與進來，以確保我們盡快解決技術機會和局限性。 \n 優勢並推動了我們的技術能力，同時進一步消除了流程中昂貴的障礙。它還限制了一個人可以在筒倉中工作的數量，從而使工作保持公開狀態，並強調用戶需求和產品目標。 \xa0 \n 培養設計協作心態大有幫助。 \n 在設計過程中建立有效協作的過程中，正確的思維方式。它為誰進行協作，如何合作以及達到何種目的奠定了指導原則。 \n 合作適合所有人。 \n 設計師有時會認為不是設計師的人沒有資格提供良好的反饋。但是出色的設計不只是視覺效果。它涵蓋了產品的所有內容，從品牌到工程，再到發展。設計協作吸引了許多人，每個人都有自己的觀點和優勢。它給每個人一個聲音。這些新鮮的觀點為設計師提供了更多信息。前景使設計師能夠對可能對其他設計，開發和營銷選擇產生持久影響的選擇做出正確的決定。與客戶的協作與與其他設計師和團隊成員的協作一樣重要。在 Savvy ，我們讓客戶參與其產品的整個創作過程。我們花時間解釋各種選擇，並與客戶進行討論，以確保我們了解他們的想法。這使我們能夠及早獲得客戶的認可，並從明確的起點和終點開始工作。更大的曝光量並不是什麼大驚喜，而且沒人會第一次看到他們的作品。 \xa0 客戶協作意味著可以更快地獲得更清晰的產品，而無需付出高昂的代價和不必要的會議。 \xa0 很容易陷入角色而忽略全局。通過儘早讓更多人參與進來，您可以與隊友建立更緊密的聯繫，並培養對產品成功的共同責任和興趣。您正在創建一個更加開放和透明的流程，以及一個更緊密聯繫和投入的團隊。 \xa0 \n 合作是背景性的。 \n 客戶面對我們時面臨著複雜的挑戰和目標。更不用說，我們將繼續與客戶合作數月甚至數年，並在過去的決策，研究和其他有價值的背景下積累大量的知識。通過採用上下文優先的方法，可以確保每個人都具有最高的知識水平。這樣，他們就可以在產品上做出最明智的決定。為了做到這一點，我們通過儘早召集所有團隊成員，記錄和記錄會議，建立一些重疊並將過程中的下一個團隊成員像客戶一樣，使 Savvy 的每個人都獲得相關信息的最新信息。 \xa0 在個案協作的基礎上，上下文也同樣重要。請遵循以下準則，以保持協作中的上下文優先：在顯示工作之前提供上下文。在提供背景信息的情況下，如果您的作品出現在屏幕上，那麼您可能會失去聽眾的注意力。 \xa0 描述您要解決的問題或要達到的目標。 \xa0 介紹與當前問題相關的工作。說明您的想法以及做出某些決定的原因。請具體說明您要反饋的內容。 \xa0 \n 合作是開放，誠實和無畏的。 \n 將工作（和您自己）放在外面並不容易。情緒會阻礙您提供坦誠的反饋，尤其是當您擔心會傷害對方的感覺時。這並不意味著在協作中沒有情感的位置。在設計中，讓您感覺如何很重要。我們為人們 ... 思考並為他們創建解決方案 ... 有情感並在決策中使用情感的人。在對話中留下情感可能會縮短潛在的想法或解決方案。充其量，僅就事實和數據進行務實的討論將無法提供全面的信息。在最壞的情況下，它可能是鯡魚或提供虛假的敘述。在 Savvy ，我們使我們的團隊對收到反饋 “ 無所畏懼 ” 。這意味著放開對我們所創造的東西進行判斷的任何焦慮。這也意味著了解我們在一起更加強大，更有機會創造偉大的事物。在無所畏懼的情況下，我們會更好地相互信任和相互賦予能力，以提供誠實和周到的反饋。我們的團隊還相信，不要害怕提供反饋。這意味著要了解需要解決的問題以及客戶的品牌和目標。這也意味著問很多問題，以發現相關的思想或幫助指導決策。 \xa0 嘗試以探索性和指導性的方式提出反饋意見，目的是建立和改進工作，而不是拆散工作。您的反饋應該是建設性的。與其說您不喜歡某些東西，不如說出您的反饋意見以指出您要幫助解決的問題。提供可行的步驟來改進工作，或者至少提供您思考背後的理由。並且不要忘了表達您喜歡什麼以及為什麼。 \xa0 \n 協作不僅僅是新的想法。 \n 開放和接受協作反饋是一回事，解析這些想法並將其用作激發自己的想法是另一回事。隨著時間的推移，這是一項更高級的技能。一種實踐方法是成為更好的聽眾。通常，在與他人交談時，我們會更多地考慮接下來要說的內容，而不是別人在說什麼。這會影響反饋過程，尤其是在設計過程中，因為在聽到其他意見或解決方案之前，我們通常會知道我們要說的話。當您選擇先聆聽然後再做出反應時，它可以讓您完全理解其他人的反饋，並讓您更深入地了解自己 - 他們使用的觀點是什麼以及來自何處？很有可能這是您在創建過程中未曾考慮過的觀點。通過聽取並理解所收到反饋背後的上下文和推理，您可以以更多的方式來審視，思考和體驗設計。然後，您可以針對要設計的挑戰，目標和用例來測試這些新觀點，以查看它們是否更適合用戶。當所有協作者都在積極聆聽時，更容易接受反饋。最終，提供良好反饋的技能來自學習如何獲得反饋。當我們努力成為更好的聽眾時，我們也發現自己變得越來越謙虛，我們認為更好的設計師。 \xa0 \n 查找和使用正確的設計協作工具。 \n 正確的工具在增強團隊的設計協作思想方面大有幫助。在本節中，您將學習在協作工具中尋找什麼。我們還根據自己的經驗推薦工具。有效的協作工具消除了合作者快速便捷地訪問工作並與之交互的所有障礙。這將重點放在提供反饋上。它們還允許其他人在不破壞原始設計的情況下進行協作。過去，我們使用依賴於提供基本版本控製而不是真正的協作功能的工具。例如，設計人員將保存一個 Sketch 文件並將其上傳到 Dropbox 。然後，另一個團隊成員將下載它，進行處理，然後重新上傳。當文件在另一個人手中時，沒有簡單的方法進行更改。我們使用 Github 嘗試了類似的方法，該工具被證明非常適合管理代碼庫，但對於迭代設計工作卻沒有太多幫助。不用說，這些版本控製過程使我們的協作更加耗時，混亂並且非常不協作。 \xa0 現在，我們根據要實現的協作類型從各種更高級的工具中進行選擇。 \xa0 \n FIGMA\xa0 \n 這是一個協作優先的共享工作區工具。  Figma 非常適合在設計文件的同一區域中包含多個人。您可以實時觀看隊友的設計或在同一個設計上一起工作。 \xa0 \n 好處 ： \xa0 \n Figma降低了某人在筒倉中工作的能力。無需添加不必要的修飾或創建靜態可交付結果即可實現協作。因此，您無需更改工作流程即可展示設計。可以輕鬆地在其本機環境中查看並與之交互，並隨意進行調整。使用時間：流程文檔，高保真線框，即時協作，以及引導客戶瀏覽一系列屏幕，以解釋並獲得有關設計方向的反饋。 \xa0 \n MARVE \n L\xa0 \n 雖然 FIGMA 容易感到更自由的形式和靈活，奇蹟允許合作的一個更加規範的形式。這也使我們的客戶可以輕鬆地與我們合作。 \xa0 \n 好處 ： \xa0 \n Marvel是一個更清潔，更規範和專注的空間，非常適合與非設計團隊成員進行協作。它消除了客戶為帳戶付款或對工具進行深入了解的所有需求。客戶可以下載屏幕，並通過 Marvel 應用程序在設備環境中查看它們的運行情況。 \xa0 \n 使用時間：與客戶和開發人員一起呈現更多最終設計工作。 \n 其他協作工具\xa0 \n Zeplin 是有用的傳遞工具，使開發人員可以深入研究設計工作的細節。 \n Quip 是一個集思廣益和產品 / 過程文檔的絕佳平台。我們使用它來記錄和組織團隊成員在項目上需要了解的所有上下文和知識。對於集思廣益而不是視覺關注的新想法也很有用。請注意，還有許多其他工具可以為協作增加與上面列出的類似的好處。此列表代表了在我們日常合作中對我們有效的工具，但並不表示所有可能對您的團隊有效的選項。 \xa0 \n Savvy的設計協作過程在實踐中\xa0 \n 現在，讓我們採用上面概述的最佳實踐和工具，並展示它們如何在現實生活中融合在一起。我們將使用 Press Play 應用程序中的實時繪圖經驗來演示設計協作的重要性。這種經驗涉及多個學科領域的團隊成員之間的重大協作，其中包括視覺設計師， UX 設計人員，開發人員，產品經理，當然還有客戶。 \n 上下文和挑戰\xa0 \n Press Play 是包含每日，每周和每月圖紙的抽獎應用程序。用戶通過觀看廣告賺取門票，並通過選擇五個表情符號輸入圖紙。然後，根據獲獎者的選擇與繪畫中隨機選擇的表情符號匹配的方式來獎勵獲獎者。這項特殊任務使我們為等待現場繪畫結果的用戶創造了一種有趣而激動人心的現場體驗。對於我們來說，為這種體驗創建類似遊戲的動畫非常重要。我們特別想在屏幕上喚起用戶的嬉戲感和期待感，讓用戶看到他們選擇的表情符號與抽獎活動圖上的表情符號相匹配。就是說，我們需要注意動畫所需的複雜程度及其對整體產品時間表和成本的影響。我們的目標是在合理的時間內提高保真度，而又不顯著影響項目預算。 \xa0 \n 協作過程\xa0 \n 階段1 ：線框和頭腦風暴 \xa0 \n 首先，一個精明的 UX 設計師創建了 Press Play 的整體 UX 和線框，確定需要什麼屏幕以及每個屏幕的時間安排。她還為實時繪畫動畫整理了一個粗略的概念（如右圖所示），根據客戶的需求和項目已建立的用戶體驗表達了初步的想法。 \xa0 她向產品經理和視覺設計師展示了線框和粗糙的動畫。然後，這三個人都與客戶會面，因此每個人都可以直接聽到反饋。 \xa0 \n 階段2 ：研究和環境 \xa0 \n 精明的視覺設計師負責創建實際的實時繪圖動畫，而他們的眼睛新鮮，並且對 Press Play 產品沒有太多的了解。為了加快速度，他與 UX 設計師和產品經理進行了深入交流。他還花費額外的研究時間來了解總體產品目標，挑戰並熟悉迄今為止的工作。如前所述，他是線框演示的一部分，並向客戶提出反饋。在這種情況下，他進行了一些與手頭任務直接相關的其他研究。通過這樣做，他確保自己了解現場繪畫體驗的要求，目標和挑戰。他查看了具有類似體驗和保真度的其他應用，並參考了粗糙的動畫以了解最終動畫到底需要顯示什麼（在這種情況下，是獲勝的表情符號和用戶的表情符號選擇）。在過於依賴解決方案之前，他會見了一位精明的 iOS 開發人員，以了解技術限制和注意事項。然後，我們的視覺設計師和 UX 設計師集思廣益，對視覺效果至關重要。他們一致認為，需要為用戶增加懸念 / 期望，這需要緩慢的揭示。 \xa0 \n 階段3 ：迭代和反饋 \xa0 \n 當我們的視覺設計師通過多個不同的方向工作時，他邀請 UX 設計師來討論他在 Figma 中的進度和設計。 。通過討論工作，他們激發了更多的想法和迭代，同時確保它們符合客戶的期望。有了更多可靠的選擇，他再次與 iOS 開發人員會面，以確保從技術角度來看一切都符合要求。 \xa0 \n 階段4 ：客戶反饋和開發 \xa0 \n 當我們獲得多個最終版本的體驗時，視覺設計師使用 Figma 與客戶一起進行了體驗。  Press Play 的產品經理和 UX 設計師也提供了反饋和指導。 \xa0 \n 一旦他們都了解了引起客戶興趣的東西，視覺設計師便著手使視覺效果最大化，並為開發做好準備。他繼續與 iOS 開發人員合作，以在技術層面上充分利用該概念。 \xa0 \n 最終結果\xa0 \n Press Play的實時繪圖動畫是工作中設計協作的一個例子。一支跨學科專家團隊，共同解決具有更大影響的設計和開發挑戰。沒有設計協作，我們將找不到用戶體驗，視覺和技術之間的理想交匯處。當客戶在他的應用程序中看到動畫生動時，他稱其為 “ 開創性的 ” 。此外，這種 Press Play 體驗的研究，協作和創造幫助我們發現了產品用戶旅程中的空白。最初，實時繪圖的目的是將結果顯示給用戶的一種有趣的方式。在設計過程中，我們意識到，如果用戶沒有觀看實時圖形而迷路了，他們就無法體驗到該圖形的用戶旅程。基於這一發現，我們決定在其他兩個地方也改進該應用程序。我們在 “ 獲勝者圈子 ” 中添加了一個 “ 結果 / 實時繪圖 ” 元素，並在該應用程序的 “ 用戶詳細信息 ” 端添加了 “ 失敗記錄 ” 部分。最後，設計協作使我們能夠實現用戶體驗中這一未滿足的需求。 \xa0 \n 結論說明\xa0 \n 需要進行設計合作，以解決構建出色產品和體驗所伴隨的複雜，關鍵問題。通過利用跨學科的多個團隊成員的專業知識，設計協作可確保團隊從各個角度應對挑戰並尋求更好的解決方案。通過正確的思維方式，工具和流程，設計協作使團隊能夠通過創造性思維和迭代來更深入。我們希望本指南為您提供一個良好的基礎，您可以以此為基礎建立自己的有效設計協作流程。您可以在 Savvy 博客上了解有關設計和產品策略的更多信息，也可以隨時在 Savvy Apps 網站上與我們聯繫以獲取幫助。 \n 翻譯章節: IndustrialAndEngineeringProductDesignCollaboration \n 本研究旨在闡明工業設計師和工程設計師如何協作，以及這種聯盟如何反映設計過程。我們與來自六個消費產品製造商的 34 名工業和工程設計師進行了有關實際產品設計項目的深入採訪。我們首先從訪問數據中識別出各個設計過程。其次，我們然後使用鑲嵌方法將設計過程進行比較並合併為協作過程。我們最終簡化了協作過程，以創建代表性的過程模型。結果，我們發現了四種類型的典型協同產品設計流程及其特徵： \n 類型1 ：由 ID 主導的概念驅動過程 \n 類型2 ：由 ID 主導的內外聯合過程 \n 類型3 ：由 ED 主導的內在先流程 \n 類型4 ： ID ＆ ED 協同流程 \n ElsevierLtd保留所有權利。眾所周知，工程設計和工業設計有很大的不同設計實踐，和他們的設計方案在某些方面彼此相反。工業設計師的角色包括增強產品的用戶體驗並開發其外部形式和界面。他們運用美學和人體工程學方面的知識和技能。在與工業設計師的互動下，工程設計師參與了實施由工業界開發的設計概念。工程設計人員提供了一種使產品正常運行，可靠並製造出  kplee@kaist.ac.kr 的方法。這導致了不同的方法工業和工程設計師之間。 \n 它經常被認為工程設計人員使用一個 ' 向外接近 電子商務 發展從功能外觀，而工業設計師遵循向內方法 E 從外觀上的功能顯影。基於這些概念，提出了以下兩種設計策略：一種是 “ 由內而外 ” 的策略，定義為首先設計內部工作部件，從而限制了外部形狀，另一種是 “ 由外而內 ” 的策略。首先定義封套，然後約束內部零件。這些設計策略涉及公司應在特定條件下為特定目的採取的組合設計過程。但是，從經驗證據中很少了解到這兩種策略如何在工業項目中應用。很少有嘗試從工程設計和工業設計的綜合角度來看待設計過程。在這方面，我們研究了工業環境中兩個學科的協作設計過程。研究的問題是：存在哪些類型的協作產品設計流程，以及什麼條件促使公司採用特定類型的流程。根據這兩個設計師小組的角色和特點，我們假設會有不同類型的由內而外的設計方法。我們認為，由內而外的方法將以工業設計為主導的設計過程為特徵，從而產生工業設計師作為需求和標準提供者的角色，而由內而外的方法將以工程設計為主導的設計過程，工程設計師通過提供對工業設計師職責的初始要求來限制工業設計師的任務範圍。為了在競爭激烈的市場中取得成功，公司應通過適當地採用從內而外的方法來匹配其情況和目標，從而創建工業設計和工程設計的協作流程。 \xa0 \n 本文有兩個目標：首先，闡明在實踐中應用的原始協作產品設計過程的形式；其次，確定在不同條件下用於不同目的的不同類型的過程。為此，我們對六家消費產品製造商的工業設計師和工程設計師進行了深入採訪。我們使用 “ 確定了每個公司的產品設計過程鑲嵌法 ” ，其中結合了從訪談數據中提取的各個設計過程以完成一個協作過程。結果，我們確定了四種典型的協作產品設計流程及其特徵。通稱 “ 協作產品設計 ” 是指通過工業設計和工程設計的共同貢獻而創建的產品設計。特別是在公司環境中，協作產品設計涉及一系列設計活動，例如創建初始產品概念，確定內部規格以及開發外部形式和內部結構。因此， “ 協作產品設計過程 ” 是指工業設計和工程設計都直接參與產品開發活動的產品設計過程。 \xa0 \n 工業設計在這一點上主要涉及開發消費品的外部形式，界面和用戶體驗，但不包括純圖形設計或純樣式設計。工程設計開發了用於在消費產品中放置和操作內部功能部件的技術解決方案，並以能夠實現大規模生產的方式定義了構成產品的內部和外部部件。我們將從事此類活動的標記為工程師工程設計師。本文包括三個部分： \n 第一部分 詳細介紹了研究方法 \n 第二部分 介紹了典型的協作產品設計過程及其特徵 \n 第三部分總結了結果，並討論了對設計文獻的影響和貢獻。研究方法為了研究協作產品設計過程的類型和相關條件，我們在數據收集和分析中採用了紮實的理論方法，以及的 “ 鑲嵌方法我們設計用於重構 ” 工業設計師和工程設計師之間的協作設計過程。紮根的理論方法在社會科學中被廣泛用作為研究較少的領域建立理論的系統方法，而在設計研究中已被長期採用。它使用歸納邏輯，主要是通過深入的訪談和 / 或觀察開始進行數據收集。在編碼階段，通常有兩種策略。一種是從數據中收集有意義的參考並進行編碼，如果研究主題沒有明確定義，則將它們分為編碼類別。另一種是在明確定義研究主題時，使用符合特定主題的預定義編碼類別來標識相關參考。我們使用了後一種策略，因為對設計過程進行了廣泛的研究。採用了類似的方法， Berends 、 Reymen 、 Stultiens 和 Peutz  對五家公司的設計過程進行了調查。  Kleinsmann 和 Valkenburg 收集了有關工業中協同設計過程的故事，並確定了協同設計項目的關鍵主題和情節。我們首先對個別設計師進行了深入採訪，並收集了他們關於設計項目的故事。為避免追溯性賬目的不可靠或不准確，我們採用了三個標準來選擇研究目標： \n （ 1 ）多家公司類似的產品領域 \n （ 2 ）工程和工業設計部門的多個參與者 \n （ 3 ）在整個產品開發週期中已經完成的項目。 \n 我們設置了第一個標準來提高研究結果的適用性。對項目環境的了解和分析提高了設計過程和方法的適用性。因此，對具有相似項目環境的多家公司進行調查可能會提供更好的機會來應用研究結果。使用第二個標準，來自具有不同觀點的多個線人的數據可以相互補充，以抵消任何潛在的偏見。最後，在回顧性訪談中，可以通過收集和分析整個產品開發週期中已經完成的設計項目的故事來確定設計過程。 \xa0 \n 為了基於轉錄的訪談數據重建產品設計過程，我們首先確定 “ 過程要素 ” ，然後繪製出各個設計師實踐的部分設計過程。接下來，我們使用 “ 將每個公司的所有部分流程組合到協作產品設計流程中鑲嵌方法 ” 。在構建了所有詳細的協作產品設計流程之後，我們使用 “ 對其進行了簡化，流程塊 ” 以識別典型設計流程的類型。最後，我們將它們可視化為設計過程模型。 \xa0 \n 可以根據實際設計項目確定實際設計過程及其相對於上下文的特徵，這可能與公司記錄的設計過程不同。比較兩者將提供洞察力。但是，我們無法收集它們，因為它們被視為對外部機密。取而代之的是，我們詢問受訪者他們的公司是否有書面的標准設計流程，以及它是否與實際設計流程不同。 \xa0 \n 1.1深入訪談 \n 1.1.1案例公司的選擇 為了提高適用性，應該在公司的環境和背景下理解設計過程。因此，我們通過指定案例公司來設置三個標準。採納的三個標準如下： \xa0 \n 1）公司應生產中等複雜的電子消費產品。 \n 2）他們應該有獨立的工業設計和工程設計部門。 \xa0 \n 3）他們應該是領先公司在市場上生產精心設計的高質量產品。 \xa0 \n 第一個標準使得能夠選擇在產品領域內具有相似性的製造商，其中工業設計師和工程設計者都扮演著重要角色。生產簡單消費品的製造商在工程設計師中的作用將減少。另外，開發火箭不需要工業設計師的作用。  Ulrich and Eppinger  指出，複雜程度適中機電產品需要工業設計師和工程設計人員同樣重要的角色。根據提出的具有復雜性的工程消費產品分類，  Cross 中等複雜產品的例子包括電鑽和洗衣機。因此，中複雜的電子消費類產品是指那些 engi- neered 產品全面整合電子和機械系統的日常消費類電子產品瓦西。儘管滿足第一個條件，但是某些公司例如原始設備製造商或小型公司的工業設計或工程設計部門是一個，或者沒有。在這種情況下，他們會使用外部設計和 / 或工程諮詢公司。他們的協作過程將不同於內部獨立工業設計和工程部門之間的協作過程。我們傾向於通過探索具有相似背景的案例來提高研究結果的適用性。因此，滿足了第二個標準。最後，生產精心設計和高質量產品的領先公司可以為調查提供合理和適當的數據，研究結果將為其他公司提供很好的參考。 Lawson  指出，發現良好的設計實踐是如何發生的，將有助於理解和製定更有效的方法。這是第三個標準的理由。 \xa0 \n 我們選擇了具有上述標準的案例公司。我們首先將第一和第三標準應用於從 2006 年到 2010 獲得 “ 韓國優秀設計獎 ” 的公司。韓國優秀設計獎在韓國許多市場領先的製造商中很受歡迎。結果，我們獲得了 16 個公司名稱。然後，我們與獲獎公司列表中的聯繫方式聯繫了每家公司，並詢問網守是否具有獨立的 ID 和 ED 部門（第二標準）以及他們是否願意參加研究。最後，我們選擇了六家公司。 \xa0 \n 1.1.2選擇受訪者 我們採用有目的性和滾雪球採樣方法選擇受訪者。每個公司的網守都建議他們的設計師，而後者又建議他們的同事。在這樣做的同時，我們選擇了滿足以下三個條件的受訪者： \xa0 \n 1）在公司中有超過兩年的經驗 \n 2）參與了至少一個產品開發過程的周期 \n 3）與同行的緊密合作和互動 \n 從公司的工業設計師和工程設計師團隊招募的預期受訪人數為 6 人，每人 3 人以保持平衡。但是，我們只能從 B 公司和 F 公司招募兩名工程設計人員。總共有 18 名工業設計師和 16 名工程設計師作為受訪者參加。他們的工作經驗從 2.1 年到 20 年不等，平均為 8.9 年。 \xa0 \n 1.1.3訪談程序 我們根據文獻的建議。我們首先列出了約 20 個詳細問題，並將其分為四個主要主題： \n 1）個人信息 \n 2）設計過程 \n 3）角色和專業知識 \n 4）互動 \n 然後提出了四個關鍵問題： \xa0 \n 1）您的職位和職位在團隊中的角色？ \n 2）產品設計過程如何進行發生？過程中了什麼？ \n 3）您在設計過程中擁有哪些任務，以及知識和執行項目所需的技能？ \n 4）工業設計和工程設計 \xa0 在設計過程中如何相互影響？ \xa0 \n 訪談首先要問的是關於受訪者在團隊中的角色和工作經驗的問題，然後是產品開發，公司業務領域工業設計師的數量工程設計師的數量。 \n 他們經歷的過程及其在這些過程中的任務。當受訪者由於不願意指出要召回的時刻而猶豫不決時，我們提供了詳細的背景信息，例如：假設今天是您所參與項目的開始會議日，然後告訴我有關發生了什麼。這是在訪談研究中提出的很好質疑的建議的基礎。假設替代、理想和解釋性問題。為了限制由多個訪問者引起的不一致，一位作者執行了所有訪問。此外，作者在產品開發方面擁有 14 年的行業經驗，這限制了誤解受訪者描述的綜合設計情況的可能性。為了避免對面試官的經歷產生偏見，本研究遵循了 “Epoche” 過程，在該過程中，對現象的預判和假設被阻止，以便在參與者的世界中對其進行檢驗。因此，面試官在感覺像要評價受訪者的回應時就忽略了對這種現象的判斷。我們在每個公司的安靜房間中進行了採訪，並對所有對話進行了錄音。為了幫助進行對話並記錄補充信息，我們做了現場說明。有時，受訪者會在便箋上製作圖紙以提供詳細說明。從經驗中知道， 90 分鐘適合進行深度訪談，因為線人在這段時間內會認真回答訪談，而線人在 90 分鐘以上時的回應往往會減少。遵循指南，我們計劃的採訪時間為 90 分鐘，但我們沒有控制住它。當我們有足夠的關於問題的數據時，我們通過觀察減少了來自答复的新信息來結束訪談。錄音機中的 “ 語音檢測錄音功能 ” 使我們能夠暫停錄音幾秒鐘，並在聲音恢復時恢復。每個受訪者的錄音時間從 70 分鐘到 100 分鐘不等，所有參與者的平均錄音時間為 78.5 分鐘。因此，每個受訪者的實際採訪時間應長於錄音時間。我們逐字記錄了所有採訪數據。結果，我們獲得了大約 1000 頁的全部轉錄。 \xa0 \n 1.2識別設計過程 \n 1.2.1識別每個人設計過程 經歷的 儘管所有轉錄數據都包含與設計過程相關的信息，但它們都與其他內容混合在一起，包括項目的情況和目標，個人的角色，必要的技能和知識，行為者之間的衝突，彼此的感知圖像等。我們首先通過回顧相關文獻來確定編碼過程框架，以確定 “ 過程要素 ” 。用於構建設計過程。我們通過仔細閱讀 A 公司的採訪記錄來確認他們。關於過程建模，將過程視為信息處理和狀態轉換系統的兩種觀點為有關過程建模的過程元素的編碼類別提供了有意義的線索。從信息處理的角度來看，  Browning ， Fricke 和 Negele  將產品開發及其活動視為信息收集，創建，解釋，轉換和轉移的過程。大多數產品開發活動需要一組輸入，並作為活動的結果，初步輸出，狀態報告等進行生產。這一觀點得到了有關設計過程和組織的大量文獻的支持。 Ulrich 和 Eppinger 將其描述為最終結果所必需的信息，該信息被注入以將當前設計問題轉換為下一個問題以降低不確定性，從而產生輸出，直到形成最終結果為止。這被建模為將功能規範（輸入）轉換為偽影規範（輸出）的過程。  Browning 和 Ramasesh 不多指出，從信息處理的角度進行過程建模無法捕獲完整的信息流，因為人們對交互的了解。他們認為，確定組織單位之間的相互作用的重要性，因為它們會引起建立可交付的流程模式的活動之間的依賴。決定性，過程建模的在此透視基本元件被概括的信息流與 IPO （輸入端 E 方法 e 輸出） REP-resentation 和相互作用組織單位的 ' 人，團隊，公司等。 \xa0 \n 從狀態轉換的角度來看， Reymen  將設計過程描述為通過在每個階段執行任務並評估設計活動將狀態從一種狀態轉移到另一種狀態的過程。這是台門車型，在設計活動發生在舞台的每一個階段，設計輸出的設計審查，從而作出決定之間是否進入下一個階段，重複當前階段或拒絕該項目的進行評估一致。大多數基於階段的模型都提出了這種觀點。基於階段的模型由旨在執行任務的動作和旨在評估執行任務的結果的決策組成；其中完成構成進展到下一個階段。除此之外，當從一個階段跳到另一個階段或在子過程之間鏈接時，伴隨輸入和輸出的信息流就會發生。提出的工程設計過程模型  Pahl 等人。證明了每個階段的明確投入和成果。第一階段的輸入是任務，結果是規範，它又作為輸入進入下一階段。這樣，繪製出了將輸入和結果連接起來的順序發展階段。關於術語 “ 任務 ” 和 “ 設計活動 ” ，  Pahl 等人。使用 “ 任務 ” 來表示項目的初始起點，不同於在每個階段執行的 “ 任務 ” 。但是，這兩個術語的用法類似，用以表示執行設計工作，因此，人們對相互連接和處理任務的設計過程達成了普遍共識。 \xa0 從狀態轉換的角度來看，有兩個活動：執行任務和評估結果。通常，評估會在相對較短的時間內進行，以決定 “ 前進，重複或下降 ” 。因此，我們將這些類型的活動（評估，設計審查，檢查，決策）稱為 “ 事件 ” 。目前，我們有兩個編碼類別： “ 任務 ” 和 “ 事件 ” 。總之，我們可以用四個編碼類別對設計過程進行建模。任務、事件、信息流和交互，並且可以用階段的連接來表示。此時，的設計過程的一個階段可以用來表示 ' 輸入端 E 任務（設計活性） E 事件在線輸出。以下描述瞭如何使用以上四種編碼類別對過程元素進行編碼。 \xa0 \n \n 任務 ：清除設計人員執行的任務，例如想法草圖、 3D 建模等。是的，我做的草圖用圓珠筆來表達我的想法。對其進行少量著色或對其進行掃描以在 Photoshop 上進行修飾。我們將其編碼為帶有想法草圖標籤的任務類別。 \n 事件 ：完成特定任務後，將進行一個事件（決策），從而導致下一個動作。一位受訪者說 : 我們去樣機公司製造原型，並帶走所有兩個或三個原型。與他們舉行了一次模擬評估會議。 工程師們聽老闆的批評。老闆說就是這樣，那就是，如果工程師有不同的想法，他們會提供意見。 最後一個被選中。我們在事件類別中使用標籤 “ 模擬評估會議 ” 對此進行了編碼。 \n 信息流 ：當任務或事件發生時會生成信息流。它總是伴隨著輸入和輸出。一位受訪者說 : 實際上，我們根據工程設計人員提供的規范進行工作。直到有事情出現，我們才開始工作。這說明工業設計師從工程設計師那裡接收到了 “ 規格數據 ” 作為輸入，他們開始使用他們的工作。我們將此規範數據從 ED 編碼為 ID 。 選擇一個後，我們會將模型的 3D 數據傳遞到工程部門。我們發送 “ STEP” 文件，然後使用 “ UG” 開始設計。這說明他們將 3D CAD 數據作為設計活動的輸出發送給了工程設計人員，這些輸入成為了後續工程設計活動的輸入。我們將此 “ 從 ID 到 ED 的 3D CAD 數據 ” 編碼。 \n 交互 ：發生任務或事件時，兩組經常交互。例如，當工業設計師檢查是否可以修改內部空間時，工程設計師通過提供相關信息為他們提供建議。在這種情況下，會發生激烈的互動，工程設計師將充當 “ 顧問 ” 。情況就是這樣 “ 他們解釋說 ” 這應該放在這裡和應擺在那裡。然後，我們修改尺寸和位置，然後再次詢問它們是否可以減小 2 毫米的間隙。如果他們說 “ 是 ” ，我們會將一個部分壓平。我們將其編碼為 “ ED 到 ID 的顧問角色 ” 。 \n \n 我們從每個轉錄的訪談數據中識別出流程要素。我們盡可能用參與者自己的單詞標記它們。我們將現場說明用作補充數據源。在此過程中，我們按時間順序排列並連接了編碼元素，以構建部分設計過程。該方法被廣泛採用以可視化工業過程模型。我們還根據訪談數據確定了設計過程中涉及的項目類型和目標。兩名研究人員執行了整個程序。一位研究人員首先構建了部分設計流程，另一位研究人員通過檢查訪談數據對其進行了檢查。結果，我們獲得了 45 個局部設計過程。 \n 1.2.2識別協作產品設計流程下一步是通過 “ 將每個公司的設計流程組合為協作設計流程鑲嵌方法 ” 。我們首先從公司的特定項目中收集了部分設計流程。之所以容易做到這一點，是因為公司的設計師描述了同一項目中的共享經驗，因此各個局部設計過程相互重疊並相互補充。之後，我們通過比較和合併過程元素來合併部分過程。從工業設計者的訪談數據中提取的部分過程提供了有關工業設計活動的豐富信息。 \n 包括與工程設計人員的互動行為，但有關純工程設計活動的信息較少。工程設計也是如此。我們將公司中工業設計師的部分流程合併在一起，以圍繞工業設計活動重建設計流程。同時，我們利用工程設計師提供的信息來補充和加強工程設計方面的設計活動流程。我們以相同的方式圍繞工程設計活動重建了設計流程。我們最終將這兩個設計過程合併為一個協作產品設計過程。在鑲嵌方法中，結合交叉檢查的局部過程有利於提高可靠性和通用性。通過抵消彼此的信息，這大大降低了構建信息不完整的流程的可能性。因此， “ 鑲嵌法 ” 降低了構建不准確過程的可能性。 \xa0 \n 在比較部分設計過程時，我們發現產品計劃團隊參與了一些設計過程元素。因此，我們包括了它的作用。這意味著產品規劃團隊在工業設計和工程設計的協同設計項目中扮演著一定的角色。我們還標準化了一些表示相同任務或事件的術語。但是，它們的編碼方式不同，因為受訪者使用它們的方式略有不同。例如，我們發現一個會議被編碼為 “ 被編碼為產品計劃會議在一個局部設計過程中 ” ，而過程中 “ 產品開發會議在另一個 ” 。因此，我們將它們統一為 “ 產品計劃會議 ” 。有些人還稱工業設計結果為不同的名稱，例如模型、設計模型或模型製造。我們將它們統一為 “ 設計模型 ” 。我們還將標準化實體模型評估活動和實體模型選擇為實體評估事件。通過交叉檢查每個公司的面試數據，同時評估特定術語的含義和上下文來完成這項工作。實際上，設計師似乎了解每個公司定義了標準術語的文檔化設計過程，但並不是特別了解它。他們似乎忽略了標準化流程，因為市場形勢迫使他們迅速採取行動。語言差異也是造成術語差異的可能原因。在產品設計領域，韓國語中的母語和借來的單詞混合使用。例如，我們同時使用借用詞和本國詞來表示英語的“  design ”。此外，兩支球隊的文化和位置上的差異很可能會導致期限上的差異。除 F 公司外，這兩個部門分別位於不同的物理空間，至少位於不同的樓層。 \n 最後，我們通過將階段元素（輸入，任務，事件和輸出）合併到一個框中並在其中將它們與相關任務進行命名，來定義設計過程中的階段。例如，工業設計師開始根據前一階段的研究結果繪製各種構想草圖。然後，他們通過評估選擇一些最佳草圖。根據選擇的結果，他們決定進入下一階段或重複當前階段。因此，想法草圖階段由研究結果（輸入）、想法草圖（任務）、評估（事件）和最佳草圖（輸出）組成。 \n 結果，我們從所有公司獲得了 12 個協作產品設計流程；每個公司一到三個。我們將它們發送給每個公司的線人，以檢查我們對其流程的解釋。在此過程中進行了較小的更改。它在兩側顯示了兩個並行的過程：左側是工業設計過程，右側是工程設計過程，中間示出了兩者之間的相互作用。中間的“產品計劃會議”是由“產品計劃小組”主持的活動，由他們決定是否繼續將概念商業化或拒絕。文本框是由輸入任務事件輸出組成的階段。帶有虛線的文本框不是階段。它們沒有所有四個階段的元素。例如檢查是一種決定。沒有輸入和輸出。垂直箭頭指示流程的進度。它還顯示了信息流的方向，前一級的輸出變成了下一級的輸入。水平箭頭表示“信息流”或“交互”的方向。圓形箭頭表示各階段內反覆且強烈的相互作用。稍後將這些分類為階段，並在下一部分中進行說明。 \n 1.2.3簡化流程一旦我們制定了每個公司的協作產品設計流程，我們就將它們分類以確定它們的類型，目的和條件。但是，由於每個公司的流程都包含詳細的設計動作和信息，因此直接在公司之間進行比較並不容易。因此，我們使用“流程塊”的概念簡化了每個公司的設計流程，以幫助它們進行可比性，同時保持基本特徵。 \n 我們發現在一組小的連續階段中存在一種模式。所有主要階段都完成了一項主要工作。完成後，一個清晰的新階段從另一個工作開始。我們將這些小階段定義為“流程塊”。它的特徵是初始輸入，內部迭代，決策，最終結果和不可逆趨勢。 \n 流程塊中的流程從初始輸入開始，並在內部的各個小階段中運行。迭代或反饋可能在塊內的各個小階段之間發生。最後，他們對最終結果做出最終決定。這是一個里程碑，指示該階段將跳到下一階段。例如，在圖 3 的藍色方框中，此塊的主要工作是開發執行六個小階段的設計概念。當他們處於渲染階段時，如果在渲染評估事件中不滿意渲染結果，則可以返回到構思草圖階段。在最後階段，設計模型作為結果由高層管理人員確認，然後跳至“產品計劃會議”。 \n 在前一個結果進入下一個塊的輸入之後，兩個過程塊之間的過程流幾乎沒有機會被逆轉。跨團隊通常進行最終設計，並由高層經理在每個工作組中批准。回到上一個區塊意味著它無法滿足市場時間表。因此，應該由最高管理層對此事做出決定。根據訪談數據，他們寧願放棄該項目，也不願返回上一個階段。在大多數基於階段的模型中都對階段之間的迭代和反饋進行了描述。但是，在本研究中，將一個過程塊或兩個並行塊視為一個階段，因此在實際情況中很少會發生階段之間的反向迭代或反饋。它發生在一個塊中的各個階段之間。因此，似乎在階段之間幾乎不可能放棄項目，但是在階段之間可以放棄。 \n 我們通過其主要工作來命名流程塊。在命名塊時，我們發現工程設計和工業設計使用的術語“概念設計”不同。工程設計中的概念設計是與技術概念有關的技術概念，該技術概念通過開發對工作結構和功能的廣泛解決方案來與產品的工作方式相關。但是，工業設計師在概念設計階段決定產品樣式和交互作用的方向，這由概念關鍵字，情緒板，想法草圖和用戶場景來表示。因此，我們標記了這個概念。 \n 工業設計師的設計活動稱為“  Concept Design-I ”，而工程設計師的設計活動稱為“  Concept Design-E ”。 \n 圖 3 中的彩色框使用了圖 5 中的相同彩色框進行了簡化。圖 3 中的藍色框變為“  Concept Design-I ”。圖 3 中的“產品計劃會議”定義為“產品計劃”，並以細長的六邊形可視化。由於它是一個單獨且獨特的設計活動，因此被確定為單個階段。在紅色塊內部，有兩個並行的處理塊；右側的“  Concept Design-E ”（紅色的小方框）是“主流程塊”，左側的“形狀修改”（黃色）是“對應的塊”。這兩個塊不視為單獨的階段，因為它們與紅色大塊內的起點到終點相連。這樣，兩個設計師團隊之間的互動就很強。為了區分兩個平行的塊，我們用粗實線表示主塊，並用淺實線表示相應的塊。在綠色塊中，由於所有 12 個流程之間的設計活動都沒有什麼區別，因此我們將詳細設計，測試和生產的兩個順序流程塊合併為一個。因此，在本研究中我們將它們視為一個階段。當綠色方框中的設計過程繼續進行時，工業設計師會根據工程設計師的要求或他們自己的設計檢查目的不時做出反應。他們通常將這些活動稱為“跟進”，與主要任務有所不同。這些活動顯然存在，但不屬於流程塊。它們是如圖 3 所示的離散過程元素，因此用虛線表示。為了幫助視覺理解，實心箭頭，雙向寬箭頭和單個方向寬箭頭分別表示過程流，相互交互和單向交互。 \n  1.2.4確定協作設計過程的類型我們根據 12 種簡化的協作產品設計過程的過程結構，過程塊和階段的輸入和結果的相似性以及工業設計師和工程設計師之間的交互性，對它們進行了比較和分類。我們首先將每個流程塊和階段與其他 11 個流程的相應流程塊和階段進行結構比較。然後，我們比較了 12 個流程中每個相應階段的投入和結果。例如，圖 5 中的 “ 概念設計 -I” 階段沒有輸入，但是產生 “ 設計模型 ” 作為輸出。其他過程中的某些 “ 概念設計 -I” 階段始於工程設計團隊的初步佈局設計。因此，檢查階段的輸入和結果的類型為確定總體流程如何進行提供了線索。最後，我們評估了一個階段中工業設計人員與工程設計人員之間的互動。藍色方框中的兩個組之間沒有交互。但是，在紅色塊中，它們之間存在強大的交互作用。結果，我們將 12 個協作產品設計過程分為四種代表性過程。 協同產品設計流程 2412 協作產品設計過程的類型我們根據協作產品設計過程的特徵來命名四種類型。 \n 類型1 ：由 ID 主導的概念驅動過程 \n 類型2 ：由 ID 領導的內外聯合流程 \n 類型3 ： ED 主導的“內部優先”流程 \n 類型4 ： ID ＆ ED 協同流程 \n 它們之間的差異主要存在於開發設計概念和初步佈局的流程的早期階段。在詳細設計階段之後，工程設計師的任務占主導地位，這之間存在一些差異。它相當標準化。這表明協作產品設計過程的類型由詳細設計階段之前採用的方法確定。 \n 兩家公司根據其目標和情況採用了一到三種類型的設計流程。類型 1 和類型 4 僅用於新設計，除了公司在短期內市場要求新樣式時採用類型 1 的公司之外。當他們有很多參考產品並且交貨時間很短時，就會發生這種情況。  Type 2 用於新設計和重新設計。有趣的是，類型 3 僅用於重新設計。除公司通過服務提供商將其產品發佈到市場外，大多數流程都用於 B2C 。考慮到公司在不同於公司 A 和 E 的情況下使用類型 1 ，業務類型（ B2B 或 B2C ）將影響設計流程的選擇。 \n 關於實際設計過程和文檔化過程之間的區別，他們中的大多數人回答說他們已經記錄了所有公司的標准設計過程，但根本沒有遵循。  Maffin 的發現支持了這一點，即設計師根據產品開發環境開發了自己的方法。看來，文檔化流程根據項目類型定義了標準化的任務流程和階段，每個部門的任務和角色以及項目時間。但是，他們總是被迫縮短實際項目時間。這種管理壓力很可能導致他們不遵循記錄的流程。 \n 通過比較每種類型過程的使用頻率，我們發現類型 3 是最常用的，而類型 4 是最少的。使用類型 2 的頻率比使用類型 1 的頻率更高。除了公司 B 的情況外，類型 3 與大多數受訪者所說的公司標準最為相似。考慮到重新設計的頻率比新設計的頻率高的觀點，成功的徹底創新可能每 5 至 10 年發生一次，這是一個合理的發現。由於類型 4 是由個人自發發起的，並且不是一套官方的標準程序，因此這種情況很少見。 \n 以下各節介紹了每種類型的設計過程的詳細特徵以及相關的上下文。 \n 2.1類型1 ：由 ID 主導的概念驅動的過程工業設計人員在決定類型 1 初始階段的產品開發方向方面起著主導作用。根據過程塊，它分為四個階段， \n 第一階段 （概念設計 -I ）：工業設計師獨立開發產品的概念，而不受其他部門的干擾。他們主要關注與美學外觀和用戶體驗有關的方面。他們很少考慮內部零件，這給了他們很多自由。他們為外部和高質量渲染圖像生成 3D CAD 數據以測試該概念。最終確定外觀形式後，他們將生產“設計模型”（一種無功能的原型）以驗證該概念。最後，在“設計評估會議”上選擇最佳設計。該階段的最終結果是外形的 3D CAD 數據和設計模型。工程設計師在此階段不採取任何行動。通常，他們甚至不知道工業設計師在設計什麼。 \n 第二階段 （產品計劃）：產品計劃部門決定所選設計的商業化以及目標市場，設計的目標價格和材料成本。最後，他們準備了產品計劃文件，並為設計的商業化確定了具體的方向。 \n 第三階段 （概念設計 -E / 形狀修改）：前一階段的產品規劃文檔以及由工業設計師開發的最終 3D CAD 數據是提供給工程設計師的初始輸入。工程設計人員回顧了工業設計人員提出的設計概念的可行性，因為工程設計人員收集了相關技術並在 3D CAD 數據中佈置了內部零件，以測試是否所有必不可少的內部功能零件都可以固定在外部表格中。有時，工程設計人員會製作實驗原型，以測試是否可以通過預設的外部形式實現所需的性能。由於工業設計師在定義外觀形式時沒有考慮內部零件，因此工程設計師在將內部零件佈置在給定形式中時遇到了麻煩。因此，以某種方式不可避免地要改變外觀。因此，對於概念設計 -E ，有一個相應的過程：工業設計師的“形狀修改”。工業設計師使用從工程設計師那裡收到的佈局數據來修改外觀形式。此時，兩個目標相互碰撞。工業設計人員嘗試保持原始形式，而工程設計人員要求進行修改以確保功能和性能。在這個過程中，發生了非常緊密的交互。結果是有關外部形狀和內部零件佈局的 3D CAD 數據。   第四階段 （詳細設計測試和生產 / 跟進）：從這一階段開始，工程設計師在所有零件中領導該過程。工程設計師根據上一階段確定的 3D CAD 數據確定各個零件的幾何形狀和成分結構。由於考慮了批量生產或可靠性測試，他們有時會要求工業設計師對外觀設計進行較小的修改。詳細設計完成後，將生產稱為 “ 工程樣品 ” 的工作原型，以檢查形式和功能。在這一點上，工業設計師要評估其外觀設計符合其設計理念的程度。然後，工程設計師通過多個事件過程來決定供應商，生產模具並測試 “ 預生產原型 ” ，以提高性能的可靠性和產品的耐用性。 另一方面，在 “ 跟進 ” 中，工業設計師決定如何對產品應用顏色，圖形，材料和表面處理，並為工程設計師提供相關規範。對於所生產的每種工作原型，工業設計師都要根據規格測試美學和情感品質。當他們批准後，他們在設計過程中的正式角色便結束了。除非獲得批准，否則工程設計師應再次生產和測試有問題的零件。我們發現所有六個公司都具有這種機制來維持產品的設計質量。類型 1 與傳統觀念相反，傳統觀念認為，新產品開發過程是通過市場研究或開發新技術來確定市場需求而開始的。它從完全自由的純工業設計師的概念開始。這意味著可以根據工業設計師在腦海中設想的圖片來開發新產品。這與工程設計學科中描述的產品設計過程不一致，在工業設計中，工業設計師在概念設計中的作用缺失了。 \n 考慮到相關的理論，即創造力是在以解決方案為導向的方法對問題進行徹底分析之前發生的，例如“主要生成器”和猜想分析模型（ Hillier ）、 Musgrove 和 O'Sullivan ，以及 Lawson 和 March 的其他相關發現和論點，對於公司來說，賦予工業設計者自由和自主權以產生創造性解決方案概念的最佳策略不受外界干擾。實際上，類型 1 在兩種情況下被使用：一種是開發形狀和功能都新的概念產品，包括開發新產品類別（如公司 A 和 E 中的產品），另一種是啟動新概念產品。盡快的現有產品。當有大量參考設計時，後一種情況似乎是可能的，因此，工業設計師可以在交貨時間短時決定產品尺寸和外部元素而無需任何產品規格。 \n 2.2類型2 ：由 ID 領導的組合內外過程公司使用此過程來開發新類型的產品或修改現有產品。在任何一種情況下，與類型 1 不同，產品計劃團隊都將啟動該過程。我們可以分四個階段來解釋類型 2 。   第一階段 （產品計劃）：產品計劃團隊創建產品計劃文檔以啟動產品開發。它設置了目標市場，目標價格和產品規格。在開發現有產品的修改版本時，它會根據現有產品（包括競爭對手的產品）做出決定。在開發新產品時，工程設計師會幫助他們做出決定。此階段的結果是一個產品計劃文檔。 \n 第二階段 （概念設計 -I ）：從產品計劃部門收到產品計劃文件後，工業設計師將決定產品的外觀和相關內部。他們收集符合產品尺寸和規格的待開發產品所需的功能項目，並從對用戶或設計趨勢的研究中得出形式概念。然後，他們安排內部零件以決定外觀形式，同時避免內部零件與預期的外部形式之間發生任何衝突。因此，它們在外形設計和內部零件的佈置之間來回移動。在此階段，工業設計師和工程設計師之間幾乎沒有互動。對於最後的事件，設計評估將使用無功能的設計模型進行。因此，此階段的結果是有關產品外觀和初始內部佈局的 3D CAD 數據，以及設計模型。 \n 第三階段 （概念設計 -E / 形狀修改）：從工業設計師那裡收到 3D CAD 數據後，工程設計師會密切檢查內部零件與外部形狀有關的可行性和可操作性，並製定最終佈局。工程設計師檢查它們時，經常要求工業設計師修改佈局或外部形式。因此，工業設計活動要進行相應的過程。但是，形式更改並不像 Type1 那樣重要，因為他們在上一階段決定了與內部部件有關的外觀形式。此階段的結果是有關最終外觀形式和內部零件確定佈局的 3D CAD 數據。 \n 第四階段 (Detail 設計測試與生產 / 後續）：此階段與類型 1 的階段沒有顯著差異。類型 2 的顯著特徵是工業設計師積極參與佈置內部功能組件，同時決定第二階段的外部形狀。儘管工業設計師對內部佈局和外部形狀之間的聯繫的了解較少集中在工程上，但這種情況很明顯。 \n 證明了工業設計師的作用已經超出了我們通常期望的範圍。結果，工業設計師變得有影響力並主動做出決策。此外，工程設計師幾乎沒有參與此階段。正如工程設計文獻所建議的那樣，我們期望版圖設計將是工程設計人員的專屬工作。我們假設至少工程設計人員會積極為工業設計人員提供建議和指導。但是，他們希望數據能夠從工業設計人員那裡獲得，並賦予工業設計師自由完成與產品內部結構有關的外部形式的能力。此時，公司的設計至上政策似乎是主要原因。 \n 2.3類型3 ： ED 主導的“內部優先”過程類型 3 與類型 1 和類型 2 有兩點不同：它們僅將其用於重新設計現有產品，工程設計師的活動先於工業設計師。它要求工程設計師扮演更重要的角色，同時減少工業設計師的角色。我們解釋它們的特徵如下： \n 第一階段 （產品計劃）：如圖 8 所示，產品計劃團隊首先根據年度產品開發路線圖啟動產品開發項目。在這一點上，它們確實具有功能路線圖中產品的概念。產品規劃專家根據市場上現有的產品確定目標市場，目標價格，產品尺寸和材料成本。工程設計人員經常通過分析競爭對手產品的技術部分並估算材料成本來幫助他們制定產品規格。此階段的結果是產品計劃文件，其中包括產品規格。 \n 第二階段 （概念設計 -E ）：工程設計師根據產品規格快速開發初步佈局。他們通常使用以前開發的產品的數據。完成後，他們將初步佈局作為 3D CAD 數據發送給工業設計師。這是工業設計過程的起點。工業設計人員將其用作開發外觀的輸入，而工程設計人員則尋求系統性能的解決方案並繼續優化佈局。隨著內部佈局和外部形式的同步發展，兩個團隊密切互動並討論分歧或衝突的任何方面，並反復交換反饋以進行修改。最終，當設計草圖發展為確定的外觀形式時，初步佈局成為確定的佈局。此階段的結果是確定的佈局，反映了所設計產品的最終尺寸。 \n 2.4階段 （概念設計 -I ）：該過程遠非一個獨立的後續階段，而是第二和第三階段之間的中間階段。因此，我們將其稱為第 2.5 階段。它從收到工程設計人員的初步佈局開始，並與 Concept Design-E 同時進行。工業設計師檢查內部佈局並以匹配的外部形式進行覆蓋。他們進行構想草圖， 3D CAD 建模，渲染，設計評估會議和模型選擇活動，以決定外觀模板的設計。工程設計人員不斷對外觀進行建議和評估。這樣，通過相互關聯的 Concept Design-I 和 Concept Design-E ，外觀形式和佈局便逐漸發展。 \n 第三階段（詳細設計測試和生產 / 跟進）：該階段與 Type 1 和 Type 2 並無明顯不同。 \n 除公司 B 以外的所有公司都使用此過程。這表明它被最廣泛地使用。受訪者指出，該過程在角色，任務和階段方面可與公司的官方設計過程指南相提並論。但是，他們提到實際時間比準則中指定的時間短。 \n 2.5類型4 ： ID ＆ ED 協同過程類型 4 不是通過官方提議發生的，而是個人設計者在早期階段所做的努力。在許多情況下，參與設計的工程設計師 \n 由於有限時間內的可行性問題，排隊模型往往會拒絕工業設計者提出的新穎設計概念。為了實施這些概念，工業設計師與自由設計師合作。因此，該過程使繼續拒絕的新穎設計概念成為可能。此外，工業設計師和工程設計人員也做出了協同努力。與傳統的分離方法不同，它們以集成方式處理設計概念，同時考慮了許多設計變量。此過程的詳細階段如下）： \n 第一階段 （概念孵化）：工業設計師獨立地構思新設計。他們大都是根據儘管有創新性但仍未進行項目的設計思想來構建它。 \n 第二階段 （概念設計）：此階段始於工業設計師尋找可以與他們合作的工程設計師。當工程設計師同意加入工業設計師以實施設計概念時，他們將在整個階段中緊密合作。工程設計師為工業設計師提供最先進的技術，以增強設計理念。內部佈局的第一層是根據要開發的外部形狀開發的。該階段的結果是有關外觀和內部佈局的 3D CAD 數據。 \n 第三階段 （產品計劃）：產品計劃團隊通過設計評估會議來決定設計的商業化。然後，產品計劃團隊定義設計的目標市場。從這個階段開始，負責開發陣容模型的工程設計人員就參與其中。 \n 第四階段 （詳細設計測試和生產 / 跟進）：該階段的過程與類型 1 、 2 和 3 的過程沒有太大不同。 \n 現有的產品開發環境使工程設計人員趨於保守。消費電子領域的大多數開發項目都是緊迫的。公司通常會在計劃中設定產品發布日。因此，設計人員將按照時間軸執行所有任務和事件。根據訪談數據，參與此類項目的工程設計師傾向於拒絕工業設計師提出的新穎設計概念，因為他們認為他們無法確保其概念的工作在選定的時間內通過了性能和可靠性測試。 。測試失敗將直接影響公司的產品開發路線圖以及工程設計師評估時的年度績效。這似乎使他們保守地選擇和評估設計概念。因此，對於直接參與按時間表進入市場的項目的設計人員來說，幾乎無法使用此過程。相反，例如，從時間表到市場相對自由的工程設計師，那些參與為未來產品開發先進技術的人員，將對新穎的設計理念更加開放。此外，更重要的是，似乎更願意與其他專家合作進行設計的設計師傾向於執行此過程。 \n 對於 D 公司，採用這種工藝的新產品在 Type 4 方面取得了巨大的市場成功。但是，在我們的採訪中沒有報告更多將這一過程積極應用於後續項目的案例。儘管如此，有趣的是 D 公司還是從先進技術開發團隊派遣了幾名工程設計師到工業設計團隊的相鄰辦公室。這啟用了協同處理案例。高層管理人員故意移動它們，以防止工業設計師提出不切實際的設計概念，方法是讓他們迅速為工業設計師提供必要的技術支持。這似乎激發了雙方更加親密，從而營造了合作的氣氛。這將增加新興的集成設計流程的可能性。 \n 3討論與啟示  3.1角色變更 \n 工業設計師的貢獻在概念設計階段占主導地位，此後，工程設計師接任其主要角色。 \n 被視為四種設計過程的一般特徵。除類型 3 外，所有設計過程均始於工業設計師開發的設計概念。對於類型 1 和類型 2 ，工業設計師根據形狀和用途獨立定義設計概念。  Type 4 在概念設計階段是集成的，但從工業設計師的初始設計概念開始。與其他三種類型不同，發生對現有產品的計劃修改的類型 3 情況，是從工程設計師的佈局設計開始的。看來他們的角色分為概念開發者和概念實現者。有趣的是，當一家公司追求新概念的產品或強調情感感覺和可用性（即使在重新設計案例中）時，工業設計師的作用似乎也很重要。這與通過開發新原理和技術來開發新概念產品的想法不同。他們寧願設計新用途或現有用途的含義。因此，這可以被視為新設計也從現有技術和原理開始的證據。 \n 關於工業設計師的知識，與我們認為很少考慮內部零件的信念相反，他們似乎具有足夠的知識來閱讀和處理內部功能組件並進行外部設計。除類型 1 外，外觀設計總是通過工業設計師考慮和重新佈置內部功能部件來實現。類型 2 是意外情況。工業設計師通過以下方式開發外形同時安排相關的內部組件。但是，他們在內部零件上的工作可能僅限於直接影響外部形狀的主要零件。儘管他們沒有完全參與設計內部零件的細節，但是很明顯，他們的作用已擴展到工程設計領域。這歸功於最高管理層對工業設計的大力支持以及兩組之間共享的 CAD 工具。 \n 3.2選擇設計方法 \n 理論上，發生了“由內而外”和“由外而內”的方法，這些方法是由工程設計師和工業設計師的不同工作傾向共同造成的。四種類型的協作設計過程可以看作是這兩種方法的擴展版本。本節討論四種類型與兩種方法之間的關係，以及成功應用每種類型並將其應用於顧問和客戶合作夥伴設置的條件。對於強調使用環境的消費產品，應該由工業設計人員首先定義與可用性和外觀相關的外觀，然後工程設計師確定與外部鏈接的內部功能部件以支持可用性和外觀。在這種情況下，這是一種由外而內的方法，其中類型 1 適用，類型 2 幾乎適用。如果我們將“由內而外”的過程定義為首先確定初步佈局，然後將其用於共同開發隨後的外部形式和確定性佈局，則類型 3 就是這種情況。考慮到這兩種方法，類型 4 被視為混合過程，因為外部和內部同時定義。如果我們將“由內而外”的過程定義為完成內部確定的佈局後再決定外部，則此處研究的公司中沒有這樣的過程。它不太適合與消費產品一起使用。它非常適合工業耐用品。例如，如果我們設計一個工業電動機，其容量將決定電線的纏繞數和磁芯的尺寸。我們應該科學地計算內部轉子和定子的佈局和尺寸，以實現最佳性能。因此，必須首先完全確定內部零件，然後將外部形式定義為覆蓋。如果我們根據預設的外部形式開發電機的內部零件，它將無法正常運行。 \n 使用 Type 1 時，工業設計師可以自由提出創新的設計思路。然而，該方法將導致兩個問題。首先，很難獲得工程技術性能。為了獲得最佳性能，內部功能部件可能會與外形衝突。其次，要解決第一個問題，設計團隊可能會在功能和外觀之間進行權衡，從而損害原始設計概念。為了成功地管理此方法，在以下情況下，高層管理人員必須保持強大的支持以保持設計的創新性。 \n 妥協將發生。正如我們在公司 B 中觀察到的那樣，類型 2 可以替代該問題。它的策略是由工業設計人員在移動或放置相關內部零件時確定外觀形式。這避免了內部和外部之間的嚴重干擾。然而，有爭議的是，工業設計師是否應在外觀設計開發之外還進行室內佈局設計，以犧牲想像力為代價。他們很可能會在自己的知識範圍內折衷創新。要成功應用 Type 2 ，設計師應該對工業設計和工程設計都具有很高的知識。 \n 為了在早期階段獲得高級設計概念的可行性，值得注意的是 Type 4 ，因為工業設計師的概念和工程設計師的技術支持可以開發新產品。鑑於此過程有效且有可能開發創新產品，公司需要為其提供適當的使用條件。戴森公司可以成為榜樣。眾所周知，設計師和工程師作為一個部門的成員共享一個工作區，以實現設計的集成實施。為了促進此過程，公司需要有一個集成的團隊，其中兩個小組共享一個工作空間，並按預期吸收每個學科的文化。沒有這種情況的改變，類型 4 甚至作為公司中有據可查的流程都將無法有效地發揮作用。 \n 在行業中，許多工程公司與外部工業設計師合作。儘管我們沒有調查這種類型的合作，但是，根據我們的發現對可能的過程方案進行討論將是有益的。當製造商與設計諮詢公司合作時，他們可以得到補充支持，以按時完成項目或產生新的想法。在顧問和客戶的合作關係中，有兩種過程耦合方式：被動耦合，其中顧問在與客戶聯繫以獲取更多信息或查看其結果時獨立開發解決方案，以及主動耦合，其中顧問和客戶設計師的協作團隊在工作緊密聯繫以產生解決方案。在無源耦合中，由於外部設計師獨立工作，其設計過程將類似於類型 1 或類型 2 。當客戶希望通過利用他們缺少的特定專業來收集盡可能多的創意時，類型 1 將非常有用。當客戶公司高度以技術為導向並且具有足夠的能力在強大的工程支持下實施好的概念時，這種情況將非常有用。如果客戶的能力低於上述情況，並且需要在初期階段就聘請外部工業設計師來領導他們的產品開發，則類型 2 將是合適的。主動耦合模式將具有與類型 3 和類型 4 相似的過程。如果客戶端已經具有類型 3 ，則類型 3 是合適的。 \n 良好的設計方向和相關技術，並希望改善產品的美學外觀。除非客戶和顧問公司的集成團隊在項目期間在同一空間工作，否則將根本無法實現類型 4 。在顧問和客戶合作夥伴的協同設計過程中應該考慮其他因素。在許多情況下，客戶為顧問提供的信息在一定程度上受到限制。因此，在顧問和客戶合作夥伴以及公司內部發生的相同類型的協作過程在內容方面將是不同的。儘管如此，我們的研究結果和討論仍可為在消費電子領域選擇更好的設計方法提供線索。 \n 3.3設計過程類型的含義工業設計師和工程設計師在設計方法和對產品開發的看法方面有所不同。工業設計師產生以用戶為中心的解決方案概念，工程設計師根據技術角度解決設計問題。這兩個群體的特殊性所涉及的過程可以成為開發具有競爭力的創新產品的基礎。此外，系統工程設計與以用戶為中心的設計思想的耦合過程有利於在顧問與客戶之間建立以用戶為中心的解決方案。耦合過程是公司採取並實現市場競爭力的最佳選擇。例如，消費電子公司使用四種類型的協作設計過程來實現其市場目標。在這四種類型的早期階段，工業設計者的作用是顯而易見的，採用工業設計師專業的方式是採用適當類型的協作設計過程的影響因素。通過給予類型 1 中的工業設計師自由，可以增加獲得創新設計概念的可能性。那麼，這種自由如何驅動工業設計師創造創新設計概念呢？實際上，建築和工業設計人員首先從解決方案圖像入手，然後通過重複試驗進行最終確定。這與設計者首先基於預設進行猜測然後進行分析的模型是一致的。這意味著工業設計者依靠對未來的展望來創造創新的概念，而不是對市場和客戶進行深入的設計研究。補充說，工業設計方法是價值驅動的。因此，類型 1 的工業設計師可以不受限制地通過設想期望的未來來產生創意。 \n 認為，創新產品開發是通過技術或含義的改變進行的，而不是以人為中心的認真的設計研究。他們補充說，以人為本的設計方法更適合於現有產品的逐步改進產品。在消費電子領域當前的產品開發環境中，產品規劃專家在市場和客戶研究中起著關鍵作用。因此，產品規劃團隊對工業設計師的投入將僅限於他們的創造力。這解釋了為什麼公司以相反的方式使用 Type 1 ；首先開發概念，然後再定義市場，而不是相反。通常，在產品設計概念中，設計師會考慮與技術高度相關的功能概念，以及會給用戶帶來新含義的樣式概念。因此，由於功能和 / 或樣式概念，工業設計師提出的設計概念應該是創新的。當涉及到技術時，工程設計師應開發新技術或尋找合適的技術來實施該概念。如果在產品開發計劃階段不予以拒絕，則這種類型的過程可以導致新技術的開發。 \n 在類型 2 中，公司對工業設計師承擔各種角色和職責。由於工程設計師不會打擾他們，所以他們可能有一定的自由度。工業設計師的方法是面向解決方案的。他們通常不遵循系統的過程。他們寧願提出新的想法並重複他們。但是，類型 2 可能通過強加他們在內部佈局設計和外部設計中扮演的另一角色而中斷了工業設計師的方法。工業設計師採用面向問題的系統方法肯定會限制他們在概念開發中的想像力。在考慮其設計概念的可行性時，這將使它們更加現實。因此，類型 2 的設計結果將不如類型 1 的創新。否則，類型 2 將比新設計更適合於重新設計。如果工業設計師不考慮使用 Type 2 的內部零件進行重新設計，則他們可能會面臨困難，並且設計概念可能會被拒絕。如果我們考慮將類型 2 和類型 3 用於重新設計，那麼類型 2 何時比類型 3 更好？類型 3 的特性符合工程設計中顯示的大多數設計過程。在設計設計領域，工業設計被認為是事後的想法。按照他們的觀點，工業設計的功能與確定產品的技術特徵後的外觀，樣式，形式和顏色等方面有關。第 3 類是工程設計師為設計概念提供技術解決方案的過程。他們要求工業設計師開發外觀。因此，類型 3 僅使用工業設計師的專業知識來創造美學外觀。從這個角度來看，類型 2 可以為工業設計師提供比類型 3 更多的方式來展示他們的專業知識。考慮到類型 3 是最常用的過程，因此在過程管理方面它可以更加有效。類型 3 早期階段的不確定性可能是四種類型中最小的。的大多數技術解決方案 \xa0 設計概念是由工程設計師在早期階段設定的，而工業設計師僅局限於創造美觀的外觀。 \n 我們無法發現的一個過程是類型 5 ： ED 主導的技術驅動過程。這可以與類型 1 ：由 ID 主導的概念驅動過程形成對比。在類型 5 中，工程設計人員將首先開發一項新技術而無需考慮產品開發計劃，然後通過測試原型來測試其性能。接下來，工業設計師為該技術提出了新的產品設計概念。然後，可視化的設計概念和原型可用於決定產品開發。應用類型 5 ，公司可以創建新類別的產品，從而增加了打開新市場的可能性。我們找不到這種類型的原因之一是創新技術開發的稀缺性，以及新技術滿足新概念的難得機會。另外，在決定產品開發之前，公司不太可能等不確定的工程設計師和工業設計師。為了使這一過程更好，我們需要工程設計人員開發新技術，而工業設計師則需要使用相互合作的技術來創建新概念。根據這種說法，類型 4 在正式申請創新產品設計時可能有用。它還可以使工程設計師開發的技術與工業設計師提出的新概念集成在一起。 \n 4結束語我們旨在確定協作設計過程類型的存在以及在公司中採用特定類型的條件。我們根據工業設計師和工程設計師的深入訪談數據建立了協作設計流程。結果，我們發現了四種類型的協作設計過程。根據設計過程早期階段的不同對它們進行了分類。四種類型的過程在不同的上下文中用於不同的目的。有時，它們會被戰略性地用於開發新設計或重新設計，有時它們會由於內部和外部因素而有機地應用。我們還發現，工業設計師的作用是有影響力的，而且是擴展的。 \n 設計過程模型的抽象特徵和研究中的一門學科方法與實際實踐並不完全匹配，並且被確定為造成這種問題情況的原因。在這方面，要求組合不同的設計過程模型。四種類型的過程是工業設計師驅動的以解決方案為導向的方法和工程設計師以問題為導向的方法的組合過程。它們表明，即使在單個領域（即消費類電子產品），實際的設計過程也無法用單個模型來表示。為了提高適用性 \n 設計過程並為了在設計實踐中獲得設計方法的適當支持，需要考慮公司和項目特定環境的更具體的過程模型。我們特別專注於消費電子領域，在該領域中，工業設計師和工程設計師在產品開發方面很重要。我們找到了四種類型的設計過程，並確定了它們的目的和背景。因此，我們的發現與上下文相關的細節將為公司計劃針對新產品開發的有效設計過程管理提供有用的信息，尤其是在消費電子領域。 \n 根據研究方法，我們展示瞭如何從設計師的深入訪談數據中建立協作設計過程。我們確定了流程元素，使用它們構建了部分流程，並使用鑲嵌方法構建了詳細的協作設計流程。我們還引入了“過程塊”，並將一個或兩個相互作用的塊定義為一個階段。我們認為這種方法有利於確定最佳水平的實際設計過程。我們認為該方法適用於發現其他設計過程。我們的過程模型的形式可與其他基於階段的模型相媲美。我們從模型中發現，在階段之間很少發生反向迭代或反饋。這與現有的基於階段的工程設計過程模型的描述不同。在理想情況下，我們認為雙向迭代是可能的，但是實際上由於激烈的市場競爭，我們認為這種情況很少發生。 \n 特別是針對其他產品領域中的其他項目案例，需要對該方法進行進一步的研究。本研究中的公司均為電子產品製造商。因此，結果僅限於此產品類別。我們需要測試這四個協作設計過程如何在其他公司中應用。相反，值得研究創新產品開發和應用過程的案例。 \n", 'tags': '', 'url': '主題0.html'}, {'title': 'Assignments 3', 'text': '', 'tags': '', 'url': 'Assignments 3.html'}, {'title': 'MechaFutureAndChallenges', 'text': '翻譯章節: MechaFutureAndChallenges \n 第 1 章機電期貨 \n 1.1 挑戰 \n 自 Tetsuro Mori 提出機電一體化系統的概念以來，已有 40 多年的時間，以表述其日益增長的影響。電子元件本身就具有控制和操作的能力，機械系統是一個重要的時期，快速的技術變革。特別是，內部的重點已經轉移從硬件到固件和軟件的系統，導致引入圍繞智能設備的使用構建的各種消費品，他們中的許多人本質上仍然是機電一體化的，包括越來越複雜的電子產品和軟件。當與增強的本地和遠程通信結合使用時，導致基於智能對象能力的系統的發展相互通信，從而根據上下文。   反過來，這導致了諸如網絡物理等概念的發展 驅動交互的系統，物聯網和大數據通過智能對象和信息的組合。用戶通過智能對象訪問的結構利用各種通常不為人知或看不見的資源提供的資源。 \n 表 1.1 所表示的準備金的增長也導致了增加複雜的用戶系統（例如智能手機）的可用性，並越來越多地融合了高質量的靜態和視頻成像功能。與傳統相機相比，它們現在負責的圖像更多。它還導致引入了一系列用於行為監控的用戶設備，智能手錶和平板電腦，它們都可以與其他通過互聯網媒介的智能設備。一起說明了此類設備的日常使用情況。對機電一體化的設計，開發和實施有影響系統，以及機電一體化本身的未來。 \n \n \n \n \n 2014年，在瑞典的卡爾斯塔德，來自世界各地的許多從業者被問到一言以蔽之，提供他們對所面臨的最重大挑戰的看法由機電一體化在未來的幾年中。收到的響應如圖 1.5 所示。並將在本章以下各節中進行詳細討論。   \n 1.2 挑戰 \n 通過以上回答，關鍵問題可以總結為： \n \n 設計 \n 隱私和安全 \n 複雜性與道德 \n 人口老齡化 \n 用戶 \n 可持續發展 \n 教育 \n \n 以下各節將簡要討論其中的每一個。 \n \n 1.2.1 設計 \n 工程設計的常規方法通常遵循以下路徑： \n 由圖 1.6 的簡化 V 模型定義的，並實現了集成，通過結構化的系統定義，然後進行系統開發過程並適當的測試制度支持的驗證，以支持驗證和驗證。各個模塊和子模塊，包括來自外部的模塊和子模塊，然後通過規範，測試，驗證和驗證以確保整體系統功能。 \n \n \n 通過協同互動，這種方法已經發展了許多年，在設計理論和設計實踐之間。但是，在這種情況下，設計理論必然不可避免地落後於實踐，在這種實踐中，人們正在探索新技術所提供的可能性，也許沒有必要完全理解能力或含義。 \n 在網絡物理系統和物聯網的情況下，系統是一個動態實體，智能對象根據上下文和需求進入或離開。在大多數情況下，基於雲端的組件在被採用之前對於用戶是未知的，並且同樣可能適用於任何功能性智能對象。這給設計師帶來了以下問題，確保系統不易被其包容，同時認識到系統根據需要進行自我配置的能力。   因此，從本質上講，用戶指定了系統功能和內容，之後系統自動配置從雲端中選擇具有信息的所需軟件和數據組件，然後成為其價值由用戶上下文確定的商品。涉及物理組件的地方，例如 : 在智能家居環境中，標識和選擇將由用戶指導。設計人員面臨的挑戰是提供工具，以使動態系統配置的影響能夠在設計過程的最早階段就被探索，並將這些結果集成到設備功能中， 適當程度。 \n 1.2.2 隱私和安全 \n 許多與物聯網相關的設備都具有收集大量個人數據的能力，其中許多可能保存在用戶不知道的區域和方式中。然後，對這些數據進行分析的可能性以及相關的曲解的風險會影響隱私。但是，這必須是平衡潛在的提取有益知識的能力，尤其是在基於 eIoT 等基於 IoT 的應用程序的上下文中。在更廣泛的安全性範圍內，系統在個人和公司級別上保護自身免受入侵的能力越來越重要。表 1.2 根據信息系統審計與控制協會進行的調查顯示了感知到的威脅級別。 \n \n 因此很明顯，系統設計人員的負擔越來越重。將隱私放在其設計過程的核心內物聯網，網絡物理系統和大數據，並且必須反映在設計過程本身以及支持該過程的方法和工具中。 \n 1.2.3 複雜性與道德 \n 隨著系統變得越來越複雜並開始以更大的自主性運行，所有利益相關者理解其能力的能力引發了問題。從醫療保健到自動駕駛汽車的各種應用和環境的特性和功能。在將一個人或多個人的福祉或生命責任委託給系統的情況下尤其如此。其他問題包括： \n \n 技術的雙重用途 - 無人機等技術可以有益的應用，例如在作物管理中，也用於軍事和其他目的。 \n 技術對環境的影響，技術的引入，進入環境可能會以多種方式破壞和改變該環境，即使潛在意圖是良性的。 \n 技術對全球財富分配的影響 - 技術的使用 gies 可以增加不同社會群體之間的距離，即使在同一國家也是如此。 \n 數字鴻溝和相關的社會技術鴻溝 - 訪問和使用服務程序的能力之間的差距越來越大，通過雲端計算。 \n 確保公平獲取技術 - 控制對技術的訪問可能會限制開發。 \n 技術成癮，個人沉迷於技術他們使用的。 \n 技術鎖定，個人可以被鎖定到特定的技術中，gies，一個簡單的例子就是在 Apple 和 Android 之間進行選擇。 \n \n \n 人類的非人性化和擬人化通過消除責任感他們的活動和福祉的能力。 \n \n \n 1.2.4 人口老齡化 \n 面對人口老齡化，圖 1.7 顯示了過去和預期的變化。歐洲各年齡段的分佈情況，人們提出了一些問題，即如何最好地利用技術來支持老年人，並設法為他們提供更多老年人的獨立程度。特別是，有必要確保物理和信息領域內的流動性達到適當水平，以防止個人保持獨立性並與社會互動。 \n 1.2.5 用戶 \n 可以看出，具有互聯網功能的設備的可用性通過使用社交媒體對社交行為產生了重大影響，但也允許比以往任何時候都更容易獲得信息。這樣的設備還支持與環境的交互級別提高，例如在智能家居中。此外，可穿戴設備的推出為 eHealth 和 mHealth 支持個人福祉，進而引發隱私和個人數據的控制。 \n 但是，還需要開發新形式的用戶界面來支持，與此類系統進行交互的能力的用戶範圍更加廣泛。特別是，越來越需要能夠捕獲用戶意圖和上下文的信息。一種不需要復雜形式的交流或知識的方式的基礎技術。 \n 1.2.6 可持續發展 \n 人們認識到有必要朝著以個人和他們的需求為中心，以有效的人為中心的更可持續的社會形式發展，老化和所有可用資源的使用，如圖 1.8 所示。在上下文中作為機電一體化的一部分，它集成到諸如智能家居和智能城市等概念中，這些信息用於管理日常活動。 \n 例如，估計平均而言，在德國城市需要大約 4.5 公里的行駛時間，對於每輛汽車排放約 140 克的二氧化碳 / 公里，這將產生至少 630 克的不必要的二氧化碳，並且在停走交通中也要多得多。通過鏈接可用停車知識，通過適當的通信與車輛目的地之間的空間，可以消除大部分這種多餘的影響。表 1.3 中提出了影響城市的其他可持續性問題。 \n 因此，總的來說，正在朝著建立可持續社會的方向邁進。與個人的聯繫以及解決人口老齡化等問題的核心，資源可用性和管理，氣候變化與彈性。關於機電一體化和物聯網，實現可持續性的基本要求是有效管理和使用所有資源。通過綜合使用服務信息來實現技術，物理和人通過一系列智能對象。 \n \n 反過來，這意味著有效和適當地使用信息，以通過採用來支持個人參與其生活方式的各個方面新穎，創新的方法來理解，構建和管理物理和信息環境以及它們之間的關係圍繞物聯網配置的知識經濟的一部分。 \n 兩種不同的城市場景如下： \n 方案 1 ：新建，目的是實現物理和物理的集成信息環境從一開始就受到諸如以下設施的支持作為高速寬帶網絡，並具有部署各種智能設備的能力這些環境中的技術。 \n 方案 2 ：已建立的社區 - 這些社區代表了大多數人口，這意味著在引入基礎結構方面的變化將需要考慮對現有環境的影響以及該環境對技術需求的適應性。 \n 1.2.7 教育 \n 機電一體化教育一直面臨著適當平衡的挑戰，了解集成要求的技術水平機械工程，電子學和信息技術的核心學科。鑑於圖 1.9 所示的過去 40 多年中技術基礎的長，機電一體化課程設計者在實現這種平衡方面面臨的挑戰已變得十分明顯更複雜。 \n \n \n 除了與課程開發相關的課程設計挑戰之外，技術還需要考慮許多其他因素。這些包括： \n \n 交貨變更 \n 大規模在線公開課程 。 \n 基於教程和研討會的學習支持 。 \n 混合式學習 。 \n 社交媒體對學習的影響 。 \n 結構性問題 \n 分佈式學習資源 。 \n 內容的時間值 。 \n 協同工作 。 \n \n 因此，未來的關鍵因素是鼓勵創新，通過教育實現機電一體化的方法 ( 圖 1.10 ）。 \n 1.3 章節結構 \n 本書由邀請作者組成的一系列章節組成，每個章節都是機電一體化領域的專家，在每種情況下，作者都面臨著挑戰，需要通過自己的研究或研究來確定當前的技術水平，以專業知識為出發點，然後試圖隔離並確定那些需要或可能在未來幾年中進行重大發展的關鍵領域。各章本身的組織如表 1.4 所示。 \n \n 1.4摘要 \n 儘管核心技術和概念基本上保持不變，自從概念以來，機電一體化的性質已經發生了重大變化是最初提出的，而且這種變化可能會繼續加速。在前面的章節中已經確定了要解決的一些問題和挑戰，並將在隨後的章節中進行開發和擴展。 \n 第 2 章 機電一體化中斷 \n 2.1 它是如何開始的 \n 機電一體化領域始於 1970 年代，當時需要機械系統更精確的受控運動。這迫使工業界和學術界探索傳感器和電子輔助反饋，同時在生產設施中主要使用電動驅動器而不是例如機械凸輪軸。這種引入反饋控制的運動構成了需要使機械工程師和電子工程師可以更好地合作，並彼此理解語言。請注意，當時的控制工程部門大部分是工業和學術界的電氣開發或研究部門的一部分。還採取了各種舉措，以開發通用的語言或方法。一些機構將機電一體化作為一門新興學科向前推進。 \n 在行業中，設計團隊通常被迫在規範級別上從他們特定的學科知識中真正地討論更深刻的見解。計算機輔助的設計和仿真工具在 1980 年代末期和 1990 年代確實推動了這一領域的發展。面向項目的機電一體化工作方式的一個例子是光存儲設備的開發，如圖 2.1 所示。機械設計人員的團隊使用他們的有限元程序，以及電子和控制專家以及他們的特定仿真工具，共同開發了機制，並對可製造性，成本和動力學提出了非常嚴格的規範。 \n 在 1980 年代同一時期，在許多行業和學術界，機械工程師開始越來越多地解決動力學和控制問題，而控制組也開始出現在機械工程系中，所有這些都標誌著人們已經擺脫了圖 2.2 的單一學科方法。 \n \n   \n 2.2 計算機控制設備 \n 個人計算機的飛速發展，使人們能夠更好地使用仿真和設計工具，從而在早期階段改善了總體設計過程和設計思想交流的質量。但是，同樣重要的是，基於 PC 的數字化計算機控制機電系統的測試和實現。這需要解決計算機科學工程的作用以及表示需要包括軟件規範，但仍然相當有限程度。這也導致越來越多的系統工程領域進入行業，成為在更複雜的產品和高科技系統上進行工作的一種方式。但是，請考慮“通用”語言，或者至少要理解每種語言。更好的是，顯然在硬件和軟件領域之間的瑣碎事情要少得多，而不是硬件領域本身。 \n 從研究的角度來看，問題始於離散的時間級別，即如何使用計算機來實現控制功能，以前盡可能通過模擬實現來進行維護。但是，很快將更高級別的監督控制模式引入了機電一體化領域，這迫使人們進行研究以使其轉向更多領域。離散事件系統面臨的更困難的問題是，面對機械系統中的連續時間動態。這導致了系統和控制學科內混合系統的研究領域。這部分構成了硬件（舊的機電一體化）和軟件（計算機科學）領域之間的自然接口。 \n 2.3 應用 \n 機電一體化思想帶來的性能提升是深遠的並得到廣泛認可。機電一體化的應用可以在許多產品和生產環境中找到。儘管在早期，控制電動機是一個經常看到的應用，但機電一體化的思想也是用於液壓系統的設計，壓電驅動執行器，建模和控制生產設備，科學設備，光機電一體化，汽車機電一體化等。 \n 監督過去幾年提交的機電一體化論文的流入情況，有關醫療設備，高精度系統，無人機（ UAV ），汽車和機器人技術的更多應用論文已提交。關於建模語言和工具的科學成就的論文有所減少，這可能意味著合適的工具現在更加普遍。機電一體化教育方面的論文似乎也是如此。這是 1990 年代後期的熱門話題，在那裡找到了很好的例子，包括為學生做的實驗工作。 \n 關於所謂的機電一體化設計方法的討論文件也不再那麼多了，因為到目前為止，很明顯，其中的一部分的機電一體化在實踐中所做的創新與幫助識別溝通的方式，最好通過使用共享模型或量化模擬。機電期刊提交中涉及的科學方法主要出現在系統和控制領域，在該領域中，機電應用通常被用作驗證或僅作為示例。 \n 使用優化算法，不僅可以找到最佳控制律，而且越來越多地用於組件設計，直到系統拓撲優化為止一個新的設計工具。機電一體化項目和社區的核心仍然是機械工程，電氣工程以及系統和控制領域。與計算機科學和物理之間的相互關係仍然相當有限，但這將轉移到未來幾年。 \n 2.4 多物理場 \n 高端機電一體化系統（例如用於光學光刻或電子掃描探針的圖 2.3 中的晶圓掃描器）以及在空間應用和科學儀器中的誤差預算越來越接近於平坦分佈在各種來源上。 \n 例如，對於現代晶圓掃描儀，熱和冷卻流體引起的振動，現在與致動器激發的機械模態振動一樣重要。這與極端條件和要求有關；以超過 10 g 的加速度移動 80 kg 的質量，並達到以下精度納米，具有 mKelvin 溫度變化。這意味著“正常”機電一體化及其運動控制系統現在開始具有動態的具有熱和流體控制動力學的作用。整體表現評估和設計改進現在不僅涵蓋機械和電氣 / 電子和軟件學科，還涉及物理問題，例如基於熱和流體偏微分方程的建模。那會是什麼當我們包括附加製造的可能性時，對機電一體化設計思維有何影響？如果可以使用 3D 工業金屬或陶瓷打印機自由調整我們的機構形狀，那麼如何獲得整體最佳設計？ \n \n \n 如果我們能夠通過適當的系統工程和更多學科來處理這種複雜性，那麼現在只能將性能折衷提升到一個新的水平。 \n 在圖 2.4 中，以性能與資源的關係形式描述了這種趨勢。情節，資源可以是金錢，人員，開發時間，計算機能力，能源等。性能通常是準確性，吞吐量和魯棒性可靠性。曲線表明，達到更高的性能確實會花費越來越多的資源，直到不可行為止。在圖中，還繪製了示例。第一，一個簡單的變速箱齒輪系統，性能低下（就精度而言），並且需要有限的資源。圖中第二個示例是現代晶圓掃描儀是極端性能和巨大需求的典範資源。 \n 曲線表明，為了進一步促進創新，我們需要包含兩種方法。首先，針對所有相關學科，因此包括實例物理，我們將能夠提高性能。二，介紹在系統工程方法中，我們可以更好地處理複雜性，因此在資源軸上就不多了。   \n 2.5 機器人 \n 與上述高端系統幾乎相反，機器人技術領域也影響機電一體化領域。在這裡，不是需要多物理學科，而是計算機科學領域來應對非結構化和不斷變化的環境。在機器人技術方面，發展方向是視覺，地圖繪製和本地化，因此不僅要了解環境（“世界建模”），還要了解人工智能（ AI ）領域，這已經是數十年的承諾，但可以發展在未來幾年迅速發展。由於即將推出的自動駕駛汽車，這兩個領域目前都處於加速階段。在動力總成（即電驅動和變速箱）領域以及計算機科學的應用領域，汽車行業的破壞力是巨大的，例如現代汽車中的傳感器，包括在乘用車和商用車中實現的自動功能的快速發展。事實上，這一切都與機電一體化，人工智能，控制有關！ \n 機器人技術領域，包括自動駕駛汽車，可以看作是獨立於機電一體化的研究領域，但例如速度要求，工業機器人的數量或外科機器人（例如圖 2.5 的 Preceyes 機器人）的精度要求有必要包括以下內容： \n 機器人的動態行為。從剛體建模到柔性系統的轉變，直接使其成為機電一體化的核心。系統工程思想和系統拓撲優化也是如此，在車輛的混合動力系統中也是如此。機電一體化的終結和機器人技術的啟動？ \n 2.6 網絡物理系統，智能產業和物聯網 \n 從分散的機電一體化系統到聯網的系統的轉變被稱為網絡物理系統領域，指的是控制論領域。研究的問題是如何在數據包（信息）丟失期間或之後保證穩定性和性能，以及如何處理可變延遲。該領域距離機電一體化的硬件還很遠，但是發展如此之快，我們應該問一個問題，充分利用網絡控制系統的潛力，例如在遠程狀態監視和服務領域。在接下來的十年中，物聯網（ IoT ）的爆炸式增長進一步要求找到該問題的答案。   機電一體化將在 IoT 的未來發展中成為一種應用。工業 4.0 或智能工業的關注點是關於聯網的現代工業自動化。 \n \n 如果共享物流知識，如果一個工作站的性能達到是否優化了作為總物流或運營的一部分，如果生產設備中的服務和維修功能強大，因為工作站靈活並且可以適應？ \n 這對工業機器人和智能機電一體化生產設備意味著什麼？ \n 這將如何影響我們的機電設備的設計要求以及產品？   物聯網不僅會改變現代化的工廠。據估計，到 2020 年，將有 500 億台設備連接到互聯網。這意味著它將進入我們的家庭，家用設備以及汽車。當可穿戴電子設備被進一步推動時，我們被傳感器所包圍，我們只需要朝致動一步就可以閉合迴路，從而再次進入機電一體化領域！ \n \n 2.7 走向系統集成 \n 監督這些發展，我們可能會質疑機電一體化實際上是或將會是。機電一體化是否受到干擾？它已經蒸發到系統工程中了嗎，它是否是支持學科的一部分，它是否已經擴大成為網絡物理學的骨幹？此外，如果生物系統也要實現技術設備（人類互聯網），那麼機電一體化學科的作用是什麼？我們應該如何在機電一體化思維方面對人們進行教育？在圖 2.6 中，使用系統工程的作用來實現學科和技術貢獻的必要整合。 \n 在本書中，許多提到的發展將得到解決。我們不會對機電一體化的未來及其教育有確切的答案，但是我們也知道，由於我們無法預測未來，因此它應該是強大且適應性強的！我們肯定知道技術發展的步伐正在加快，因此，我們也應該如此！ \n \n 第 3 章機電一體化的未來挑戰 \n 3.1 引言 \n 在航空航天工業中，掌握機電一體化系統的設計是一項主要要求。確實，程序成本的很大一部分花在了這些系統的設計上，這也代表了產品性能的很大一部分。在本章中，將揭露工業界在未來幾年中在機電一體化領域將面臨的一些主要挑戰。這些挑戰涉及機電系統的設計，驗證確認及其操作。   \n 3.2 設計架構和規模調整中的挑戰 \n 3.2.1 使用模型確定體系結構的大小 \n 嵌入式技術系統的物理架構，例如電子飛行控制系統的機械執行器，圖 3.1a 或電力電子供應網絡的模塊（圖 3.2b ）是來自不同的技術。 Van der Auweraer 等人的工作。  Hehenberger 等人強調指出，這種多域系統的設計需要不同的建模層，如圖 3.2 所示： \n \n 機電一體化層必須考慮組件之間的功能耦合和物理耦合。通常使用 0D / 1D 模型（也稱為集總參數模型）完成此級別的建模，該模型由代數方程，常微分方程（ ODE ）或微分代數方程（ DAE ）表示。 \n 基於幾何表示，在上一層中需要一個特定的域層來描述性能極限和參數。特定域現象通常通過偏微分方程（ PDE ）表示。可以實現此級別的建模以簡化使用分析模型的幾何圖形，或者對於復雜的 2D 和 3D 幾何圖形，通過使用數值逼近（例如有限元方法）進行實例（ FEM ）。 \n \n \n \n 從系統集成商的角度出發，功率元件的設計應允許通過多種相互作用的技術來優化組件的尺寸和規格。此系統級設計與組件設計不同，需要在機電一體化層中表示關鍵組件的關鍵信息。 具有專用模型的特定領域層。 \n 被 B udinger等人稱為 “ 估計模型 ” 。他們使 設計師可以輕鬆考慮多個設計約束。這些模型直接和明確地將一些主要特徵（例如組件的整體尺寸）與尺寸調整和優化所需的次要特徵聯繫起來。這些估計模型所需的能力如下： \n \n 提出易於處理和在不同計算工具中實施的表格。 \n 使自己易於進行分析操作。 \n 可以在與最初使用它們的區域稍有不同的區域中重複使用。 \n \n 為了滿足這些約束，通常使用簡化的分析模型。其中，縮放定律已被證明可以有效地表示各種變化範圍內的物理現象。但是，這些模型僅在某些條件下有效，其中可以提到幾何形狀和材料相似性以及行駛物理現象的唯一性。 \n 對於系統設計人員而言，模型應盡可能具有預測性。詳細的有限元模型可以準確地預測物理現象，在這種情況下仍然很耗時。儘管最近有工作重點，在模型降階方面，有限元模型的計算成本在初步設計階段仍然過高。因此，為此目的使用元建模技術很有趣。機電設計的挑戰是從集成者的角度開發專門用於選擇系統組件的元建模技術。  Budinger 等人的論文。提出了一種基於比例定律的元建模方法，該方法可從局部數值模擬中提取估計模型的簡單全局表達式（ FEM ）。 \n 3.2.2 機電一體化設計學科系統篇 \n 如圖 3.1 所示，系統的設計受到以下主要方面的驅動，以滿足各種要求：機身與驅動負載之間的集成（質量，幾何包絡），對環境的抵抗力（熱和振動），瞬時功率和節能，動態性能，使用壽命，可靠性，對故障的耐受性或耐受性。表 3.1 總結了這些不同的設計觀點以及基於模型的設計可能的關聯建模級別。 \n 在優化此類系統時，這些多種設計觀點產生了真正的挑戰。要在同一循環中考慮這些標準，多學科設計優化（ MDO ）的工具可能會有用。  MDO 是工程領域，它使用統計和優化方法來解決設計問題，並結合了以 2D / 3D FEM 分析， 0D / 1D 模擬和代數計算為代表的所有相關學科。每個特定的計算都被視為一個黑盒，可以直接調用它，並通過實驗設計（ DoE ）進行分析。所有計算都可以鏈接在一起，並用於設計探索，靈敏度，優化和魯棒性分析iSight，Optimus和ModelCenter就是此類框架的示例。 \n \n 優化任務需要較少的模型計算時間。替代模型或元模型（另一模型的簡化或近似描述模型）可以用於將特定域層模型（ FEM ）表示為機電一體化層。機電一體化層通常在時域中處理動態系統，並使用瞬態時間模擬，但是在設計優化期間，依靠評估負載曲線的主要諧波來近似時域行為的方法可能很有吸引力。 \n 這些優化和統計支持工具允許以自由選擇的順序鏈接設計過程的步驟。但是，它們在選擇如何構造計算中的連接或將哪些參數作為設計參數，約束或目標考慮在內時沒有提供幫助。 \n 基於知識的工程（ KBE ）是一門結合了基於知識的方法和計算機輔助設計的學科，對設計支持也很有用。  KBE 軟件包專用於集中特定產品設計的所有知識和專長。在這些環境中使用的科學概念和方法如下： \n \n 知識庫和計算機輔助設計：使用非定向的代數方程式（聲明性方法）來充分利用組件的知識。可以輕鬆地組裝這些組件以描述不同的體系結構。 \n 約束網絡、圖論和優化：以聲明形式最初定義的方程組的方向是為了獲得可用於優化算法的計算過程。 \n \n 可以通過符號計算，間隔計算或人工智能來支持對等式的適應或分析。這些 KBE 工具可以是： \n \n 鏈接到 Genus Designer 中的 CAD 軟件，該軟件可以捕獲配置規則並為 Solidworks 執行過程自動化。 \n 專門針對 Enventive 中的特定領域進行平面機構的概念設計（優化，公差，靈敏度分析）； \n 在多個領域開發，例如 FST 研究所的軟件 \n \n （ TUHH University ），在相同的基礎上，支持初步 \n 飛機的舉昇機構，液壓網絡和 EMA 設計； \n \n 常規語言，例如 :TKSolver 、Ascend、Cades、Design 43或PaceLab套件，通常是聲明性語言，可以啟用一組根據設計目標，代數方程可與不同的輸入配合使用。 \n \n 這些工具可以為設計人員提供有趣且重要的幫助，尤其是當系統使用多種技術變得複雜時。工具和專用的元建模技術，它們可能代表了未來機電一體化系統的設計。 \n 3.2.3 綜合最佳架構的能力 \n 在設計機電系統時，可以考慮採用多種解決方案體系結構級別。選擇最合適的體系結構的任務是當前主要通過手動定義，評估和比較設想的體系結構來完成的複雜任務。在體系結構級別使用設計綜合和優化技術可以使設計人員設想更廣泛的解決方案，其中包括潛在的創新解決方案，並進行比較正式（使用定義明確的指標）對它們進行選擇，以選擇最合適的指標。   工程設計綜合是基於對人工製品的目的，其預期特性和設計知識的了解而導致的工程人工製品（ 2D / 3D 形狀，體系結構等）合成的一組技術。（明確表示形式或從以前的設計中提取）。 \n 優化技術會迭代地修改一些初始解決方案（通常是隨機生成的）以優化測試解決方案的特性，但是他們很少考慮設計知識來生成可行的解決方案。 \n 耦合設計綜合和優化可以生成可行的解決方案，並找到性能最佳的解決方案。由於探索的設計空間可能更大並且該過程不受認知偏見（例如信念）的影響，因此它通常比手動過程更有效。但是，這需要具有評估所有生成的解決方案以及所有定義的選擇標準（優化目標 / 約束）的能力。此類技術的使用示例是機器人手臂，真空吸塵器或飛機駕駛艙的設計。 \n 3.2.4 機電一體化的安全性和可用性研究系統篇 \n 可靠性，可用性，可維護性和安全性（ RAMS ）標准通常是在設計過程中進行的研究的一部分。必須針對每個考慮的替代方案進行大量此類研究，以便就這些標準（可靠性，可用性，可維護性等）量化不同體系結構的性能。 \n 目前，這些研究是由構建機電系統 RAMS 模型並對其進行分析以得出結論的專家進行的。 RAMS 模型通常是使用專用形式主義（例如Petri網路，貝葉斯網絡，可靠性框圖或更高級的語言，例如Altarica和Figaro）構建的。 \n 為了加快研究速度，將 RAMS 研究與（描述性或行為的）體系結構模型聯繫起來將是一個優勢。實際上， RAMS 研究期間可以重用設計模型中嵌入的許多信息。 \n 第一種方法考慮使用 RAMS 數據（故障模式，可靠性比率等）豐富設計模型，以便能夠自動生成 RAMS 楷模。例如 :SysML 模型（具有特定的配置文件）可用於自動計算系統級故障率。 \n 另一種方法考慮將設計模型鏈接到 RAMS 模型，以確保 RAMS 模型的一致性。在 MODRIO 項目的框架中，開發了一個原型，以從Modelica模型和Figaro知識庫自動生成Figaro模型。使用Modelica特定的構造從知識基礎和其他必要信息中聲明與Figaro塊的對應關係。 \n 3.2.5 產品的功能虛擬表示 \n 機電一體化系統的設計和集成是多學科的設計過程，需要多個領域進行協作和交換信息。在當今的大型公司和擴展型企業中，集中這些信息流對於提高設計階段的效率至關重要。 \n 改善團隊之間溝通的一種方法是共享集成了所有觀點的產品的通用虛擬表示。這種表示方式使不同的團隊可以查看其他團隊的約束，並始終可以訪問最新版本的設計。此外，它還可以考慮模擬過程中來自其他域的影響。 \n 綜合的觀點也將為決策提供更堅實的基礎，因為它可以讓您了解所有相關學科的所有限制和目標。 \n 這種表示形式的主要技術推動因素是在使用不同工具和數據格式的不同團隊之間交換工程數據，以及集成來自不同學科的模型的能力。 \n 3.3 驗證和驗證中的挑戰 \n 3.3.1 虛擬驗證系統的能力 \n 機電一體化系統的驗證對工業界（尤其是在航空航天業中）是一項非常昂貴的任務。確實，這既需要係統可用，又需要開發和製造測試平台，而這些測試平台通常無法在程序之間重複使用。降低測試成本的一種方法是虛擬測試。該實踐旨在開發虛擬手段（系統模型和系統仿真環境）來測試系統並驗證其是否符合要求。例如，實際機翼上的測試可以用有限元模型代替。 \n 虛擬測試的主要好處是成本，因為虛擬測試台的成本通常比實際測試台低得多，並且通常可以從一個程序中重複使用到另一個。實際上，每個程序的許多系統都是相似的其模型通常可以在有限的範圍內適應新設計一個。 \n 不太明顯的好處是虛擬測試台可以刺激在離系統的實際刺激更近的條件下使用系統將在其生命週期中遇到。例如，在機翼彎曲測試中，載荷為 \n 可以在實際測試台上本地應用，而可以在虛擬測試台上統一應用它們，從而以更準確的方式表示實際負載。一些方面（例如熱效應）也可以在系統模型中更輕鬆地考慮，但是如果需要進行真正的測試，則它們需要非常昂貴的測試手段。 \n 要啟用虛擬測試，必須很好地管理驗證過程的多個方面。首先，當然要驗證模型及其仿真環境必須進行。這可以通過將結果與測試台數據或飛行測試數據進行比較來完成。在這方面，模型校準和不確定性需要管理技術。 \n 3.3.2 正式向模型供應商發出模型請求 \n 模型越來越多地用於在系統上執行驗證和確認（ V ＆ V ）活動。這些模型通常由系統的供應商（內部或外部客戶）設計。但是，在功能，有效性範圍，精度等方面能夠陳述模型期望的內容仍然是一個挑戰。實際上，請求者對總體仿真環境（即其他交互模型，仿真輸入等）有一種看法，而這種看法很少以正式的方式與模型開發者進行交流。在將預期模型實際提供給模型請求者之前，這通常會導致多次迭代。 \n 最近，模型身份證被提出作為模型要求的標準描述。  MIC 允許描述模型的某些所需特性，以指導模型的開發。首先，必須定義模型的接口，以描述模型的端口和交換的變量。第二，模型信息的四個部分必須填寫如下： \n 對象-型號名稱，粒度級別，參考文檔 \n 對像上下文用法-時間計算，工具 \n 方法-模型尺寸，方法，線性 \n 模型質量-準確性，驗證，確認 \n   這種標準化模型規範的另一潛在用途是對現有模型的重用。實際上，通過對模型的特徵進行形式化，可以在模型數據庫中進行後搜索，並可以在不同的上下文中重用模型。 \n 3.3.3 交換和無縫集成模型的能力工業夥伴之間 \n 關於構建用於驗證機電系統的多系統仿真平台的目標，主要要素是交換和集成模塊的能力。當前，模型集成商傾向於迫使其供應商使用一種工具並遵循特定的建模程序（例如 AP2633 ）。在這方面，模型供應商希望使用自己的工具對系統進行建模。因此，能夠交換和集成來自不同工具的模型將是巨大的進步。 \n 通過提供與工具無關的動態模型交換和協同仿真工具標準，功能模型接口（ FMI ）計劃朝著這個方向發展。它允許生成“中性格式”模型（以 C 代碼和 xml1 文件的形式），這些模型可以無縫集成到兼容版本中平台。目前，大約有 70 種工具支持該標準。 \n 使用這些標準模型交換錶格可以提供靈活性，因為可以使用許多不同的工具開髮用於仿真平台的組成模型。因此，模型提供者可以自由選擇和更改其首選工具，而不會影響整個仿真框架。在模型集成商方面，由於可以在一組可用工具中選擇和更改集成平台而不影響現有模型，因此也確保了靈活性。 \n 這種類型的標準也可能取代工具之間的許多點對點接口由內部開發以滿足特定需求或由工具供應商出售。對於公司而言，這可以節省大量開發或許可成本。 \n 3.3.4 通過以下方式對機電系統進行形式驗證楷模 \n 在早期設計階段檢測系統缺陷一直是基於模型的系統工程（ MBSE ）的核心，以減少全球開發時間，同時提高最終產品的質量。迄今為止，仿真是驗證開發中系統行為的最常用方法。但是存在一個固有的主要缺點，即有限數量的測試方案的局限性。 \n 正式的驗證技術可以證明模型確實符合其規範，即使情況是無限的。其中，模型檢查能夠以自動化過程在計算機上執行驗證。 \n 為了確保最佳的可靠性，在航空航天，鐵路，微型計算機等高科技工業領域，以及更普遍的任何關鍵嵌入式系統的開發中，模型檢查的使用已經很普遍。技術和工具已經發展起來，克服了模型檢查的某些原始限制，如今可以處理具有連續和離散零件的物理模型。被稱為混合模型檢查，這開闢了新的應用前景，尤其是在機電一體化領域。 \n 在當前的現有技術中，混合模型檢查器通常限於證明安全屬性（即係統永遠不會進入一組特定的狀態），因為它們通常依賴於過度逼近。這使他們成為很好的候選人，例如，證明飛機避碰機動的正確性。 \n \n 圖 3.3 顯示了另一個案例示例，衛星具有捕獲任務，根據要求提供地球圖像，並在可見時將其下載到地面站；目標是根據特定的地面站配置和每個軌道的最大請求數，正式驗證衛星衛星的存儲緩衝區不會被超出。請求是離散的，而數據 \n 轉移是連續建模的。 \n 混合模型檢查器的表達方式（例如，它們支持哪種微分方程）和過逼近方法彼此不同。 \n 當證明安全性還不夠時，混合定理證明如KeYmaera可以用作機電一體化環境中的另一個正式驗證選項。這些嘗試使所要求的屬性的數學證明自動化，但是通常需要用戶沿演示進行一些高級輸入才能得出結論，這對於復雜的系統可能非常棘手。 \n 3.3.5 優化測試活動的能力 \n 有時，機電一體化系統的正式驗證不可行，因為實例是由於復雜的建模偽像或可伸縮性問題。可能不管是否，一旦構建了產品以檢查其是否符合規格模型並根據要求對其進行驗證，仍將需要進行測試活動。無論如何，對可以執行的有限數量的測試用例的限制（首先是在仿真中，然後在現實生活中）使得必須確定最相關和最具代表性的測試用例。 \n 趨勢是自動生成最佳測試用例。兩個主要元素決定執行方式的方法：首先是測試選擇標準，它定義了驅動測試用例生成的因素，其次是測試生成技術，這是實際產生結果的算法。兩者的典型示例下面給出。 \n 測試選擇標準： \n \n 結構模型覆蓋標準 - 這些利用模型的結構來選擇測試用例。他們根據從控制流到代碼的思想處理整個模型的控制流。 \n 數據覆蓋標準—想法是將數據范圍分為等效類，並從每個類中選擇一位代表。通常，通過邊界值分析來補充這種劃分，在邊界值分析中，還額外選擇了由約束條件確定的數據范圍或邊界的臨界限制。 \n 需求覆蓋標準—旨在覆蓋所有非正式系統被測（ SuT ）要求。  SuT 需求對系統或測試模型 / 代碼的可追溯性可以支持該標準的實現。幾乎所有測試方法都將其作為目標。 \n 測試用例規範—當測試工程師以某種正式的符號定義測試用例規範時，這些規範可用於確定將生成哪些測試。明確決定應涵蓋哪組測試目標。 \n 隨機和隨機準則 - 這些準則大多數適用於環境模型，因為環境決定了 SuT 的使用模式。一種典型的方法是使用馬爾可夫鏈來指定期望的 SuT 使用情況簡介。另一個示例是除了 SUT 的行為模型之外，還使用統計使用模型。 \n 基於故障的標準 - 這些標準依賴於通常會以故障模型形式設計的典型故障的知識。 \n \n 測試生成技術： \n \n 隨機生成 - 通過採樣輸入來完成測試的隨機生成系統空間。 \n 圖搜索算法 - 專用圖搜索算法包括節點或弧覆蓋算法，例如中文Postman算法，它涵蓋了每個弧至少一次。 \n 模型檢查 - 模型檢查是一種用於驗證或偽造的技術系統的屬性，但可用於根據給定的反例生成測試用例。 \n 符號執行 - 符號執行的想法是運行可執行文件模型不具有單個輸入值，而是具有一組輸入值。這些表示為約束。通過這種做法，符號痕跡通常會吃了通過使用具體值實例化這些跡線，可以得出測試用例。 \n 定理證明 - 通常使用定理證明來檢查直接出現在模型中的公式的可滿足性。在這裡它使用數學過程努力搜索模型的可能執行路徑，以找到測試用例和反例。 \n 在線 / 離線生成技術 - 具有在線測試生成，算法在測試執行期間可以對SuT的實際輸出做出反應。這個想法也用於實施反應性測試。脫機測試意味著測試用例在運行之前就已生成。一組測試用例僅生成一次，並且可以執行多次。 \n \n \n 最合適的測試生成技術通常取決於要處理的源模型的類型。一些方法是根據測試模型創建測試用例的，而另一些方法則將設計模型作為輸入，如圖 3.4 所示。兩者都可以是行為模型，但第一種描述了測試人員對 SuT 進行測試的方式（即，他給出了哪些刺激以及他進行了驗證），而後者則描述了 SuT 的工作方式。因此，觀點是不同的（測試者與實施者）以及目標（驗證與解決方案）。 \n 3.4 運營中的挑戰 \n 3.4.1 使用設計模型改善維護的能力 \n 當前，在航空航天系統的維護中很少重複使用設計模型。但是，有關係統行為的知識可用於改善診斷，預後和維護計劃。 \n 在診斷中，行為模型可用於將對系統的觀察結果與某些故障模式或組件的某些退化相關聯。這個允許以更準確，更快的方式估算組件的當前狀態（例如，過濾器堵塞）和維護操作的性能。可無需檢測系統的所有部件即可檢測到系統故障的根本原因。 \n 類似地，預後活動會嘗試預測系統的未來狀態。為了預測故障併計劃預防性維護任務。例如，通過分析傳輸的數據來估計系統的剩餘使用壽命，通過其傳感器，可以規劃特定的維護任務（例如，儲油罐加註），以預測所需的資源（備件）並相應地調整操作。 \n 從技術上講，將模型用於診斷 / 預測通常需要狀態估計技術（例如線性回歸，卡爾曼濾波器）。這些技巧通過播放模型的某些參數（故障，退化），可以使對實際系統和模型的觀測值之間的誤差最小化。由於模型的幾種配置可能與觀察到的行為相匹配，因此觀察到的變量的定義是有效診斷的主要驅動力。 \n 實際上，由於需要，不一定總是可以嵌入模型計算資源。但是，可以根據透射遙測（離線 PHM ）在地面上完成診斷 / 預後任務。 \n 3.4.2 使用設計模型改善控制能力 \n 設計模型用於改善操作的另一種用途是將其用於系統控制。實際上，在某些情況下，有必要在系統的控制邏輯中使用行為模型中包含的知識。這稱為模型預測控制（ MPC ）。如果 MPC 的使用特別適合系統動力學緩慢（例如化工廠）或控制系統必須考慮長期使用該系統（例如計劃任務的資源使用）。 \n MPC的用法示例是能源管理。例如，一個簡單的在給定特定任務的情況下，可以在功率控制算法中使用混合動力推進器的模型來優化燃油消耗和電池的使用。與傳統的控制算法相比，這可以顯著提高性能。但是，這種智能算法的認證仍然是一個挑戰。   而且，由於嵌入式模型受實時需求的限制，並且由於設計模型通常不是為此類應用程序設計的，因此必須實現模型的簡化。這種簡化過程會在模型的實時性能和表示性之間進行權衡。 \n 3.5結論 \n 從工業角度看，機電一體化系統設計中的一些主要挑戰已暴露出來。這種發展的主要動力是減少開發成本和時間，以及在成本和性能方面改進設計產品。 \n 可以看出，許多挑戰都涉及產品虛擬化以改善其設計，其驗證或操作。實際上，虛擬化可以以較低的成本在開發的不同階段提供更大的靈活性。 \n 在設計中，機電一體化系統的組件和特定領域的多樣性要求在設計過程中將 FEM 和系統級模型無縫集成。為此，由於以下原因，未來的工作可以集中在專用的元模型上，以進行機電一體化尺寸調整活動和模型的輕鬆組裝基於圖的 MDO 方法。 \n 在 V ＆ V 中，未來的工作應集中在機電系統的正式驗證上，因為它將大大降低認證成本。 \n', 'tags': '', 'url': 'MechaFutureAndChallenges.html'}, {'title': 'MechaEducFutureNeed', 'text': '翻譯章節:MechaEducFutureNeed \n 第十五章 \n 機電一體化教育：滿足未來需求 \n 15.1 簡介 \n 在員工會議，會議和博客上激烈討論的所有主題中，未來的教育效果和相關性似乎總是在上升。教授們回想起自己的教育經歷和為在學術界達到目前的地位而奮鬥的過程，這是因為目前缺乏數學，缺乏學生才能以及從硬設計轉變為即插即用的思維方式。軟件即服務（ SaaS ），雲計算，平台即服務（ PaaS ）和機電一體化系統之間存在明顯的脫節。 \n 雖然從構成物聯網的計算單元內部進行抽象（物聯網（ IoT ）可能會加快產品發布速度，在實際應用領域中工作的機電工程師需要考慮軟件及其源代碼的完整性，在現實環境中隨著時間推移的堅固性，如何管理組件升級以及恢復故障後的系統故障。本章包含作者經驗中的真實經歷，災難，挑戰和討論主題，旨在突出機電工程師必須了解的知識並說明創新和技術靈活性的必要性。選擇本章的每個小節都是為了突出技術和非技術主題，這些主題應該成為機電一體化教育不可或缺的一部分。 \n 作者是特邀小組成員的激烈討論。 2014 年 6 月在瑞典卡爾斯塔德舉行的 2014 年機電一體化會議。在製造系統集成行業和學術界工作了近五十年。本章中表達的觀點是他本人的觀點，旨在引起討論，並希望在其讀者機構的教學人員和管理人員中實現機電一體化教育的真正進步。隨著教育交付機制從傳統的演講課教室遷移到更多的基於結果的教學大綱和技術增強學習，希望讀者能夠決定最佳的課程 \n 採取機電一體化和類似學科的學習課程的行動。 \n 15.2教育經歷與就業 \n 對教育過程進行快速的全球掃描，很明顯，與說醫學專業相反，沒有機電一體化的真正知識。比較具有國家的國家，具有大學的大學甚至大學前的共同核心教育，不在本章的範圍之內。目的是強調如何向構成未來工程學隊列的學生教授與眾不同的相似材料，從而降低在線交付的效率。 \n 在撰寫本文時，在線說明可能處於上升階段，但北卡羅萊納大學夏洛特大學教學中心（ UNCC ）列出了 150 種不同的教學方法，但並不是所有方法都適用於機電一體化。從知名的“老師講課”（排名第一）到“小組集體討論”（排名第 150 ）不等。埋為＃ 106 是“技術和教學資源的使用。”冒被冒的危險，有趣的是，該章的作者最喜歡的是＃ 127 “去一家民族餐廳逛街”。但什麼是最適合學生的？\xa0 \n 有許多教學方法。表 15.1 基於內華達州南部（ CSN ）網站 [2] 並總結了一些說明性的可以與各種教學風格相關聯的方法。 \n 學術讀者將隨時隨地聯想到他們機構中的課程是如何進行的。在完整的 CSN 網站之後，有興趣的讀者可能會發現這些方法如何轉化為有趣的在線環境。   \n 15.2.1 機構 \n 在美國，有超過一千所擁有一所工程學校的大學。如果加上歐洲，中國和印度的工程部門，這一數字將大大增加。就課程而言，大多數學校都受到理事機構的監管（例如美國的 ABET ），但是美國沒有通用的核心課程。 \n \n 這意味著機構 A 所教的內容可能是膚淺的，或者根本沒有涵蓋。在機構 B 中。在國外，問題更加嚴重。某些國家 / 地區的一些工程學校沒有通過其本身以外的聚會。通過授予工程學學位，這些機構承諾為他們的畢業生提供好工作和更好的生活，甚至根本不認為他們在國內或國外都享有良好的工作。這對學生不利。 \n   為了糾正這個問題，許多 備受讚譽的高校正在開設在線和住宅研究生課程。機電一體化，機器人技術和其他學科在旨在成為教育對象的領域中很受歡迎。 \n 15.2.2 學院教職員工 \n 大學教學人員，講師和教授最好是成熟的，並且具有一定的實際行業經驗。他們沒有經過真正的教學培訓，就按照所教的內容進行教學，理論豐富，可以說與學生的興趣或最終職業無關。大多數教學人員在教學，課堂管理或法律和道德事務上都沒有或很少接受過正式培訓。 \n 《美國新聞與世界報導》每年對排名靠前的學校進行排名，但該排名通常反映出研究支出，所授予博士學位的數量（如果適用），在其機構內擁有最終學位和研究員身份的員工人數。該等級可以包括畢業率和保留率。可以為每位工作人員規定教學方法，但是在合同續簽事宜上，教學的重視程度肯定低於受資助的研究。 \n 諸如英國教學質量評估（ TQA ）之類的努力旨在與研究評估練習（ RAE ）處理研究的方式幾乎一樣，突出並獎勵學校和學院的良好教學實踐。做好研究和教學工作是大學工作人員的責任。在 TQA 和 RAE 審核中都提高評分。在美國，工程各部門均接受定期的全國性 ABET 認證程序，但僅限於學士學位級別。但是，什麼是最適合學生的呢？ \n 15.2.3 大學生 \n 舉例來說，在美國，許多工程專業的學生在相當集中的課程中花費了兩年多的時間（例如，電氣工程），並且可能在第一年或第二年選擇自己的專業。在進行這些研究的同時，學生將接觸到道德，法律問題和陳述。在歐洲，學生可以進入已經知道他們所選領域的課程，並經歷四年的主題學習研究。一些學校在最後一年之前註入工作經驗，而另一些則從事最後一年的學生項目。 \n 幾乎不用說，成功的學生將具有良好的學習技能和對工程的興奮，而缺乏學習精神的學生則傾向於做得不好，經常轉移到其他（自認為更容易）的計劃或機構中。這是一個眾所周知的結構，即學生在大學之前如何學習科學，技術，工程和數學（ STEM ），這是該大學生選擇哪些研究領域的主要指標；這將在本章末尾顯示。全球範圍內有所不同。儘管有獎學金和財務援助，位置，需求和社會地位，但仍會確定哪些機構對申請人可行。   全球的工科學校有些選擇，要求獲得學士學位需要四年甚至五年的學習時間。機電一體化當然是由學士，碩士和博士學位級別的人教授的，但通常是由熱情的工作人員擁護。是否吸引學生攻讀研究生學位以幫助員工進行研究和教學，而不是行業僱用？這對學生最好嗎？ \n 15.2.4 機電一體化用人單位 \n 現在想像一下，該學生已經成功地在一家技術公司找到了工作，該公司為本章的目的生產或使用機電一體化系統。這樣的雇主對專業知識有進一步發展他們的產品或服務的需求，並對即將畢業的畢業生或技術人員寄予厚望。 \n 在法律和醫學專業中，新人必須先完成居住才能獲得認證，然後才能執業，而在工程學中，成為一家機構的特許會員在很大程度上被視為是可選的，昂貴的且無關緊要的。對於新員工來說，通常是影子經驗豐富的工程師，直到他們可以自己分配給項目專家為止。由此，讀者可以推斷出項目失敗的原因，成本超支的發生方式以及產品從未達到客戶預期的效果。什麼對公司最合適？ \n 15.3 機電一體化：現實世界中的小插圖精選 \n 以下內容包含了本章作者的經驗中的三個真實的事實短片，旨在反映機電一體化教育中的必要主題。出於保密原因，省略了公司名稱或公司名稱，但希望讀者會發現示例有用。每個小節將簡要描述一個真實的系統及其設計，問題如何自我呈現，問題的解決方法，最重要的是，機電技術工程師可以使用什麼教育技能來解決問題。為了更好地說明這一點，第一種情況比其他兩種情況更為詳細。 \n 15.3.1 注塑成型監控系統   總覽   一家注塑公司與系統工程公司簽約，以設計和實施其主要場所的生產監控系統，該系統最多可運行 40 台高科技模塑機。每天大約有 35 台機器定期運行，每天生產數千萬個塑料小零件。這些組件按重量包裝在盒子中，然後傳遞到質量控制和庫存中。圖 15.1 顯示了典型的注塑工廠（ IM ）。 \n \n 工廠在逐個工作的基礎上生產各種物品。任何機器上的工作變更都需要花費大量的精力來清除先前的彩色原材料和必要的模具安裝，並且新的液態塑料會滲入系統中以用於下一項工作。機械師可能會多次循環機器，直到新零件完美為止，但是這些測試操作永遠不會出現在生產數量中。 \n 要求摘要 \n 無需贅述，系統的要求包括以 24 × 7 為基礎測量每台機器的每個週期，將實際性能與工廠工作指令進行比較，在整個工廠提供顯示屏以及定期下載庫存數據到大型計算機。從數據完整性的角度來看，這實際上是很難做到的，因為並非所有的機器週期都會產生例如技術人員進行新工作或清除卡紙。 \n 系統設計 \n 與工業客戶多次會面後，圖 15.2 作為初步的系統設計出現了。在大多數工業自動化設置中，主要組件是相當標準的。可編程邏輯控制器（ PLC ）是工業過程控制代理，可抵抗斷電，並具有本地存儲，通信功能以及多個輸入和輸出數據端口。 \n 在設計了系統之後，在對系統進行了更詳細的現場檢查之後，提出了以下迄今為止無法預料的問題 : \n 1.如何長距離連接機器信息？工廠長一英里。 \n 2.如何在如此長的距離上連接所有系統設備？電信號質量都很差，注塑機隨機會產生明顯的噪聲。 \n 3.顯示多少信息有用？ \n 4.操作員和技工如何提供特定數據進行顯示？ \n \n 解決這些問題後，實際上確實需要重新設計系統併購買其他軟件和硬件，然後對系統進行編碼和安裝。 \n 問題領域 \n 在系統的日常運行中，出現了以下意外情況： \n 1.在操作期間隨時可能出現凍結的隨機數據。 \n 2.主工廠電源中斷或停電後數據丟失。 \n 3.處理機器的維護和維修狀態週期。 \n 4.班次報告顯示錯誤時間。   這些問題似乎表明了系統中的致命缺陷，但使用機電一體化原理可以解決。本章作者的解決方案在 Sect 中進行了概述。 \n 15.3.2 在小型計算機上執行大型機代碼 \n 總覽 \n 一家公司正在使用大型計算機來執行高級 CADCAM 和圖形處理。每個設計站的成本超過 50,000 美元，大型機租賃和操作系統的每月成本超過 100,000 美元。顧問找到了一家公司，該公司找到了一種方法來以 20 美元的價格運行大型機中的指令通過對小型計算機的主板進行一些細微調整來對小型計算機進行調整。   \n 發明概述 \n 圖 15.3 說明瞭如何通過使用專有固件修改小型計算機主板來由小型計算機訪問和執行大型機指令。虛線所示的示意圖是所需的唯一固件修改。小型計算機字的大小必須與從製造商處購買的大型機指令芯片組（ 32 位）相當。   \n 問題領域   \n 該系統運行良好，並且 CADCAM 應用成功，並且是傳統圖形工作站的廉價替代品。有一天，在升級小型計算機操作系統之後，系統完全無法運行。嵌入在 CADCAM 序列中的大型計算機指令突然導致微型計算機返回非法指令陷阱，並完全導致 CADCAM 故障。 \n 此問題表明系統中存在致命缺陷，最終被證明無法解決，導致該項目被終止。本章作者的解釋在 Sect 中進行了總結。 \n \n 15.3.3 機械不穩定的系統 \n 總覽 \n 許多研究人員研究了各種將控制引入倒立擺裝置的方法，該系統適用於自適應，智能，進化和學習控制。圖 15.4 是作者使用的一種此類鑽機的照片。本質上，手推車是在計算機命令下以“左右”模式驅動的。實驗被限制在一個兩米長的軌道上，兩端各有一個碰撞傳感器。推車上的桿可自由鉸接，但限制在± 10 °左右。如果系統超出範圍，則推車上的運動將停止。問題在於通過左右移動推車來平衡桿，不應與向上擺動桿平衡動作混淆。 \n 問題領域 \n 兩個主要問題是確保系統從初始的隨機但合法的狀態開始學習算法，以便控制器可以識別它並以控制偏移量啟動，並在手推車方向反轉時處理從動輪打滑。本節概述了本章作者對第一個問題的解決方案的解釋。 \n 15.3.4 案件摘要 \n 對於上述三種情況中的每一種，如何解決這些有問題的情況在下面的 Sect 中顯示。 15.5 鼓勵讀者在閱讀本節之前與學生討論他們的想法。閱讀作者的評論後，讀者應該討論他們機構或公司中的哪些教育模塊可以使創新工程師解決這些問題？ \n \n 也許我們的大學缺少教育經驗是對系統工程和系統集成的深入介紹。 \n 15.4 系統工程與系統集成 \n 在以上章節中給出的情況下。顯然，系統組件，集成系統的設計，甚至系統在其全局範圍內（也稱為系統系統）中的放置，都很大程度上取決於對系統工程和系統集成的理解。 \n 15.4.1 系統工程 \n 可以在國際系統工程理事會（ INCOSE ）的網站上找到系統工程的最明確定義，該站點上有以下註釋： \n （INCOSE）...代表來自全球行業，政府和學術界的系統工程專業人士。它堅信系統工程的基本原理在所有工程師的教育中都起著重要作用，無論他們專業，以及與系統工程師一起工作但沒有工程背景的專業人員。 \n 同一網站解釋了該學科的性質及其真正基於結果的重點。 \n 系統工程是一種跨學科的方法，是實現成功系統的手段。它著重於在開發週期的早期定義客戶需求和所需的功能，記錄需求，然後在考慮整個問題的同時進行設計綜合和系統驗證。   \n 具體來說，系統工程是一個集成範式，多年來，工程學院從來沒有教過它，假設他們的程序專業的畢業生將在職業生涯的後期逐漸接受。 \n 系統工程將所有學科和專業團隊整合為一個團隊形成從概念到生產再到運營的結構化開發過程。系統工程考慮了所有客戶的業務和技術需求，目的是提供滿足用戶需求的優質產品。 \n 15.4.2 系統集成 \n 系統集成是計算機科學和 IT 領域的知名學科，具有意思是指使用即插即用範例的軟件系統的組裝，這些範例來自於位於 COTS （現成代碼）， SaaS （軟件即服務）和後來的 Cloud Services 的軟件。在軟件領域，開放體系結構環境中的主要集成問題是系統和應用程序配置。在此活動中，集成商必須巧妙地將應用程序插入可能用另一種語言在外部編寫的代碼集。諸如 SAP® 之類的企業軟件系統需要使用許多配置表格和數據操作，才能使製造公司從其複雜性和信息能力中受益。大多數問題來自硬件故障，互聯網問題以及術語和用法不當。 \n 在機電工程系統中，集成問題是由機械，電氣，計算機和系統學科的結合引起的。在一個區域內求解可能會導致另一面突然失效。第二派。正如本節中所說明的那樣，該項目說明了項目是如何因其自身沒有故障而失敗的，實際上正是小型計算機供應商不願對操作系統進行簡單修改而導致失敗的原因。 \n 計算機工程和計算機科學程序通常包括一些信息集成，數據庫和啟用 Internet 的模塊。總體上，正式的工程計劃幾乎沒有涵蓋系統集成的課程。  Warminki 和 Ikonomov 認為：“  ... 基礎工程課程未能教授以下領域的寶貴技能： \n \n 知識管理 / 文檔 / 召回和重用。 \n 在跨職能的分佈式團隊中工作。 \n 產品設計框架中的批判性思維。 \n 設計方法，包括：將模糊的要求轉換為工程規範，故障模式識別和效果分析，總參數和公差產品設計，製造執行，作為團隊成員進行自動化手冊的分析和集成製造過程。 \n \n 他們所在機構的這個問題正在通過詳細的動手項目解決，在該項目中，學生面臨要解決的實際問題。在小組情況下，學生可以從事解決問題的活動，例如 Scrum 和其他類似的面向團隊的項目工作。 \n 15.4.3 動手與基於知識的教學 \n 這種基於項目的方法引入了學生動手“修補”的教育價值與傳統的固體教育課堂教學的爭議。流行的“邊做邊學”的時尚可能很簡單課堂上的情況，但在上面第 8 節中給出的情況下是否可以使用？急躁的付費客戶是否可以等待學習專業知識？   正式的工程程序，尤其是那些在認證控制下的程序，不願放棄更經典的話題，而傾向於機電一體化或系統工程。許多學校都推出了機電一體化的一兩年制碩士課程。這些在美國比在歐洲更受歡迎。歸根結底，是大學工作人員的經驗，熱情和專注心，他們信任他們能夠培養出具有道德，世俗明智的各個學科的合格工程師。許多項目工作都是在個人層面上進行的，與其他學生的互動很少，而在行業中，團隊合作的能力則是一種技能。 \n 15.5 案例問題的解決方案和教育資源 \n 下面概述瞭如何解決每個案例的問題區域，但是讀者可能希望與同事和班級討論其他解決方案。第一種情況的細節更為詳細，以說明機電一體化系統的複雜性，因為它位於真實的工業環境中。第二個重點是對操作系統和固件有相當深入的了解，第三個重點是機械設計和定時軟件的使用。 \n 15.5.1 注塑成型監控系統   本節介紹的問題的解決方案。以下總結了 15.3.1 ，但應清楚地理解，這並不是詳盡的清單。   \n 問題（a）和（b）   \n 這些問題集中在長距離連接設備以及低質量和高噪聲電信號上。 \n 解決方案- 使用短程調製解調器並檢查工廠屋頂中的所有電線屏蔽都可以解決此問題。更好、更昂貴的解決方案是使用光纖電纜進行重新佈線。 \n 教育對象- 工程師需要熟悉調製解調器、通信和長距離的光纖連接。 \n 問題（c）和（d） \n 這些引入了良好的數據收集，顯示和工廠現場輸入的問題。 \n 解決方案- 包括工業客戶在內的焦點小組至關重要由車間人員決定在車間顯示什麼數據。在該系統中很明顯，需要從操作員那裡收集車間數據。然後，這些數據確定了機器故障的必要性和性質等。必須安裝微端子並進行集成使用數據融合技術將此數據存儲到數據庫中。   \n 教育對象- 系統設計人員需要對數據庫設計和融合以及人機交互有深入的了解。 \n 問題（e）、（f）、（g）和（h） \n 這些全都發生在系統的運行階段中。在原始系統中，數據收集和所有數據庫操作將凍結，從而模仿斷電的影響。 \n 解決方案- 工廠軟件的設計和實現需要一定程度的系統智能，以便可以檢測到臨時問題和故障並進行“自我修復”以避免數據丟失。實際的系統包括可編程邏輯控制器（ PLC ），其中嵌入了前端智能功能，可以在系統暫停或停止期間臨時存儲數據。   \n 教學對象 - 機電工程師需要了解文件鎖定和系統編程，以釋放鎖定的文件和文件夾。實時操作系統設計知識是必不可少的，因此熟悉可用的工業組件也是如此。   \n 15.5.2 在小型計算機系統上執行大型機代碼失敗 \n 系統如何運作 \n 圖 15.2 描繪了為修改小型計算機主板而購買的專有固件如何利用小型計算機的 32 位處理器狀態字（ PSW ）中未使用的 17 位。操作系統內核允許系統用戶訪問高優先級任務中的所有 PSW 位。  PSW 中包含位 3 ，可捕獲指令錯誤。微型計算機設置的正是該位（位 3 ）嘗試執行大型機指令。如果執行程序檢測到發生此類事件時，它將設置最後一個未使用的位（第 17 位），該位用於將執行定向到其他硬件以供執行。 \n 失敗原因 \n 小型計算機供應商發布了對該操作系統的更新，該更新無辜地將該位（ 17 ）用於新的精緻打印功能。操作系統軟件團隊花了許多時間來開發此新功能，該功能將使其所有其他客戶受益。  CAD / CAM 項目已取消。 \n 教育對象- 為了使機電工程師能夠檢測到，這將需要相當高水平的計算機體系結構，系統編程和固件。順便說一句，先進的談判技巧可能已經保存了該項目！ \n 15.5.3 機械不穩定的系統 \n 隨機但合法的初始狀態系統 \n 許多桿和手推車系統都始於將桿垂直固定在軌道中心附近。釋放後，系統將啟動，過程繼續進行，但總是從幾乎相同的初始狀態變量值開始。這是系統中的真正缺陷。在這種情況下，為了使手推車和桿邏輯從隨機但可識別的初始狀態進入學習範式，有必要構造一個啟動子系統，該子系統將手推車沿一個方向驅動一段隨機時間，然後反轉購物車方向較短的隨機時間，然後再次反轉。這將使磁極從其最初的穩態靜止位置變為動態狀態，但不會使其獲得足夠的動量以至於失敗。在啟動過程中，控制系統監視狀態變量當啟動系統進入狀態時，系統的爆炸控制值與啟動值一致，因此啟動邏輯斷開，對系統有利。 \n 還有許多其他這樣的示例，讀者可以使用這種方法根據自己的經驗選擇插入自己的示例。 \n 15.6 結論：本地解決方案帶來的全球性問題 \n 解決未來的教育方法“要通過後視鏡不能找到答案”，馬歇爾·麥克盧漢（ Marshall McLuhan ）說，布朗最近在《教育》雜誌上發表的一篇文章中引用了這一觀點。布朗討論了諸如自適應學習技術，學習空間，學習分析和下一代學習管理系統之類的概念，並著重介紹了學生如何通過教學經歷或途徑進行學習。 \n 這當然具有真理的元素，但可能過於簡單。能夠將 zresearch 或其他技術興趣帶入課堂的敬業教師不僅可以吸引班級的注意力，而且可以創造一個學習環境，使學生成為終身學習者，具有道德和創新意識。再次看著宗派。  15.5 在列出可行的（和實際的）解決方案的地方，讀者應考慮在自己的機構中何處教授這些技能。 \n 這件事不僅限於北美或歐洲，而且在中國，印度，新加坡，澳大利亞和許多其他國家通常被歸類為良好機構的情況下也是全球性的不適。 \n 一個現成的解決方案可能是更好地理解和使用諸如大學和 IMechE ， IET ， IEEE ， ASME 等專業機構提供的持續專業教育（ CPE ）模塊。這樣的計劃可以幫助培訓更多的高級工程師，並填補新員工的空缺。為了更深入地機電一體化，許多機構都提供了面對面或在線授課的碩士課程。在這些計劃中，學生已經是有學歷的工程師，因此可以在無需太多數學或基礎工程學複習的情況下專注於本章中描述的機電問題。 \n 本章的目的是介紹一些機電一體化系統如何解決各種問題的概念，即使是在博士級別的學生，也可能沒有深入的指導，並且還不具備經驗豐富的工程師的才幹。由於數字每年都在如此迅速地變化並且由不可靠的來源提供，因此很大程度上避免了參考統計數據。   \n 第十六章 結論 \n 作者希望本書的讀者喜歡本文的基本研究主題和未來的願景。本章反映了這些主要主題的相互作用和集成，並試圖總結關鍵陳述。   應當指出，技術（機電）系統的不斷（發展）與多個學科（例如， IT 功能和組件）的更深層次的集成以及產品及其相關生產過程之間的詳細考慮是其中的一部分。產品設計的主要趨勢。此外，一些合作夥伴（遍布全球）的參與和新業務流程的挑戰也起著重要作用。 \n 16.1 全球趨勢及其對機電一體化的影響 \n 近年來，一些機構已經提供了有關全球（巨型）趨勢的概述（例如，參見 [1] ）。它們在細節上彼此不同，但是主要的主題參與了所有已發表的研究，如下所示：   •人口變化（以及老齡化社會，醫療系統） \n \n 流動性 \n 全球化 （以及勞動世界，經濟，金融的變化） \n 城市化 （和個性化） \n 氣候變化和環境變化 （以及能源和資源， 可持續性） \n 知識型社會 （以及無所不在的情報，數字文化） \n \n 對於 2030 年的製造業生產， Westkämper 討論了以下四個主要主題： \n \n 創新的產品和流程 \n 基於知識的製造工程 \n 產品生命週期中的新業務模型 \n 基礎設施和教育   所有這些趨勢的結果也是該技術必須向前發展。因此，如本書各章所述，由於多種學科的結合，機電一體化產品具有很高的產品開發潛力。 \n \n 經濟成功的主要部分是創新產品和工藝的開發。創新一詞包括發明，引入和銷售新產品，服務或程序。這不僅包括整個營銷過程，還包括社會和經濟影響。不論發明的質量如何，許多因素都會影響發明向創新的發展。在這種情況下討論的主要因素可以分為三類，技術，經濟和社會影響力（見全球趨勢）。機電一體化領域是眾多創新的源泉。但是，大多數新發展都被認為是漸進式創新。在進行徹底創新的情況下，概念設計已被確定為產品設計中最關鍵的階段，因為成功的主要部分將在那裡建立。 \n 在此早期階段做出的決定會對產品的未來發展產生重大影響。因此，對於整個產品的系統級別的需求定義至關重要。的要求是在系統級別定義的內容應反映客戶的意願。為了確保所考慮的系統滿足要求，有必要將它們轉換為解決方案的屬性。系統的開發融合了來自不同工程學科（例如機械工程，電氣工程，控制工程等）的解決方案。因此，區分只能在系統級別上確保的特性和可以通過以下方法保證的特性非常重要單一的工程學科。因此，重要的是將不同的屬性分配給相關級別 [4] 。為了實現此任務模型，必須在不同的層次上進行（特定學科模型和系統模型）。從這個角度來看，所考慮的特定方面的建模，仿真評估和優化是未來機電系統設計的關鍵點，前面的幾篇文章中也提到過章節。 \n 16.2 機電期貨地圖 \n 不能討論機電一體化的所有方面，這是可以理解的一本單本的期貨。本書的目標是如何應對挑戰進入主要主題，並從不同角度介紹具體方面的，下面列出了常見的觀點和觀點，而圖 16.1 顯示了以下主題的地圖： \n \n 問題與挑戰 \n \n 機電系統未來發展的主要動力是減少開發成本和時間，以及使用新技術改進設計產品。這主要涉及產品的虛擬化，以改善其體系結構設計，其驗證和確認，其生產或運營。確實，虛擬化在以下方面提供了更大的靈活性： \n 以較低的成本開發的不同階段。之間的相互作用設計的產品和生產系統在工業 4.0 （或智能製造，網絡物理生產的方向系統等）。 \n \xa0 \n \n 系統設計 \n \n 建模和仿真機電一體化產品的結構更加複雜，並且將具有更多的計算能力和網絡連接性。這就導致了在理解複雜系統的困難方面面臨的擴展設計挑戰，其中仿真將是掌握這些困難的關鍵技術。機電系統設計過程的未來趨勢，方法和模型必須被認為是將復雜系統轉變為網絡物理系統或物聯網的全球集成的不可替代的推動力。這些用於機電工程的設計過程必須支持新服務的開發或為將來的工廠實施工業互聯網。   •製造技術用於物理創建機電設備和系統的未來技術（例如，增材製造或增材製造）將為設計過程帶來新的可能性。從 “ 為組裝設計 ” 方法到 “ 直接製造 ” 方法將發生轉變。因此我們可以省去後期製作的需要 裝配和使用緊固件，可快速生產堅固的設備。 如今，典型示例包括 3D 打印傳感器， 3D 打印電子設備以及集成多種材料，這是生產 “ 完全集成的機電一體化設備 ” 的基礎。 \n \n 物聯網和網絡物理系統機電一體化的當前趨勢涉及將計算和物理過程更深入地集成到網絡機電系統，網絡物理系統（ CPS ）或物聯網（ IoT ）中。因此，通信，集成和數據分析被認為是必不可少的，因為物聯網的範圍將取決於各種系統和標準的整合， “ 低級 ” （本地）系統互相通信而 “ 高層 ” （全局）通信。系統。典型的應用是家庭自動化，生產，運輸，能源，醫療保健和農業。值得稱讚的潛在的社會和經濟利益是合理的，但尚未得到保證。 \n 通信和信息技術這裡的關鍵問題與促進建立多學科合作夥伴關係有關。沒有這種夥伴關係，產品設計和服務交付方面的創新機會很可能會丟失。因此，建立穩固的合作夥伴關係形式的組織更有可能獲得競爭優勢。與此相關的是，需要建立一種新的方法來確保和管理用戶同意，同時確保如果用戶選擇退出數據共享，則不會造成經濟或功能上的不利影響。這反過來又引發了有關如何對技術人員以及法律 / 法學從業人員進行教育和告知的問題，以便在開發，實施和應用新技術時滿足法律和社會要求。 \n 機電一體化教育機電一體化正在走向複雜的物理組件設計日趨商品化的未來。特殊的挑戰是學科多樣性，因此機電一體化教育必須在“技術知識”，“基礎基本技能”和“個人技能”之間尋求平衡，任何教育計劃都應以支持為目標這些區域。機電一體化課程必須涵蓋的典型主題與產品生命週期保持一致，包括創新，創造力，系統思維，工程和集成，這些方法結合了基於項目和基於問題的學習方法。然後，機電一體化教育是應用新的可用技術。 \n \n \xa0 \n \xa0 \n \xa0 \n \xa0 \n', 'tags': '', 'url': 'MechaEducFutureNeed.html'}]};