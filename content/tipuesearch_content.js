var tipuesearch = {"pages": [{'title': 'weeks', 'text': 'week1 ~ week5 \n week6 ~ week10 \n', 'tags': '', 'url': 'weeks.html'}, {'title': 'week1 ~ week5', 'text': 'week1 \n 建立個人倉儲及網站編譯 \n \n week2 \n 升級python3.8.2 \n 1.先新增data資料夾，在data下新增資料夾py382、wscite432、portablegitwscite432、portablegit。 \n 2.到 https://www.python.org/downloads/release/python-382/  下載Windows x86 web-based installer。 \n 3.開始下載，必須將pip選項取消，接著按下next並將檔案下載至資料夾py382。 \n 4.到 https://www.scintilla.org/SciTEDownload.html \xa0下載 full 64-bit download \xa0，下載完成後解壓縮到資料夾 wscite432。 \n 5.建立新的start.bat及stop.bat。(下方) \n 6.下載MSYS2\xa0 msys2-x86_64-20190524.exe \xa0至data下。 \n 7. 到 https://bootstrap.pypa.io/get-pip.py 頁面，滑鼠右鍵另存新檔到data下。 \n 8.輸入指令 \n \n python get - pip.py \n pip install flask bs4 lxml pelican markdown flask_cors leo \n \n 9.git clone自己的倉儲 \n start.bat \n \n stop.bat \n \n 第三組第一次小組會議: \n 會議內容:討論工作內容 \n 作業1: \n 1.請描述如何針對該課程進行有效的隨機分組，或者隨機進行點名？ 2.描述如何為Windows 10 64位系統準備一個可移植的Python編程系統，以允許在Github上維護CMSiMDE網站，Pelican博客和js演示文稿？ 3.您需要從 http://www.coppeliarobotics.com/helpFiles/index.html 了解什麼來實現四輪機器人？ \n 工作分配圖 \n \n 注意事項: \n 1.3/26(四)之前要做完，做成pdf檔繳交。 \n 2.有問題到gitter上提問。 \n 3.每週要更新上傳。 \n \n week3 \n 工作任務:您需要從http://www.coppeliarobotics.com/helpFiles/index.html了解什麼來實現四輪機器人？ \n 分配到翻譯章節:BubbleRob tutorial \n \n 我們使用[菜單欄->添加->基本形狀->球體]將直徑為0.2的基本球體添加到場景中。我們將X尺寸項目調整為0.2，然後點擊“確定”。默認情況下，創建的球體將顯示在可見性層1中，並且是動態且可響應的（因為我們已啟用“創建動態且可響應的形狀”項）。我們開始模擬，複製並貼上創建的球體（使用[菜單欄->編輯->複製所選對象]，然後[菜單欄->編輯->黏貼緩衝區]，這兩個球將對碰撞做出反應並滾動。 \n 我們在“平移”選項卡上打開“位置”對話框，選擇表示BubbleRob身體的球體，並為“沿Z”輸入0.02。確保將“相對於”項設置為“世界”。然後我們點擊翻譯選擇。這會將所有選定對象沿絕對Z軸平移2 cm，並有效地將我們的球體抬高了一點。在場景層次結構中，我們雙擊球體的名稱，以便我們可以編輯其名稱。我們輸入bubbleRob，然後按Enter。 \n 接下來，我們將添加一個接近傳感器，以便BubbleRob知道它何時接近障礙物：我們選擇[菜單欄->添加->接近傳感器->圓錐類型]。在“方向”選項卡上的“方向”對話框中，我們為“周圍的Y”和“周圍的Z”輸入90，然後點擊“旋轉選擇”。在位置對話框的“位置”選項卡上，為X坐標輸入0.1。 Z坐標為0.12。現在，接近傳感器已相對於BubbleRob的身體正確定位。我們在場景層次中點擊接近傳感器的圖標以打開其屬性對話框。我們點擊顯示體積參數以打開接近傳感器體積對話框。我們將偏移量調整為0.005，角度調整為30，範圍調整為0.15。然後在接近傳感器屬性中，點擊“顯示檢測參數”。這將打開接近傳感器檢測參數對話框。如果距離小於則取消選中“不允許檢測”項，然後再次關閉該對話框。在場景層次結構中，我們點擊接近傳感器的名稱，以便我們可以編輯其名稱。我們輸入bubbleRob_sensingNose並按返回鍵。 \n 我們選擇bubbleRob_sensingNose，然後按住Control鍵選擇bubbleRob，然後點擊[菜單欄->編輯->將上一個選定的對象設為父對象]。這會將傳感器連接到機器人的身體。我們還可以將bubbleRob_sensingNose拖動到場景層次中的bubbleRob上。 \n \n 接下來，我們將製作BubbleRob的車輪。我們使用[菜單欄->文件->新場景]創建一個新場景。跨多個場景工作通常非常方便，以便可視化並僅對特定元素進行工作。我們添加一個尺寸為（0.08,0.08,0.02）的純原始圓柱體。對於BubbleRob的主體，如果尚未啟用，則在該圓柱的對象通用屬性中啟用Collidable，Measurable，Renderable和Detectable。然後，將圓柱的絕對位置設置為（0.05,0.1,0.04），並將其絕對方向設置為（-90,0,0）。我們將名稱更改為bubbleRob_leftWheel。我們複製並貼上滾輪，然後將複製的絕對Y坐標設置為-0.1。我們將副本重命名為bubbleRob_rightWheel。我們選擇兩個輪子，複製它們，然後切換回場景1，然後貼上輪子。 \n 現在，我們需要為車輪添加接頭（或電動機）。我們單擊[菜單欄->添加->關節->旋轉]將旋轉關節添加到場景。在大多數情況下，將新對象添加到場景時，該對象將出現在世界的起源處。我們保持關節處於選中狀態，然後控制選擇bubbleRob_leftWheel。在位置對話框的“位置”選項卡上，我們單擊“應用於”選擇按鈕：這將關節定位在左輪的中心。然後，在“方向”對話框中的“方向”選項卡上，執行相同的操作：這將關節與左輪定向的方向相同。我們將關節重命名為bubbleRob_leftMotor。現在，我們在場景層次中雙擊關節的圖標以打開關節屬性對話框。然後，單擊“顯示動態參數”以打開關節動力學屬性對話框。我們啟用電動機，然後選中目標速度為零時鎖定電動機。現在，我們對右馬達重複相同的過程，並將其重命名為bubbleRob_rightMotor。現在，我們將左輪連接到左馬達，將右輪連接到右馬達，然後將兩個馬達連接到bubbleRob。 \n \n 我們運行模擬，並注意到機器人向後倒下。我們仍然缺少與地板的第三個聯繫點。現在，我們添加一個小的滑塊（或腳輪）。在一個新場景中，我們添加一個直徑為0.05的純原始球體，並使該球體可碰撞，可測量，可渲染和可檢測（如果尚未啟用），然後將其重命名為bubbleRob_slider。我們在形狀動力學屬性中將Material設置為noFrictionMaterial。為了將滑塊與機器人的其餘部分牢固地鏈接在一起，我們使用[菜單欄->添加->力傳感器]添加了力傳感器對象。我們將其重命名為bubbleRob_connection並將其上移0.05。我們將滑塊連接到力傳感器，然後復制兩個對象，切換回場景1並貼上它們。然後，我們將力傳感器沿絕對X軸移動-0.07，然後將其安裝到機器人主體上。如果現在運行仿真，我們會注意到滑塊相對於機器人主體略微移動，這是因為兩個對象彼此碰撞。為了避免在動力學模擬過程中產生奇怪的影響，我們必須通知CoppeliaSim兩個對像不會相互碰撞，我們可以通過以下方式進行此操作，在形狀動力學屬性中，對於bubbleRob_slider，我們將本地可響應蒙版設置為00001111，對於bubbleRob，我們將本地可響應掩碼設置為11110000。再次運行仿真，我們會注意到兩個對像不再相互干擾。 \n \n 我們再次運行仿真，發現即使在電機鎖定的情況下，BubbleRob也會輕微移動。我們還嘗試使用不同的物理引擎運行仿真，結果將有所不同。動態仿真的穩定性與所涉及的非靜態形狀的質量和慣性緊密相關。現在，我們嘗試糾正這種不良影響。我們選擇兩個輪子和滑塊，然後在“形狀動力學”對話框中點擊3次M = M * 2（用於選擇）。效果是所有選定形狀的質量都將乘以8。我們對3個選定形狀的慣性進行相同的操作，然後再次運行仿真：穩定性得到了改善。在關節動力學對話框中，我們將兩個電機的目標速度都設置為50。我們運行模擬，BubbleRob現在向前移動並最終掉落在地板上。我們將兩個電機的目標速度項都重置為零。 \n 對象bubbleRob是所有對象的基礎，所有對象隨後將形成BubbleRob模型。我們將在稍後定義模型。同時，我們要定義代表BubbleRob的對象的集合。為此，我們定義了一個收集對象。我們單擊[菜單欄->工具->集合]以打開集合對話框。 \n \n 在集合對話框中，點擊添加新集合。一個新的集合對像出現在下面的列表中。目前，新添加的集合仍為空（未定義）。在列表中選擇新的收藏項時，在場景層次中選擇bubbleRob，然後在收藏對話框中點擊“添加”。現在，我們的集合被定義為包含層次結構樹的所有對象（從bubbleRob對像開始）（集合的組成顯示在“組成元素和屬性”部分中）。要編輯集合名稱，請點擊它，然後將其重命名為bubbleRob_collection。 \n 在此階段，我們希望能夠跟踪BubbleRob與任何其他對象之間的最小距離。為此，我們使用[菜單欄->工具->計算模塊屬性]打開距離對話框。 \n \n 在距離對話框中，點擊“添加新距離對象”並選擇一個距離對 bubbleRob_collection-場景中所有其他可測量對象。這只是添加了一個距離對象，該距離對象將測量集合bubbleRob_collection（即該集合中的任何可測量對象）與場景中任何其他可測量對象之間的最小距離。我們通過點擊其名稱將距離對象重命名為bubbleRob_distance。我們關閉距離對話框。現在，當我們運行模擬時，我們不會看到任何區別，因為距離對象將嘗試測量（並顯示）BubbleRob與場景中任何其他可測量對象之間的最小距離段。 \n 接下來，我們將向BubbleRob添加一個圖形對象，以顯示最小距離以上的距離，同時還顯示BubbleRob隨時間的軌跡。我們點擊[菜單欄->添加->圖]，並將其重命名為bubbleRob_graph。我們將圖形附加到bubbleRob，並將圖形的絕對坐標設置為（0,0,0.005）。現在，通過在場景層次結構中雙擊其圖標來打開圖形屬性對話框。我們取消選中“顯示XYZ平面”，然後點擊“添加新數據流以進行記錄”，然後選擇“對象：數據流類型的絕對x位置”，並選擇“ bubbleRob_graph”作為要記錄的對象/項目。數據流記錄列表中出現了一個項目。該項目是bubbleRob_graph的絕對x坐標的數據流。現在，我們還想記錄y和z位置：我們以與上述類似的方式添加這些數據流。現在，我們有3個數據流，分別表示BubbleRob的x，y和z軌跡。我們將再添加一個數據流，以便能夠跟踪機器人與其環境之間的最小距離，點擊添加新數據流以進行記錄，然後選擇“距離，數據流類型的段長度”和“氣泡Rob_distance”作為要記錄的對象/項目。在數據流記錄列表中，我們現在將Data重命名為bubbleRob_x_pos，將Data0重命名為bubbleRob_y_pos，將Data1重命名為bubbleRob_z_pos，將Data2重命名為bubbleRob_obstacle_dist。 \n 我們在“數據流”記錄列表中和“時間圖屬性”部分中選擇bubbleRob_x_pos，取消選中“可見”。我們對bubbleRob_y_pos和bubbleRob_z_pos都執行相同的操作。這樣，在時間圖中只能看到bubbleRob_obstacle_dist數據流。 \n \n 接下來，我們將建立一個顯示BubbleRob軌蹟的3D曲線，點擊“編輯3D曲線”以打開XY圖形和3D曲線對話框，然後點擊“添加新曲線”。在彈出的對話框中，我們為X值項目選擇bubbleRob_x_pos，為Y值項目選擇bubbleRob_y_pos，為Z值項目選擇bubbleRob_z_pos。我們將新添加的曲線從Curve重命名為bubbleRob_path。最後，我們檢查“相對於世界”項目並將“曲線寬度”設置為4。 \n \n 我們關閉與圖有關的所有對話框。現在我們將一個電機目標速度設置為50，運行模擬，然後將看到BubbleRob的軌跡顯示在場景中。然後，我們停止仿真並將電動機目標速度重置為零。 \n 我們添加具有以下尺寸的純原始圓柱體（0.1，0.1，0.2）。我們希望此圓柱體是靜態的，但仍會對非靜態的可響應形狀施加一些碰撞響應。為此，我們在形狀動力學屬性中禁用“主體是動態的”。我們還希望圓柱體是可碰撞的，可測量的，可渲染的和可檢測的。我們在對象的公共屬性中執行此操作。現在，在仍然選擇圓柱體的情況下，我們點擊對象平移工具欄按鈕。 \n \n 現在我們可以拖動場景中的任何點，圓柱體將跟隨運動。同時始終受約束以保持相同的Z坐標。我們複製並貼上圓柱幾次，然後將它們移動到BubbleRob周圍的位置。在對象移動期間，按住Shift鍵可以執行較小的移動步驟。按住ctrl鍵可以在與常規方向正交的方向上移動。完成後，再次選擇相機平移工具欄按鈕。 \n \n 我們將左馬達的目標速度設置為50並運行模擬。現在，圖形視圖顯示了到最近障礙物的距離，並且該距離段在場景中也可見。我們停止模擬並將目標速度重置為零。 \n 現在，我們需要完成BubbleRob作為模型定義。我們選擇模型基礎（即對象bubbleRob），然後選中"對像是模型基礎\'\'，然後選擇`"對象/模型可以轉移或接受對象共同屬性中的DNA\'\'，現在有一個點畫的邊界框包含模型層次結構中的所有對象。我們選擇兩個關節，即接近傳感器和圖形，然後啟用項目“不顯示為內部模型選擇”，然後在同一對話框中點擊“應用於選擇”，模型邊界框現在將忽略兩個關節和接近傳感器。仍在同一對話框中，我們禁用攝像機可見性層，並為兩個關節和力傳感器啟用攝像機可見性層，這有效地隱藏了兩個關節和力傳感器。我們可以隨時修改整個場景的可見性層。要完成模型定義，我們選擇視覺傳感器，兩個輪子，滑塊和圖形，然後啟用“選擇模型基礎”選項：如果現在嘗試在場景中選擇模型中的對象，則整個模型而是選擇，這是一種將單個模型處理和操縱整個模型的便捷方法。此外，這可以防止模型受到意外修改。仍然可以通過在按住Shift的同時點擊選擇對像或在場景層次結構中正常選擇它們，來在場景中選擇模型中的單個對象。最後，我們將模型樹折疊到場景層次中。 \n \n 接下來，我們將在與BubbleRob接近傳感器相同的位置和方向上添加視覺傳感器。我們再次打開模型層次結構，然後點擊[菜單欄->添加->視覺傳感器->透視類型]，然後將視覺傳感器連接到接近傳感器，並將視覺傳感器的本地位置和方向設置為（0,0,0）。我們還確保視覺傳感器不可見，不是模型邊界框的一部分，並且點擊該模型，則會選擇模型。為了自定義視覺傳感器，我們打開其屬性對話框。將“遠裁剪平面”項設置為1，將“分辨率x”和“分辨率y”項設置為256和256。向場景中添加一個浮動視圖，並在新添加的浮動視圖上，點擊[彈出菜單->視圖->將視圖與選定的視覺傳感器關聯]。 \n 通過點擊[菜單欄->添加->關聯的子腳本->非線程]，將非線程子腳本附加到視覺傳感器。我們點擊場景層次結構中視覺傳感器旁邊出現的小圖標，這將打開我們剛剛添加的子腳本。我們將以下代碼複製並粘貼到腳本編輯器中，然後將其關閉。 \n \n 為了能夠看到視覺傳感器的圖像，我們開始模擬，然後再次停止。 \n 我們場景所需的最後一件事是一個小的子腳本，它將控制BubbleRob的行為。我們選擇bubbleRob並點擊[菜單欄->添加->關聯的子腳本->非線程]。我們點擊場景層次結構中bubbleRob名稱旁邊顯示的腳本圖標，然後將以下代碼複製並粘貼到腳本編輯器中，然後將其關閉。 \n \n 我們運行模擬。 BubbleRob現在在嘗試避開障礙物的同時向前移動（以非常基本的方式）。在模擬仍在運行時，更改BubbleRob的速度，然後將其複制/貼上幾次。在模擬仍在運行時，也嘗試擴展其中的一些。請注意，根據環境的不同，最小距離計算功能可能會嚴重降低仿真速度。您可以通過選中/取消選中“啟用所有距離計算”項來在“距離”對話框中打開和關閉該功能。 \n', 'tags': '', 'url': 'week1 ~ week5.html'}, {'title': 'week6 ~ 9', 'text': 'week6 \n 抽查影片: \n \n 第三組第二次小組會議: \n 作業2： \n  1.根據主題0和主題1的材料，您能具體描述機械設計團隊為完成分配1的四輪機器人需要做什麼。  \n 2.您需要從https://cyberbotics.com/doc/guide/index了解什麼以實現四輪機器人？ \n \n \n \n 成員 \n 題目 \n \n \n 40623114 \n 1 \n \n \n 40623121 \n 1 \n \n \n 40723203 \n 1 \n \n \n 40723205 \n 1 \n \n \n 40723207 \n 1 \n \n \n 40723209 \n 0 \n \n \n 40723218 \n 1 \n \n \n 40723219 \n 1 \n \n \n 40723227(組長 ) \n 0 \n \n \n 40723233 \n 0 \n \n \n 40723239 \n 0 \n \n \n 40723247 \n 0 \n \n \n 40739214 \n 0 \n \n \n \n 影片: \n \n 注意事項: \n \n 作業二必須在 4/23 前完成，並上傳 pdf 檔到個人倉儲的 download 上。 \n 每周務必上傳進度。 \n 不會做的可以問會的同學或在 gitter 上發問。 \n 請依每個人的作業二 pdf 檔、網站內容，進行互評。 \n \n week7 \n 四輪車基本外型設計及鍵盤操控 \n 1.建立四輪車的本體，給定尺寸並將車身拉高。 \n 2.建立四輪車的輪胎，給定尺寸並調整其方向及位置。 \n 3.建立馬達並調整其方向及位置。 \n 4.複製其輪胎並將位置及結構設置好。 \n 5.將四輪車的前輪馬達重新命名為 right_motor 及 left_motor 。 \n 6.調整馬達轉動的速率 20 設置好。 \n 7.將寫好的子程式加入車體。 \n 8.開始 用鍵盤控制四輪車進行測試。 \n 影片: \n \n week9 \n 期中考報告影片: \n \n', 'tags': '', 'url': 'week6 ~ 9.html'}, {'title': 'week10 ~ 14', 'text': 'week10 \n 第三組第三次小組會議: \n 會議內容:討論工作內容 \n 作業三: \n 根據對 Topic2 和 Topic3 的閱讀，使用 CoppeliaSim 、 Webots 、 Onshape 提出一個機電一體化項目。 \n 注意事項: \n 1.作業三必須在5/28前完成，並上傳pdf檔到個人倉儲的download上。 \n 2.每周務必上傳進度。 \n 3.不會做的可以問會的同學或在gitter上發問。 \n 4.請依每個人的作業三pdf檔、網站內容，進行互評。 \n \n \n \n 成員 \n 題目 \n \n \n 40623114 \n 2 \n \n \n 40623121 \n 2 \n \n \n 40723203 \n 3 \n \n \n 40723205 \n 3 \n \n \n 40723207 \n 2 \n \n \n 40723209 \n 3 \n \n \n 40723218 \n 2 \n \n \n 40723219 \n 2、3 \n \n \n 40723227(組長 ) \n 2 \n \n \n 40723233 \n 2 \n \n \n 40723239 \n 3 \n \n \n 40723247 \n 3 \n \n \n 40739214 \n 3 \n \n \n \n 影片: \n \n 用戶登入設置 \n 操作步驟: \n 1.先git clone cd2020pj1倉儲。 \n 2.新增專案。 \n 3.點選啟用API和服務，點選Google+ Domains API並點選管理。 \n 4.設定同意畫面選擇內部並建立。 \n 5.點選憑證建立OAuth用戶端ID。 \n 6.設定來源及URL \n 7.將ID及密碼複製到編輯器，存儲在tmp下。 \n 8.開啟leo，並打開cd2020pj1.leo。 \n 9.將路徑及名稱改為自己的。 \n 10.存儲，並點選ROC。 \n 11.輸入pip install authomatic。 \n 影片: \n \n week11 \n 虛擬主機設置 \n 操作步驟 \n 1.下載Ubuntu \n 2.下載Virtualbox \n 3.開啟點選檔案>喜好設定 \n 4.新建網路 \n 5.把下載的Ubuntu匯入 \n 6.點擊啟動 \n 7.輸入密碼kmol2020 \n 8.點擊左上方activites>show\xa0 application>LX terminal \n 9.輸入指令xterm& \n 10.輸入指令 cd coppeliasim4_rev4 \n 11.輸入指令ls \n 12.輸入指令cd CoppeliaSim_Edu_V4_0_0_ubuntu18_04 \n 13.輸入指令 輸入 ./coppeliaSim.sh \n 影片: \n \n \n \n \n \n', 'tags': '', 'url': 'week10 ~ 14.html'}, {'title': 'Assignments 1', 'text': '', 'tags': '', 'url': 'Assignments 1.html'}, {'title': '四輪車手冊', 'text': '從 \xa0 http://www.coppeliarobotics.com/helpFiles/index.html \xa0裡挑了五個有關四輪車的章節來翻譯了解。 \n 章節:Line following BubbleRob tutorial \n 在CoppeliaSim的安裝文件夾中的tutorials / BubbleRob中加載第一個BubbleRob教程的場景。 \n \n 我們首先創建3個視覺傳感器中的第一個，並將其附加到bubbleRob對象。選擇[菜單欄->添加->視覺傳感器->正交類型]。通過雙擊場景層次中新創建的視覺傳感器圖標來編輯其屬性，並更改參數以反映。 \n \n 視覺傳感器必鬚麵向地面，因此選擇它，然後在“方向”對話框中的“方向”選項卡上，將“ Alpha-Beta-Gamma”項設置為[180; 0; 0]。 \n 我們有幾種可能性可以讀取視覺傳感器。由於我們的視覺傳感器只有一個像素，並且操作簡單，因此我們只需查詢視覺傳感器讀取的圖像的平均強度值即可。對於更複雜的情況，我們可以設置視覺回調函數。現在，複製並粘貼視覺傳感器兩次，並將其名稱調整為leftSensor，middleSensor和rightSensor。 \n \n \n 讓我們正確放置傳感器。為此，使用位置對話框，在位置選項卡上，並設置以下絕對坐標： \n \n 左傳感器：[0.2; 0.042; 0.018] \n 中間傳感器：[0.2; 0; 0.018] \n 右傳感器：[0.2; -0.042; 0.018] \n \n 現在讓我們修改環境。我們可以移去BubbleRob前面的幾個圓柱體。接下來，我們將構建機器人將嘗試遵循的路徑。從現在開始最好切換到頂視圖：通過頁面選擇器工具欄按鈕選擇頁面4。然後單擊[菜單欄->添加->路徑->圓圈類型]。使用鼠標啟用對象移動。 \n 選擇路徑（並且只有路徑）後，按住Ctrl並單擊其控制點之一。然後可以將它們拖動到正確的位置。 \n 選擇路徑後，進入路徑編輯模式。在那裡，您可以靈活地調整各個路徑控制點。 \n 一旦對路徑的幾何形狀滿意（您隨時可以在以後的階段對其進行修改），請選擇它，然後在路徑屬性中取消選中“顯示點的方向”，“顯示路徑線”和“顯示路徑上的當前位置”。然後單擊顯示路徑整形對話框。這將打開路徑整形對話框。單擊啟用路徑整形，將類型設置為水平線段，並將縮放因子設置為4.0。最後將顏色調整為黑色。我們必須對路徑進行最後一個重要的調整：當前，路徑的z位置與地板的z位置重合。結果是有時我們會看到路徑，有時會看到地板（這種效果在openGl行話中被稱為“ z-fighting”）。這不僅影響我們所看到的，而且還會影響視覺傳感器所看到的。為了避免與z戰鬥有關的問題，只需將路徑對象的位置向上移動0.5毫米即可。 \n 最後一步是調整BubbleRob的控制器，使其也將遵循黑色路徑。 \n 章節:External controller tutorial \n 在 CoppeliaSim 中，有幾種方法可以控制機器人或仿真 : \n \n 方法一是編寫一個腳本來處理給定機器人或模型的行為。這是最方便的方法，因為子腳本直接附加到場景對象，它們將與相關的場景對像一起復制，它們不需要使用外部工具進行任何編譯，它們可以在線程或非線程模式下運行，它們可以通過自定義 Lua 函數或 Lua 擴展庫進行擴展。使用子腳本的另一個主要優點是：與本節中提到的後 3 種方法（即使用常規 API ）一樣，沒有通信延遲，並且子腳本是應用程序主線程的一部分（固有的同步操作）。 \n 方法二是編寫插件。插件機制允許使用回調機制，自定義 Lua 函數註冊，當然還可以訪問外部函數庫。插件通常與子腳本結合使用（例如，插件註冊自定義的 Lua 函數，當從子腳本中調用時，該 Lua 函數將回調特定的插件函數）。使用插件的主要優勢還在於，與本節中提到的後 3 種方法（即使用常規 API ）一樣，沒有通信延遲，並且插件是應用程序主線程的一部分（固有的同步操作）。插件的缺點是：它們的編程更加複雜，並且也需要使用外部編譯。 \n 方法三是編寫依賴於遠程 API 的外部客戶端應用程序。如果您需要從外部應用程序，機器人或另一台計算機運行控制代碼，這是一種非常便捷的方法。這也使您可以使用與運行真實機器人完全相同的代碼來控制仿真或模型（例如虛擬機器人）。 \n 方法四是通過 ROS 節點。  ROS 與遠程 API 相似，是使多個分佈式進程相互通信的便捷方法。儘管遠程 API 非常輕巧且快速，但它僅允許與 CoppeliaSim 通信。另一方面， ROS 允許幾乎將任意數量的進程相互連接，並且提供了大量兼容的庫。但是，它比遠程 API 重並且更複雜。 \n 方法五是通過 BlueZero （ BØ ）節點。與 ROS 類似， BlueZero 是使多個分佈式進程相互通信的一種便捷方法，並且是一種輕量級的跨平台解決方案。 \n 方法六 是編寫一個外部應用程序，該應用程序通過各種方式（例如管道，套接字，串行端口等）與 CoppeliaSim 插件或 CoppeliaSim 腳本進行通信。選擇編程語言（可以是任何一種語言）和靈活性是兩個主要優點。同樣，控制代碼也可以在機器人或其他計算機上運行。 \n \n \n 章節:Simulation dialog \n 可以通過[菜單欄->模擬->模擬設置]或點擊以下工具欄按鈕來訪問模擬對話框 \n \n \n \n 時間 ：模擬時間。每次執行主腳本時，仿真時間都會增加仿真時間步長。使用較大的時間步會導致快速但不准確/不穩定的仿真。另一方面，較小的時間步長（通常）會導致更精確的仿真，但是會花費更多時間。強烈建議保留默認時間步長。 \n 每幀模擬遍數 ：一個渲染遍的模擬遍數。值為10表示刷新屏幕之前，主腳本已執行10次。如果您的圖形卡較慢，則可以選擇僅顯示兩幅中的一幅。 \n 當仿真時間高於以下時間時暫停 ：允許指定暫停仿真的仿真時間。 \n 腳本錯誤暫停 ：如果啟用，則在腳本錯誤發生時暫停仿真。 \n 模擬開始時全屏 ：如果啟用，則模擬以全屏模式開始。請注意，在全屏模式下，對話框和消息將不會出現或不可見，只有鼠標左鍵處於活動狀態。因此，僅在正確配置場景並最終確定場景後才建議使用該模式。可以使用esc鍵保留全屏模式，並在仿真過程中通過布爾參數sim_booparam_fullscreen進行切換。 Unler Linux和MacOS可能僅部分支持全屏模式，並且在某些系統上切換回普通模式可能會失敗。 \n 實時仿真，倍增係數 ：如果選擇，則仿真時間將嘗試跟隨實時。 X的乘數將使仿真運行比實時快X倍。 \n 在落後時嘗試趕上 ：在實時仿真過程中，仿真時間可能無法實時跟踪（例如，由於某些瞬間繁重的計算）。在這種情況下，如果選中此復選框，則模擬時間將嘗試趕上損失的時間，從而明顯加快速度。 \n 將場景重置為初始狀態 ：選中後，所有對像都將重置為其初始狀態：包括對象的局部位置，局部方向及其父對象（只要未進行其他修改（例如，縮放），以及路徑的固有位置，浮動視圖的位置和大小等。這意味著除非進行了重大更改（形狀縮放，對象移除等），否則下一次模擬運行將以與上一次相同的方式執行。 \n 刪除新對象 ：選中後，在仿真運行期間添加的場景對象將在仿真結束時被刪除。 \n \n 章節:Simulation \n 模擬 \n 使用[菜單欄->模擬->開始/暫停/停止模擬]或通過相關的工具欄按鈕來啟動，暫停和停止CoppeliaSim中的模擬： \n \n 在內部，模擬器將使用其他中間狀態，以正確告知腳本或程序接下來將發生的情況。 \n \n 腳本和程序應始終根據當前系統調用功能以及可能的模擬狀態進行反應，以便正確運行。優良作法是將每個控制代碼至少分為4個系統調用函數 \n \n 初始化函數 ： 僅在腳本初始化時調用該函數 \n 激活函數 ：應在發生激活時調用該函數。 \n 傳感功能 ：應在傳感發生時調用此函數。 \n 清理函數 ：該函數在腳本未初始化之前被調用。 \n \n 仿真循環 \n 模擬器通過以恆定的時間步長推進模擬時間來進行操作。 \n \n 通過嘗試使仿真時間與實時保持同步來支持實時仿真: \n \n 以下是一個非常簡化的主客戶端應用程序: \n \n 取決於模擬的複雜性，計算機的性能和模擬設置，實時模擬可能並不總是可能的。 \n 仿真速度 \n 在非實時仿真中，仿真速度主要取決於兩個因素，仿真時間長和一個渲染通道的仿真通道數量。在實時仿真的情況下，仿真速度主要取決於實時乘法係數，而且在一定程度上取決於仿真時間步長。由於計算機的計算能力有限，因此無法進行仿真。在模擬過程中，可以使用以下工具欄按鈕來調整模擬速度： \n \n 以某種方式調整模擬速度，以使初始模擬時間步長永遠不會增加。以下兩個圖說明了仿真速度調整機制： \n \n \n 默認情況下，每個模擬週期由以下順序操作組成： \n \n 執行主腳本 \n 渲染場景 \n \n 螺紋渲染 \n 渲染操作將始終增加仿真週期的持續時間，從而也降低了仿真速度。可以定義每個場景渲染的主腳本執行次數，但這在某些情況下還不夠，因為渲染仍然會減慢每個第x個模擬週期的時間。在這種情況下，可以通過用戶設置或以下工具欄按鈕激活線程渲染模式： \n \n 激活線程渲染模式後，模擬週期將僅包含在執行主腳本中，因此模擬將以最大速度運行。渲染將通過不同的線程進行，並且不會減慢模擬任務的速度。然而，必須考慮缺點。 \n \n 渲染將與模擬循環異步進行，並且可能會出現視覺故障。 \n 錄像機將無法以恆定速度運行。 \n 應用程序的穩定性可能會降低。 \n 某些操作需要等待渲染線程完成工作才能執行，反之亦然。在那些情況下，循環可能比順序渲染模式花費更多的時間。 \n \n', 'tags': '', 'url': '四輪車手冊.html'}, {'title': '亂數分組', 'text': 'Describe how\xa0to\xa0do an efficient random grouping for this\xa0course or do the roll calling randomly? \n 請描述如何針對該課程進行有效的隨機分組，或者隨機進行點名？ \n 在隨機分組及亂數抽點的程式中，利用 Dart 隨機分組源代碼中修改 html 來參考製作亂數分組。 \n 影片: \n \n', 'tags': '', 'url': '亂數分組.html'}, {'title': 'Assignments 2', 'text': '', 'tags': '', 'url': 'Assignments 2.html'}, {'title': '主題0', 'text': "翻譯章節: DigitalProductCollaboration \n 通過設計協作創建更好的產品 - 思想，工具，過程，數字產品今天比以往任何時候都更加複雜之前。創建他們需要多個團隊成員，每個團隊成員都有自己的一套技能和專業知識。例如，在 Savvy ，我們的客戶與以下人員緊密合作：產品經理， UX 設計師，視覺設計師，開發人員，內容策略師和成長專家。我們使用設計協作來處理這種複雜性。如果設計得當，設計協作將使每位專家都擁有思維方式，過程和工具，從而團結起來，更快地構建更好的產品。 \xa0 我們編寫了此資源，以幫助其他應用程序創建者採用協作文化和流程。繼續閱讀以了解為什麼設計協作對於創建引人注目的產品和體驗很重要。我們還將深入探討設計協作思想和文化的要素，有效設計協作的工具，以及工作中設計協作的真實示例。 \xa0 \n 什麼是“設計”協作？ \xa0 \n 在進入之前，我們需要在同一頁面上了解什麼是設計協作 …… 不是。簡單來說，設計協作就是在設計優先的環境中進行協作。但是，由於設計的本質，尤其是我們在 Savvy 所做的設計，設計協作往往會超出人們通常認為的協作範圍。 \xa0 通常將協作定義為兩個或兩個以上的人在共同的目標上共同努力，而設計協作則涉及更多。設計協作包括更多具有不同技能，更艱鉅挑戰和更大目標，影響深遠的人。 \xa0 您可能將協作視為兩個人掛在一塊藝術品上。它只需要溝通，團隊合作和四隻手。設計協作是指一組策展人精心設計訪問者的體驗。他們選擇藝術品，選擇在何處以及如何懸掛藝術品，它所居住的房間（以及房間的照明，家具），甚至是先前的房間以及整個建築物。 \xa0 \n 為什麼設計協作很重要? \n 您可以在沒有協作的情況下設計產品，但是需要一個協作設計過程才能使該產品出色。這就是設計協作如此重要的原因。 \xa0 \n 我們不僅為客戶構建應用程序。精明的人建立了多平台的體驗，複雜的內部系統，在某些情況下還建立了整個品牌和業務。為此，我們利用跨多個核心學科的專業知識：戰略，設計，開發和增長。每個項目涉及很多人，每個人都有自己的技能和專長。設計協作將這些思想融合在一起，結合他們各自的專業知識，共同創建解決方案，以解決共同目標的各個方面。設計協作不是從一個角度來解決問題，而是將這個問題擺在所有專家面前，迫使他們考慮新的觀點和可能性。例如，我們在設計過程的早期就讓我們的開發人員參與進來，以確保我們盡快解決技術機會和局限性。 \n 優勢並推動了我們的技術能力，同時進一步消除了流程中昂貴的障礙。它還限制了一個人可以在筒倉中工作的數量，從而使工作保持公開狀態，並強調用戶需求和產品目標。 \xa0 \n 培養設計協作心態大有幫助。 \n 在設計過程中建立有效協作的過程中，正確的思維方式。它為誰進行協作，如何合作以及達到何種目的奠定了指導原則。 \n 合作適合所有人。 \n 設計師有時會認為不是設計師的人沒有資格提供良好的反饋。但是出色的設計不只是視覺效果。它涵蓋了產品的所有內容，從品牌到工程，再到發展。設計協作吸引了許多人，每個人都有自己的觀點和優勢。它給每個人一個聲音。這些新鮮的觀點為設計師提供了更多信息。前景使設計師能夠對可能對其他設計，開發和營銷選擇產生持久影響的選擇做出正確的決定。與客戶的協作與與其他設計師和團隊成員的協作一樣重要。在 Savvy ，我們讓客戶參與其產品的整個創作過程。我們花時間解釋各種選擇，並與客戶進行討論，以確保我們了解他們的想法。這使我們能夠及早獲得客戶的認可，並從明確的起點和終點開始工作。更大的曝光量並不是什麼大驚喜，而且沒人會第一次看到他們的作品。 \xa0 客戶協作意味著可以更快地獲得更清晰的產品，而無需付出高昂的代價和不必要的會議。 \xa0 很容易陷入角色而忽略全局。通過儘早讓更多人參與進來，您可以與隊友建立更緊密的聯繫，並培養對產品成功的共同責任和興趣。您正在創建一個更加開放和透明的流程，以及一個更緊密聯繫和投入的團隊。 \xa0 \n 合作是背景性的。 \n 客戶面對我們時面臨著複雜的挑戰和目標。更不用說，我們將繼續與客戶合作數月甚至數年，並在過去的決策，研究和其他有價值的背景下積累大量的知識。通過採用上下文優先的方法，可以確保每個人都具有最高的知識水平。這樣，他們就可以在產品上做出最明智的決定。為了做到這一點，我們通過儘早召集所有團隊成員，記錄和記錄會議，建立一些重疊並將過程中的下一個團隊成員像客戶一樣，使 Savvy 的每個人都獲得相關信息的最新信息。 \xa0 在個案協作的基礎上，上下文也同樣重要。請遵循以下準則，以保持協作中的上下文優先：在顯示工作之前提供上下文。在提供背景信息的情況下，如果您的作品出現在屏幕上，那麼您可能會失去聽眾的注意力。 \xa0 描述您要解決的問題或要達到的目標。 \xa0 介紹與當前問題相關的工作。說明您的想法以及做出某些決定的原因。請具體說明您要反饋的內容。 \xa0 \n 合作是開放，誠實和無畏的。 \n 將工作（和您自己）放在外面並不容易。情緒會阻礙您提供坦誠的反饋，尤其是當您擔心會傷害對方的感覺時。這並不意味著在協作中沒有情感的位置。在設計中，讓您感覺如何很重要。我們為人們 ... 思考並為他們創建解決方案 ... 有情感並在決策中使用情感的人。在對話中留下情感可能會縮短潛在的想法或解決方案。充其量，僅就事實和數據進行務實的討論將無法提供全面的信息。在最壞的情況下，它可能是鯡魚或提供虛假的敘述。在 Savvy ，我們使我們的團隊對收到反饋 “ 無所畏懼 ” 。這意味著放開對我們所創造的東西進行判斷的任何焦慮。這也意味著了解我們在一起更加強大，更有機會創造偉大的事物。在無所畏懼的情況下，我們會更好地相互信任和相互賦予能力，以提供誠實和周到的反饋。我們的團隊還相信，不要害怕提供反饋。這意味著要了解需要解決的問題以及客戶的品牌和目標。這也意味著問很多問題，以發現相關的思想或幫助指導決策。 \xa0 嘗試以探索性和指導性的方式提出反饋意見，目的是建立和改進工作，而不是拆散工作。您的反饋應該是建設性的。與其說您不喜歡某些東西，不如說出您的反饋意見以指出您要幫助解決的問題。提供可行的步驟來改進工作，或者至少提供您思考背後的理由。並且不要忘了表達您喜歡什麼以及為什麼。 \xa0 \n 協作不僅僅是新的想法。 \n 開放和接受協作反饋是一回事，解析這些想法並將其用作激發自己的想法是另一回事。隨著時間的推移，這是一項更高級的技能。一種實踐方法是成為更好的聽眾。通常，在與他人交談時，我們會更多地考慮接下來要說的內容，而不是別人在說什麼。這會影響反饋過程，尤其是在設計過程中，因為在聽到其他意見或解決方案之前，我們通常會知道我們要說的話。當您選擇先聆聽然後再做出反應時，它可以讓您完全理解其他人的反饋，並讓您更深入地了解自己 - 他們使用的觀點是什麼以及來自何處？很有可能這是您在創建過程中未曾考慮過的觀點。通過聽取並理解所收到反饋背後的上下文和推理，您可以以更多的方式來審視，思考和體驗設計。然後，您可以針對要設計的挑戰，目標和用例來測試這些新觀點，以查看它們是否更適合用戶。當所有協作者都在積極聆聽時，更容易接受反饋。最終，提供良好反饋的技能來自學習如何獲得反饋。當我們努力成為更好的聽眾時，我們也發現自己變得越來越謙虛，我們認為更好的設計師。 \xa0 \n 查找和使用正確的設計協作工具。 \n 正確的工具在增強團隊的設計協作思想方面大有幫助。在本節中，您將學習在協作工具中尋找什麼。我們還根據自己的經驗推薦工具。有效的協作工具消除了合作者快速便捷地訪問工作並與之交互的所有障礙。這將重點放在提供反饋上。它們還允許其他人在不破壞原始設計的情況下進行協作。過去，我們使用依賴於提供基本版本控製而不是真正的協作功能的工具。例如，設計人員將保存一個 Sketch 文件並將其上傳到 Dropbox 。然後，另一個團隊成員將下載它，進行處理，然後重新上傳。當文件在另一個人手中時，沒有簡單的方法進行更改。我們使用 Github 嘗試了類似的方法，該工具被證明非常適合管理代碼庫，但對於迭代設計工作卻沒有太多幫助。不用說，這些版本控製過程使我們的協作更加耗時，混亂並且非常不協作。 \xa0 現在，我們根據要實現的協作類型從各種更高級的工具中進行選擇。 \xa0 \n FIGMA\xa0 \n 這是一個協作優先的共享工作區工具。  Figma 非常適合在設計文件的同一區域中包含多個人。您可以實時觀看隊友的設計或在同一個設計上一起工作。 \xa0 \n 好處 ： \xa0 \n Figma降低了某人在筒倉中工作的能力。無需添加不必要的修飾或創建靜態可交付結果即可實現協作。因此，您無需更改工作流程即可展示設計。可以輕鬆地在其本機環境中查看並與之交互，並隨意進行調整。使用時間：流程文檔，高保真線框，即時協作，以及引導客戶瀏覽一系列屏幕，以解釋並獲得有關設計方向的反饋。 \xa0 \n MARVE \n L\xa0 \n 雖然 FIGMA 容易感到更自由的形式和靈活，奇蹟允許合作的一個更加規範的形式。這也使我們的客戶可以輕鬆地與我們合作。 \xa0 \n 好處 ： \xa0 \n Marvel是一個更清潔，更規範和專注的空間，非常適合與非設計團隊成員進行協作。它消除了客戶為帳戶付款或對工具進行深入了解的所有需求。客戶可以下載屏幕，並通過 Marvel 應用程序在設備環境中查看它們的運行情況。 \xa0 \n 使用時間：與客戶和開發人員一起呈現更多最終設計工作。 \n 其他協作工具\xa0 \n Zeplin 是有用的傳遞工具，使開發人員可以深入研究設計工作的細節。 \n Quip 是一個集思廣益和產品 / 過程文檔的絕佳平台。我們使用它來記錄和組織團隊成員在項目上需要了解的所有上下文和知識。對於集思廣益而不是視覺關注的新想法也很有用。請注意，還有許多其他工具可以為協作增加與上面列出的類似的好處。此列表代表了在我們日常合作中對我們有效的工具，但並不表示所有可能對您的團隊有效的選項。 \xa0 \n Savvy的設計協作過程在實踐中\xa0 \n 現在，讓我們採用上面概述的最佳實踐和工具，並展示它們如何在現實生活中融合在一起。我們將使用 Press Play 應用程序中的實時繪圖經驗來演示設計協作的重要性。這種經驗涉及多個學科領域的團隊成員之間的重大協作，其中包括視覺設計師， UX 設計人員，開發人員，產品經理，當然還有客戶。 \n 上下文和挑戰\xa0 \n Press Play 是包含每日，每周和每月圖紙的抽獎應用程序。用戶通過觀看廣告賺取門票，並通過選擇五個表情符號輸入圖紙。然後，根據獲獎者的選擇與繪畫中隨機選擇的表情符號匹配的方式來獎勵獲獎者。這項特殊任務使我們為等待現場繪畫結果的用戶創造了一種有趣而激動人心的現場體驗。對於我們來說，為這種體驗創建類似遊戲的動畫非常重要。我們特別想在屏幕上喚起用戶的嬉戲感和期待感，讓用戶看到他們選擇的表情符號與抽獎活動圖上的表情符號相匹配。就是說，我們需要注意動畫所需的複雜程度及其對整體產品時間表和成本的影響。我們的目標是在合理的時間內提高保真度，而又不顯著影響項目預算。 \xa0 \n 協作過程\xa0 \n 階段1 ：線框和頭腦風暴 \xa0 \n 首先，一個精明的 UX 設計師創建了 Press Play 的整體 UX 和線框，確定需要什麼屏幕以及每個屏幕的時間安排。她還為實時繪畫動畫整理了一個粗略的概念（如右圖所示），根據客戶的需求和項目已建立的用戶體驗表達了初步的想法。 \xa0 她向產品經理和視覺設計師展示了線框和粗糙的動畫。然後，這三個人都與客戶會面，因此每個人都可以直接聽到反饋。 \xa0 \n 階段2 ：研究和環境 \xa0 \n 精明的視覺設計師負責創建實際的實時繪圖動畫，而他們的眼睛新鮮，並且對 Press Play 產品沒有太多的了解。為了加快速度，他與 UX 設計師和產品經理進行了深入交流。他還花費額外的研究時間來了解總體產品目標，挑戰並熟悉迄今為止的工作。如前所述，他是線框演示的一部分，並向客戶提出反饋。在這種情況下，他進行了一些與手頭任務直接相關的其他研究。通過這樣做，他確保自己了解現場繪畫體驗的要求，目標和挑戰。他查看了具有類似體驗和保真度的其他應用，並參考了粗糙的動畫以了解最終動畫到底需要顯示什麼（在這種情況下，是獲勝的表情符號和用戶的表情符號選擇）。在過於依賴解決方案之前，他會見了一位精明的 iOS 開發人員，以了解技術限制和注意事項。然後，我們的視覺設計師和 UX 設計師集思廣益，對視覺效果至關重要。他們一致認為，需要為用戶增加懸念 / 期望，這需要緩慢的揭示。 \xa0 \n 階段3 ：迭代和反饋 \xa0 \n 當我們的視覺設計師通過多個不同的方向工作時，他邀請 UX 設計師來討論他在 Figma 中的進度和設計。 。通過討論工作，他們激發了更多的想法和迭代，同時確保它們符合客戶的期望。有了更多可靠的選擇，他再次與 iOS 開發人員會面，以確保從技術角度來看一切都符合要求。 \xa0 \n 階段4 ：客戶反饋和開發 \xa0 \n 當我們獲得多個最終版本的體驗時，視覺設計師使用 Figma 與客戶一起進行了體驗。  Press Play 的產品經理和 UX 設計師也提供了反饋和指導。 \xa0 \n 一旦他們都了解了引起客戶興趣的東西，視覺設計師便著手使視覺效果最大化，並為開發做好準備。他繼續與 iOS 開發人員合作，以在技術層面上充分利用該概念。 \xa0 \n 最終結果\xa0 \n Press Play的實時繪圖動畫是工作中設計協作的一個例子。一支跨學科專家團隊，共同解決具有更大影響的設計和開發挑戰。沒有設計協作，我們將找不到用戶體驗，視覺和技術之間的理想交匯處。當客戶在他的應用程序中看到動畫生動時，他稱其為 “ 開創性的 ” 。此外，這種 Press Play 體驗的研究，協作和創造幫助我們發現了產品用戶旅程中的空白。最初，實時繪圖的目的是將結果顯示給用戶的一種有趣的方式。在設計過程中，我們意識到，如果用戶沒有觀看實時圖形而迷路了，他們就無法體驗到該圖形的用戶旅程。基於這一發現，我們決定在其他兩個地方也改進該應用程序。我們在 “ 獲勝者圈子 ” 中添加了一個 “ 結果 / 實時繪圖 ” 元素，並在該應用程序的 “ 用戶詳細信息 ” 端添加了 “ 失敗記錄 ” 部分。最後，設計協作使我們能夠實現用戶體驗中這一未滿足的需求。 \xa0 \n 結論說明\xa0 \n 需要進行設計合作，以解決構建出色產品和體驗所伴隨的複雜，關鍵問題。通過利用跨學科的多個團隊成員的專業知識，設計協作可確保團隊從各個角度應對挑戰並尋求更好的解決方案。通過正確的思維方式，工具和流程，設計協作使團隊能夠通過創造性思維和迭代來更深入。我們希望本指南為您提供一個良好的基礎，您可以以此為基礎建立自己的有效設計協作流程。您可以在 Savvy 博客上了解有關設計和產品策略的更多信息，也可以隨時在 Savvy Apps 網站上與我們聯繫以獲取幫助。 \n 翻譯章節: IndustrialAndEngineeringProductDesignCollaboration \n 本研究旨在闡明工業設計師和工程設計師如何協作，以及這種聯盟如何反映設計過程。我們與來自六個消費產品製造商的 34 名工業和工程設計師進行了有關實際產品設計項目的深入採訪。我們首先從訪問數據中識別出各個設計過程。其次，我們然後使用鑲嵌方法將設計過程進行比較並合併為協作過程。我們最終簡化了協作過程，以創建代表性的過程模型。結果，我們發現了四種類型的典型協同產品設計流程及其特徵： \n 類型1 ：由 ID 主導的概念驅動過程 \n 類型2 ：由 ID 主導的內外聯合過程 \n 類型3 ：由 ED 主導的內在先流程 \n 類型4 ： ID ＆ ED 協同流程 \n ElsevierLtd保留所有權利。眾所周知，工程設計和工業設計有很大的不同設計實踐，和他們的設計方案在某些方面彼此相反。工業設計師的角色包括增強產品的用戶體驗並開發其外部形式和界面。他們運用美學和人體工程學方面的知識和技能。在與工業設計師的互動下，工程設計師參與了實施由工業界開發的設計概念。工程設計人員提供了一種使產品正常運行，可靠並製造出  kplee@kaist.ac.kr 的方法。這導致了不同的方法工業和工程設計師之間。 \n 它經常被認為工程設計人員使用一個 ' 向外接近 電子商務 發展從功能外觀，而工業設計師遵循向內方法 E 從外觀上的功能顯影。基於這些概念，提出了以下兩種設計策略：一種是 “ 由內而外 ” 的策略，定義為首先設計內部工作部件，從而限制了外部形狀，另一種是 “ 由外而內 ” 的策略。首先定義封套，然後約束內部零件。這些設計策略涉及公司應在特定條件下為特定目的採取的組合設計過程。但是，從經驗證據中很少了解到這兩種策略如何在工業項目中應用。很少有嘗試從工程設計和工業設計的綜合角度來看待設計過程。在這方面，我們研究了工業環境中兩個學科的協作設計過程。研究的問題是：存在哪些類型的協作產品設計流程，以及什麼條件促使公司採用特定類型的流程。根據這兩個設計師小組的角色和特點，我們假設會有不同類型的由內而外的設計方法。我們認為，由內而外的方法將以工業設計為主導的設計過程為特徵，從而產生工業設計師作為需求和標準提供者的角色，而由內而外的方法將以工程設計為主導的設計過程，工程設計師通過提供對工業設計師職責的初始要求來限制工業設計師的任務範圍。為了在競爭激烈的市場中取得成功，公司應通過適當地採用從內而外的方法來匹配其情況和目標，從而創建工業設計和工程設計的協作流程。 \xa0 \n 本文有兩個目標：首先，闡明在實踐中應用的原始協作產品設計過程的形式；其次，確定在不同條件下用於不同目的的不同類型的過程。為此，我們對六家消費產品製造商的工業設計師和工程設計師進行了深入採訪。我們使用 “ 確定了每個公司的產品設計過程鑲嵌法 ” ，其中結合了從訪談數據中提取的各個設計過程以完成一個協作過程。結果，我們確定了四種典型的協作產品設計流程及其特徵。通稱 “ 協作產品設計 ” 是指通過工業設計和工程設計的共同貢獻而創建的產品設計。特別是在公司環境中，協作產品設計涉及一系列設計活動，例如創建初始產品概念，確定內部規格以及開發外部形式和內部結構。因此， “ 協作產品設計過程 ” 是指工業設計和工程設計都直接參與產品開發活動的產品設計過程。 \xa0 \n 工業設計在這一點上主要涉及開發消費品的外部形式，界面和用戶體驗，但不包括純圖形設計或純樣式設計。工程設計開發了用於在消費產品中放置和操作內部功能部件的技術解決方案，並以能夠實現大規模生產的方式定義了構成產品的內部和外部部件。我們將從事此類活動的標記為工程師工程設計師。本文包括三個部分： \n 第一部分 詳細介紹了研究方法 \n 第二部分 介紹了典型的協作產品設計過程及其特徵 \n 第三部分總結了結果，並討論了對設計文獻的影響和貢獻。研究方法為了研究協作產品設計過程的類型和相關條件，我們在數據收集和分析中採用了紮實的理論方法，以及的 “ 鑲嵌方法我們設計用於重構 ” 工業設計師和工程設計師之間的協作設計過程。紮根的理論方法在社會科學中被廣泛用作為研究較少的領域建立理論的系統方法，而在設計研究中已被長期採用。它使用歸納邏輯，主要是通過深入的訪談和 / 或觀察開始進行數據收集。在編碼階段，通常有兩種策略。一種是從數據中收集有意義的參考並進行編碼，如果研究主題沒有明確定義，則將它們分為編碼類別。另一種是在明確定義研究主題時，使用符合特定主題的預定義編碼類別來標識相關參考。我們使用了後一種策略，因為對設計過程進行了廣泛的研究。採用了類似的方法， Berends 、 Reymen 、 Stultiens 和 Peutz  對五家公司的設計過程進行了調查。  Kleinsmann 和 Valkenburg 收集了有關工業中協同設計過程的故事，並確定了協同設計項目的關鍵主題和情節。我們首先對個別設計師進行了深入採訪，並收集了他們關於設計項目的故事。為避免追溯性賬目的不可靠或不准確，我們採用了三個標準來選擇研究目標： \n （ 1 ）多家公司類似的產品領域 \n （ 2 ）工程和工業設計部門的多個參與者 \n （ 3 ）在整個產品開發週期中已經完成的項目。 \n 我們設置了第一個標準來提高研究結果的適用性。對項目環境的了解和分析提高了設計過程和方法的適用性。因此，對具有相似項目環境的多家公司進行調查可能會提供更好的機會來應用研究結果。使用第二個標準，來自具有不同觀點的多個線人的數據可以相互補充，以抵消任何潛在的偏見。最後，在回顧性訪談中，可以通過收集和分析整個產品開發週期中已經完成的設計項目的故事來確定設計過程。 \xa0 \n 為了基於轉錄的訪談數據重建產品設計過程，我們首先確定 “ 過程要素 ” ，然後繪製出各個設計師實踐的部分設計過程。接下來，我們使用 “ 將每個公司的所有部分流程組合到協作產品設計流程中鑲嵌方法 ” 。在構建了所有詳細的協作產品設計流程之後，我們使用 “ 對其進行了簡化，流程塊 ” 以識別典型設計流程的類型。最後，我們將它們可視化為設計過程模型。 \xa0 \n 可以根據實際設計項目確定實際設計過程及其相對於上下文的特徵，這可能與公司記錄的設計過程不同。比較兩者將提供洞察力。但是，我們無法收集它們，因為它們被視為對外部機密。取而代之的是，我們詢問受訪者他們的公司是否有書面的標准設計流程，以及它是否與實際設計流程不同。 \xa0 \n 1.1深入訪談 \n 1.1.1案例公司的選擇 為了提高適用性，應該在公司的環境和背景下理解設計過程。因此，我們通過指定案例公司來設置三個標準。採納的三個標準如下： \xa0 \n 1）公司應生產中等複雜的電子消費產品。 \n 2）他們應該有獨立的工業設計和工程設計部門。 \xa0 \n 3）他們應該是領先公司在市場上生產精心設計的高質量產品。 \xa0 \n 第一個標準使得能夠選擇在產品領域內具有相似性的製造商，其中工業設計師和工程設計者都扮演著重要角色。生產簡單消費品的製造商在工程設計師中的作用將減少。另外，開發火箭不需要工業設計師的作用。  Ulrich and Eppinger  指出，複雜程度適中機電產品需要工業設計師和工程設計人員同樣重要的角色。根據提出的具有復雜性的工程消費產品分類，  Cross 中等複雜產品的例子包括電鑽和洗衣機。因此，中複雜的電子消費類產品是指那些 engi- neered 產品全面整合電子和機械系統的日常消費類電子產品瓦西。儘管滿足第一個條件，但是某些公司例如原始設備製造商或小型公司的工業設計或工程設計部門是一個，或者沒有。在這種情況下，他們會使用外部設計和 / 或工程諮詢公司。他們的協作過程將不同於內部獨立工業設計和工程部門之間的協作過程。我們傾向於通過探索具有相似背景的案例來提高研究結果的適用性。因此，滿足了第二個標準。最後，生產精心設計和高質量產品的領先公司可以為調查提供合理和適當的數據，研究結果將為其他公司提供很好的參考。 Lawson  指出，發現良好的設計實踐是如何發生的，將有助於理解和製定更有效的方法。這是第三個標準的理由。 \xa0 \n 我們選擇了具有上述標準的案例公司。我們首先將第一和第三標準應用於從 2006 年到 2010 獲得 “ 韓國優秀設計獎 ” 的公司。韓國優秀設計獎在韓國許多市場領先的製造商中很受歡迎。結果，我們獲得了 16 個公司名稱。然後，我們與獲獎公司列表中的聯繫方式聯繫了每家公司，並詢問網守是否具有獨立的 ID 和 ED 部門（第二標準）以及他們是否願意參加研究。最後，我們選擇了六家公司。 \xa0 \n 1.1.2選擇受訪者 我們採用有目的性和滾雪球採樣方法選擇受訪者。每個公司的網守都建議他們的設計師，而後者又建議他們的同事。在這樣做的同時，我們選擇了滿足以下三個條件的受訪者： \xa0 \n 1）在公司中有超過兩年的經驗 \n 2）參與了至少一個產品開發過程的周期 \n 3）與同行的緊密合作和互動 \n 從公司的工業設計師和工程設計師團隊招募的預期受訪人數為 6 人，每人 3 人以保持平衡。但是，我們只能從 B 公司和 F 公司招募兩名工程設計人員。總共有 18 名工業設計師和 16 名工程設計師作為受訪者參加。他們的工作經驗從 2.1 年到 20 年不等，平均為 8.9 年。 \xa0 \n 1.1.3訪談程序 我們根據文獻的建議。我們首先列出了約 20 個詳細問題，並將其分為四個主要主題： \n 1）個人信息 \n 2）設計過程 \n 3）角色和專業知識 \n 4）互動 \n 然後提出了四個關鍵問題： \xa0 \n 1）您的職位和職位在團隊中的角色？ \n 2）產品設計過程如何進行發生？過程中了什麼？ \n 3）您在設計過程中擁有哪些任務，以及知識和執行項目所需的技能？ \n 4）工業設計和工程設計 \xa0 在設計過程中如何相互影響？ \xa0 \n 訪談首先要問的是關於受訪者在團隊中的角色和工作經驗的問題，然後是產品開發，公司業務領域工業設計師的數量工程設計師的數量。 \n 他們經歷的過程及其在這些過程中的任務。當受訪者由於不願意指出要召回的時刻而猶豫不決時，我們提供了詳細的背景信息，例如：假設今天是您所參與項目的開始會議日，然後告訴我有關發生了什麼。這是在訪談研究中提出的很好質疑的建議的基礎。假設替代、理想和解釋性問題。為了限制由多個訪問者引起的不一致，一位作者執行了所有訪問。此外，作者在產品開發方面擁有 14 年的行業經驗，這限制了誤解受訪者描述的綜合設計情況的可能性。為了避免對面試官的經歷產生偏見，本研究遵循了 “Epoche” 過程，在該過程中，對現象的預判和假設被阻止，以便在參與者的世界中對其進行檢驗。因此，面試官在感覺像要評價受訪者的回應時就忽略了對這種現象的判斷。我們在每個公司的安靜房間中進行了採訪，並對所有對話進行了錄音。為了幫助進行對話並記錄補充信息，我們做了現場說明。有時，受訪者會在便箋上製作圖紙以提供詳細說明。從經驗中知道， 90 分鐘適合進行深度訪談，因為線人在這段時間內會認真回答訪談，而線人在 90 分鐘以上時的回應往往會減少。遵循指南，我們計劃的採訪時間為 90 分鐘，但我們沒有控制住它。當我們有足夠的關於問題的數據時，我們通過觀察減少了來自答复的新信息來結束訪談。錄音機中的 “ 語音檢測錄音功能 ” 使我們能夠暫停錄音幾秒鐘，並在聲音恢復時恢復。每個受訪者的錄音時間從 70 分鐘到 100 分鐘不等，所有參與者的平均錄音時間為 78.5 分鐘。因此，每個受訪者的實際採訪時間應長於錄音時間。我們逐字記錄了所有採訪數據。結果，我們獲得了大約 1000 頁的全部轉錄。 \xa0 \n 1.2識別設計過程 \n 1.2.1識別每個人設計過程 經歷的 儘管所有轉錄數據都包含與設計過程相關的信息，但它們都與其他內容混合在一起，包括項目的情況和目標，個人的角色，必要的技能和知識，行為者之間的衝突，彼此的感知圖像等。我們首先通過回顧相關文獻來確定編碼過程框架，以確定 “ 過程要素 ” 。用於構建設計過程。我們通過仔細閱讀 A 公司的採訪記錄來確認他們。關於過程建模，將過程視為信息處理和狀態轉換系統的兩種觀點為有關過程建模的過程元素的編碼類別提供了有意義的線索。從信息處理的角度來看，  Browning ， Fricke 和 Negele  將產品開發及其活動視為信息收集，創建，解釋，轉換和轉移的過程。大多數產品開發活動需要一組輸入，並作為活動的結果，初步輸出，狀態報告等進行生產。這一觀點得到了有關設計過程和組織的大量文獻的支持。 Ulrich 和 Eppinger 將其描述為最終結果所必需的信息，該信息被注入以將當前設計問題轉換為下一個問題以降低不確定性，從而產生輸出，直到形成最終結果為止。這被建模為將功能規範（輸入）轉換為偽影規範（輸出）的過程。  Browning 和 Ramasesh 不多指出，從信息處理的角度進行過程建模無法捕獲完整的信息流，因為人們對交互的了解。他們認為，確定組織單位之間的相互作用的重要性，因為它們會引起建立可交付的流程模式的活動之間的依賴。決定性，過程建模的在此透視基本元件被概括的信息流與 IPO （輸入端 E 方法 e 輸出） REP-resentation 和相互作用組織單位的 ' 人，團隊，公司等。 \xa0 \n 從狀態轉換的角度來看， Reymen  將設計過程描述為通過在每個階段執行任務並評估設計活動將狀態從一種狀態轉移到另一種狀態的過程。這是台門車型，在設計活動發生在舞台的每一個階段，設計輸出的設計審查，從而作出決定之間是否進入下一個階段，重複當前階段或拒絕該項目的進行評估一致。大多數基於階段的模型都提出了這種觀點。基於階段的模型由旨在執行任務的動作和旨在評估執行任務的結果的決策組成；其中完成構成進展到下一個階段。除此之外，當從一個階段跳到另一個階段或在子過程之間鏈接時，伴隨輸入和輸出的信息流就會發生。提出的工程設計過程模型  Pahl 等人。證明了每個階段的明確投入和成果。第一階段的輸入是任務，結果是規範，它又作為輸入進入下一階段。這樣，繪製出了將輸入和結果連接起來的順序發展階段。關於術語 “ 任務 ” 和 “ 設計活動 ” ，  Pahl 等人。使用 “ 任務 ” 來表示項目的初始起點，不同於在每個階段執行的 “ 任務 ” 。但是，這兩個術語的用法類似，用以表示執行設計工作，因此，人們對相互連接和處理任務的設計過程達成了普遍共識。 \xa0 從狀態轉換的角度來看，有兩個活動：執行任務和評估結果。通常，評估會在相對較短的時間內進行，以決定 “ 前進，重複或下降 ” 。因此，我們將這些類型的活動（評估，設計審查，檢查，決策）稱為 “ 事件 ” 。目前，我們有兩個編碼類別： “ 任務 ” 和 “ 事件 ” 。總之，我們可以用四個編碼類別對設計過程進行建模。任務、事件、信息流和交互，並且可以用階段的連接來表示。此時，的設計過程的一個階段可以用來表示 ' 輸入端 E 任務（設計活性） E 事件在線輸出。以下描述瞭如何使用以上四種編碼類別對過程元素進行編碼。 \xa0 \n \n 任務 ：清除設計人員執行的任務，例如想法草圖、 3D 建模等。是的，我做的草圖用圓珠筆來表達我的想法。對其進行少量著色或對其進行掃描以在 Photoshop 上進行修飾。我們將其編碼為帶有想法草圖標籤的任務類別。 \n 事件 ：完成特定任務後，將進行一個事件（決策），從而導致下一個動作。一位受訪者說 : 我們去樣機公司製造原型，並帶走所有兩個或三個原型。與他們舉行了一次模擬評估會議。 工程師們聽老闆的批評。老闆說就是這樣，那就是，如果工程師有不同的想法，他們會提供意見。 最後一個被選中。我們在事件類別中使用標籤 “ 模擬評估會議 ” 對此進行了編碼。 \n 信息流 ：當任務或事件發生時會生成信息流。它總是伴隨著輸入和輸出。一位受訪者說 : 實際上，我們根據工程設計人員提供的規范進行工作。直到有事情出現，我們才開始工作。這說明工業設計師從工程設計師那裡接收到了 “ 規格數據 ” 作為輸入，他們開始使用他們的工作。我們將此規範數據從 ED 編碼為 ID 。 選擇一個後，我們會將模型的 3D 數據傳遞到工程部門。我們發送 “ STEP” 文件，然後使用 “ UG” 開始設計。這說明他們將 3D CAD 數據作為設計活動的輸出發送給了工程設計人員，這些輸入成為了後續工程設計活動的輸入。我們將此 “ 從 ID 到 ED 的 3D CAD 數據 ” 編碼。 \n 交互 ：發生任務或事件時，兩組經常交互。例如，當工業設計師檢查是否可以修改內部空間時，工程設計師通過提供相關信息為他們提供建議。在這種情況下，會發生激烈的互動，工程設計師將充當 “ 顧問 ” 。情況就是這樣 “ 他們解釋說 ” 這應該放在這裡和應擺在那裡。然後，我們修改尺寸和位置，然後再次詢問它們是否可以減小 2 毫米的間隙。如果他們說 “ 是 ” ，我們會將一個部分壓平。我們將其編碼為 “ ED 到 ID 的顧問角色 ” 。 \n \n 我們從每個轉錄的訪談數據中識別出流程要素。我們盡可能用參與者自己的單詞標記它們。我們將現場說明用作補充數據源。在此過程中，我們按時間順序排列並連接了編碼元素，以構建部分設計過程。該方法被廣泛採用以可視化工業過程模型。我們還根據訪談數據確定了設計過程中涉及的項目類型和目標。兩名研究人員執行了整個程序。一位研究人員首先構建了部分設計流程，另一位研究人員通過檢查訪談數據對其進行了檢查。結果，我們獲得了 45 個局部設計過程。 \n 1.2.2識別協作產品設計流程下一步是通過 “ 將每個公司的設計流程組合為協作設計流程鑲嵌方法 ” 。我們首先從公司的特定項目中收集了部分設計流程。之所以容易做到這一點，是因為公司的設計師描述了同一項目中的共享經驗，因此各個局部設計過程相互重疊並相互補充。之後，我們通過比較和合併過程元素來合併部分過程。從工業設計者的訪談數據中提取的部分過程提供了有關工業設計活動的豐富信息。 \n 包括與工程設計人員的互動行為，但有關純工程設計活動的信息較少。工程設計也是如此。我們將公司中工業設計師的部分流程合併在一起，以圍繞工業設計活動重建設計流程。同時，我們利用工程設計師提供的信息來補充和加強工程設計方面的設計活動流程。我們以相同的方式圍繞工程設計活動重建了設計流程。我們最終將這兩個設計過程合併為一個協作產品設計過程。在鑲嵌方法中，結合交叉檢查的局部過程有利於提高可靠性和通用性。通過抵消彼此的信息，這大大降低了構建信息不完整的流程的可能性。因此， “ 鑲嵌法 ” 降低了構建不准確過程的可能性。 \xa0 \n 在比較部分設計過程時，我們發現產品計劃團隊參與了一些設計過程元素。因此，我們包括了它的作用。這意味著產品規劃團隊在工業設計和工程設計的協同設計項目中扮演著一定的角色。我們還標準化了一些表示相同任務或事件的術語。但是，它們的編碼方式不同，因為受訪者使用它們的方式略有不同。例如，我們發現一個會議被編碼為 “ 被編碼為產品計劃會議在一個局部設計過程中 ” ，而過程中 “ 產品開發會議在另一個 ” 。因此，我們將它們統一為 “ 產品計劃會議 ” 。有些人還稱工業設計結果為不同的名稱，例如模型、設計模型或模型製造。我們將它們統一為 “ 設計模型 ” 。我們還將標準化實體模型評估活動和實體模型選擇為實體評估事件。通過交叉檢查每個公司的面試數據，同時評估特定術語的含義和上下文來完成這項工作。實際上，設計師似乎了解每個公司定義了標準術語的文檔化設計過程，但並不是特別了解它。他們似乎忽略了標準化流程，因為市場形勢迫使他們迅速採取行動。語言差異也是造成術語差異的可能原因。在產品設計領域，韓國語中的母語和借來的單詞混合使用。例如，我們同時使用借用詞和本國詞來表示英語的“  design ”。此外，兩支球隊的文化和位置上的差異很可能會導致期限上的差異。除 F 公司外，這兩個部門分別位於不同的物理空間，至少位於不同的樓層。 \n 最後，我們通過將階段元素（輸入，任務，事件和輸出）合併到一個框中並在其中將它們與相關任務進行命名，來定義設計過程中的階段。例如，工業設計師開始根據前一階段的研究結果繪製各種構想草圖。然後，他們通過評估選擇一些最佳草圖。根據選擇的結果，他們決定進入下一階段或重複當前階段。因此，想法草圖階段由研究結果（輸入）、想法草圖（任務）、評估（事件）和最佳草圖（輸出）組成。 \n 結果，我們從所有公司獲得了 12 個協作產品設計流程；每個公司一到三個。我們將它們發送給每個公司的線人，以檢查我們對其流程的解釋。在此過程中進行了較小的更改。它在兩側顯示了兩個並行的過程：左側是工業設計過程，右側是工程設計過程，中間示出了兩者之間的相互作用。中間的“產品計劃會議”是由“產品計劃小組”主持的活動，由他們決定是否繼續將概念商業化或拒絕。文本框是由輸入任務事件輸出組成的階段。帶有虛線的文本框不是階段。它們沒有所有四個階段的元素。例如檢查是一種決定。沒有輸入和輸出。垂直箭頭指示流程的進度。它還顯示了信息流的方向，前一級的輸出變成了下一級的輸入。水平箭頭表示“信息流”或“交互”的方向。圓形箭頭表示各階段內反覆且強烈的相互作用。稍後將這些分類為階段，並在下一部分中進行說明。 \n 1.2.3簡化流程一旦我們制定了每個公司的協作產品設計流程，我們就將它們分類以確定它們的類型，目的和條件。但是，由於每個公司的流程都包含詳細的設計動作和信息，因此直接在公司之間進行比較並不容易。因此，我們使用“流程塊”的概念簡化了每個公司的設計流程，以幫助它們進行可比性，同時保持基本特徵。 \n 我們發現在一組小的連續階段中存在一種模式。所有主要階段都完成了一項主要工作。完成後，一個清晰的新階段從另一個工作開始。我們將這些小階段定義為“流程塊”。它的特徵是初始輸入，內部迭代，決策，最終結果和不可逆趨勢。 \n 流程塊中的流程從初始輸入開始，並在內部的各個小階段中運行。迭代或反饋可能在塊內的各個小階段之間發生。最後，他們對最終結果做出最終決定。這是一個里程碑，指示該階段將跳到下一階段。例如，在圖 3 的藍色方框中，此塊的主要工作是開發執行六個小階段的設計概念。當他們處於渲染階段時，如果在渲染評估事件中不滿意渲染結果，則可以返回到構思草圖階段。在最後階段，設計模型作為結果由高層管理人員確認，然後跳至“產品計劃會議”。 \n 在前一個結果進入下一個塊的輸入之後，兩個過程塊之間的過程流幾乎沒有機會被逆轉。跨團隊通常進行最終設計，並由高層經理在每個工作組中批准。回到上一個區塊意味著它無法滿足市場時間表。因此，應該由最高管理層對此事做出決定。根據訪談數據，他們寧願放棄該項目，也不願返回上一個階段。在大多數基於階段的模型中都對階段之間的迭代和反饋進行了描述。但是，在本研究中，將一個過程塊或兩個並行塊視為一個階段，因此在實際情況中很少會發生階段之間的反向迭代或反饋。它發生在一個塊中的各個階段之間。因此，似乎在階段之間幾乎不可能放棄項目，但是在階段之間可以放棄。 \n 我們通過其主要工作來命名流程塊。在命名塊時，我們發現工程設計和工業設計使用的術語“概念設計”不同。工程設計中的概念設計是與技術概念有關的技術概念，該技術概念通過開發對工作結構和功能的廣泛解決方案來與產品的工作方式相關。但是，工業設計師在概念設計階段決定產品樣式和交互作用的方向，這由概念關鍵字，情緒板，想法草圖和用戶場景來表示。因此，我們標記了這個概念。 \n 工業設計師的設計活動稱為“  Concept Design-I ”，而工程設計師的設計活動稱為“  Concept Design-E ”。 \n 圖 3 中的彩色框使用了圖 5 中的相同彩色框進行了簡化。圖 3 中的藍色框變為“  Concept Design-I ”。圖 3 中的“產品計劃會議”定義為“產品計劃”，並以細長的六邊形可視化。由於它是一個單獨且獨特的設計活動，因此被確定為單個階段。在紅色塊內部，有兩個並行的處理塊；右側的“  Concept Design-E ”（紅色的小方框）是“主流程塊”，左側的“形狀修改”（黃色）是“對應的塊”。這兩個塊不視為單獨的階段，因為它們與紅色大塊內的起點到終點相連。這樣，兩個設計師團隊之間的互動就很強。為了區分兩個平行的塊，我們用粗實線表示主塊，並用淺實線表示相應的塊。在綠色塊中，由於所有 12 個流程之間的設計活動都沒有什麼區別，因此我們將詳細設計，測試和生產的兩個順序流程塊合併為一個。因此，在本研究中我們將它們視為一個階段。當綠色方框中的設計過程繼續進行時，工業設計師會根據工程設計師的要求或他們自己的設計檢查目的不時做出反應。他們通常將這些活動稱為“跟進”，與主要任務有所不同。這些活動顯然存在，但不屬於流程塊。它們是如圖 3 所示的離散過程元素，因此用虛線表示。為了幫助視覺理解，實心箭頭，雙向寬箭頭和單個方向寬箭頭分別表示過程流，相互交互和單向交互。 \n  1.2.4確定協作設計過程的類型我們根據 12 種簡化的協作產品設計過程的過程結構，過程塊和階段的輸入和結果的相似性以及工業設計師和工程設計師之間的交互性，對它們進行了比較和分類。我們首先將每個流程塊和階段與其他 11 個流程的相應流程塊和階段進行結構比較。然後，我們比較了 12 個流程中每個相應階段的投入和結果。例如，圖 5 中的 “ 概念設計 -I” 階段沒有輸入，但是產生 “ 設計模型 ” 作為輸出。其他過程中的某些 “ 概念設計 -I” 階段始於工程設計團隊的初步佈局設計。因此，檢查階段的輸入和結果的類型為確定總體流程如何進行提供了線索。最後，我們評估了一個階段中工業設計人員與工程設計人員之間的互動。藍色方框中的兩個組之間沒有交互。但是，在紅色塊中，它們之間存在強大的交互作用。結果，我們將 12 個協作產品設計過程分為四種代表性過程。 協同產品設計流程 2412 協作產品設計過程的類型我們根據協作產品設計過程的特徵來命名四種類型。 \n 類型1 ：由 ID 主導的概念驅動過程 \n 類型2 ：由 ID 領導的內外聯合流程 \n 類型3 ： ED 主導的“內部優先”流程 \n 類型4 ： ID ＆ ED 協同流程 \n 它們之間的差異主要存在於開發設計概念和初步佈局的流程的早期階段。在詳細設計階段之後，工程設計師的任務占主導地位，這之間存在一些差異。它相當標準化。這表明協作產品設計過程的類型由詳細設計階段之前採用的方法確定。 \n 兩家公司根據其目標和情況採用了一到三種類型的設計流程。類型 1 和類型 4 僅用於新設計，除了公司在短期內市場要求新樣式時採用類型 1 的公司之外。當他們有很多參考產品並且交貨時間很短時，就會發生這種情況。  Type 2 用於新設計和重新設計。有趣的是，類型 3 僅用於重新設計。除公司通過服務提供商將其產品發佈到市場外，大多數流程都用於 B2C 。考慮到公司在不同於公司 A 和 E 的情況下使用類型 1 ，業務類型（ B2B 或 B2C ）將影響設計流程的選擇。 \n 關於實際設計過程和文檔化過程之間的區別，他們中的大多數人回答說他們已經記錄了所有公司的標准設計過程，但根本沒有遵循。  Maffin 的發現支持了這一點，即設計師根據產品開發環境開發了自己的方法。看來，文檔化流程根據項目類型定義了標準化的任務流程和階段，每個部門的任務和角色以及項目時間。但是，他們總是被迫縮短實際項目時間。這種管理壓力很可能導致他們不遵循記錄的流程。 \n 通過比較每種類型過程的使用頻率，我們發現類型 3 是最常用的，而類型 4 是最少的。使用類型 2 的頻率比使用類型 1 的頻率更高。除了公司 B 的情況外，類型 3 與大多數受訪者所說的公司標準最為相似。考慮到重新設計的頻率比新設計的頻率高的觀點，成功的徹底創新可能每 5 至 10 年發生一次，這是一個合理的發現。由於類型 4 是由個人自發發起的，並且不是一套官方的標準程序，因此這種情況很少見。 \n 以下各節介紹了每種類型的設計過程的詳細特徵以及相關的上下文。 \n 2.1類型1 ：由 ID 主導的概念驅動的過程工業設計人員在決定類型 1 初始階段的產品開發方向方面起著主導作用。根據過程塊，它分為四個階段， \n 第一階段 （概念設計 -I ）：工業設計師獨立開發產品的概念，而不受其他部門的干擾。他們主要關注與美學外觀和用戶體驗有關的方面。他們很少考慮內部零件，這給了他們很多自由。他們為外部和高質量渲染圖像生成 3D CAD 數據以測試該概念。最終確定外觀形式後，他們將生產“設計模型”（一種無功能的原型）以驗證該概念。最後，在“設計評估會議”上選擇最佳設計。該階段的最終結果是外形的 3D CAD 數據和設計模型。工程設計師在此階段不採取任何行動。通常，他們甚至不知道工業設計師在設計什麼。 \n 第二階段 （產品計劃）：產品計劃部門決定所選設計的商業化以及目標市場，設計的目標價格和材料成本。最後，他們準備了產品計劃文件，並為設計的商業化確定了具體的方向。 \n 第三階段 （概念設計 -E / 形狀修改）：前一階段的產品規劃文檔以及由工業設計師開發的最終 3D CAD 數據是提供給工程設計師的初始輸入。工程設計人員回顧了工業設計人員提出的設計概念的可行性，因為工程設計人員收集了相關技術並在 3D CAD 數據中佈置了內部零件，以測試是否所有必不可少的內部功能零件都可以固定在外部表格中。有時，工程設計人員會製作實驗原型，以測試是否可以通過預設的外部形式實現所需的性能。由於工業設計師在定義外觀形式時沒有考慮內部零件，因此工程設計師在將內部零件佈置在給定形式中時遇到了麻煩。因此，以某種方式不可避免地要改變外觀。因此，對於概念設計 -E ，有一個相應的過程：工業設計師的“形狀修改”。工業設計師使用從工程設計師那裡收到的佈局數據來修改外觀形式。此時，兩個目標相互碰撞。工業設計人員嘗試保持原始形式，而工程設計人員要求進行修改以確保功能和性能。在這個過程中，發生了非常緊密的交互。結果是有關外部形狀和內部零件佈局的 3D CAD 數據。   第四階段 （詳細設計測試和生產 / 跟進）：從這一階段開始，工程設計師在所有零件中領導該過程。工程設計師根據上一階段確定的 3D CAD 數據確定各個零件的幾何形狀和成分結構。由於考慮了批量生產或可靠性測試，他們有時會要求工業設計師對外觀設計進行較小的修改。詳細設計完成後，將生產稱為 “ 工程樣品 ” 的工作原型，以檢查形式和功能。在這一點上，工業設計師要評估其外觀設計符合其設計理念的程度。然後，工程設計師通過多個事件過程來決定供應商，生產模具並測試 “ 預生產原型 ” ，以提高性能的可靠性和產品的耐用性。 另一方面，在 “ 跟進 ” 中，工業設計師決定如何對產品應用顏色，圖形，材料和表面處理，並為工程設計師提供相關規範。對於所生產的每種工作原型，工業設計師都要根據規格測試美學和情感品質。當他們批准後，他們在設計過程中的正式角色便結束了。除非獲得批准，否則工程設計師應再次生產和測試有問題的零件。我們發現所有六個公司都具有這種機制來維持產品的設計質量。類型 1 與傳統觀念相反，傳統觀念認為，新產品開發過程是通過市場研究或開發新技術來確定市場需求而開始的。它從完全自由的純工業設計師的概念開始。這意味著可以根據工業設計師在腦海中設想的圖片來開發新產品。這與工程設計學科中描述的產品設計過程不一致，在工業設計中，工業設計師在概念設計中的作用缺失了。 \n 考慮到相關的理論，即創造力是在以解決方案為導向的方法對問題進行徹底分析之前發生的，例如“主要生成器”和猜想分析模型（ Hillier ）、 Musgrove 和 O'Sullivan ，以及 Lawson 和 March 的其他相關發現和論點，對於公司來說，賦予工業設計者自由和自主權以產生創造性解決方案概念的最佳策略不受外界干擾。實際上，類型 1 在兩種情況下被使用：一種是開發形狀和功能都新的概念產品，包括開發新產品類別（如公司 A 和 E 中的產品），另一種是啟動新概念產品。盡快的現有產品。當有大量參考設計時，後一種情況似乎是可能的，因此，工業設計師可以在交貨時間短時決定產品尺寸和外部元素而無需任何產品規格。 \n 2.2類型2 ：由 ID 領導的組合內外過程公司使用此過程來開發新類型的產品或修改現有產品。在任何一種情況下，與類型 1 不同，產品計劃團隊都將啟動該過程。我們可以分四個階段來解釋類型 2 。   第一階段 （產品計劃）：產品計劃團隊創建產品計劃文檔以啟動產品開發。它設置了目標市場，目標價格和產品規格。在開發現有產品的修改版本時，它會根據現有產品（包括競爭對手的產品）做出決定。在開發新產品時，工程設計師會幫助他們做出決定。此階段的結果是一個產品計劃文檔。 \n 第二階段 （概念設計 -I ）：從產品計劃部門收到產品計劃文件後，工業設計師將決定產品的外觀和相關內部。他們收集符合產品尺寸和規格的待開發產品所需的功能項目，並從對用戶或設計趨勢的研究中得出形式概念。然後，他們安排內部零件以決定外觀形式，同時避免內部零件與預期的外部形式之間發生任何衝突。因此，它們在外形設計和內部零件的佈置之間來回移動。在此階段，工業設計師和工程設計師之間幾乎沒有互動。對於最後的事件，設計評估將使用無功能的設計模型進行。因此，此階段的結果是有關產品外觀和初始內部佈局的 3D CAD 數據，以及設計模型。 \n 第三階段 （概念設計 -E / 形狀修改）：從工業設計師那裡收到 3D CAD 數據後，工程設計師會密切檢查內部零件與外部形狀有關的可行性和可操作性，並製定最終佈局。工程設計師檢查它們時，經常要求工業設計師修改佈局或外部形式。因此，工業設計活動要進行相應的過程。但是，形式更改並不像 Type1 那樣重要，因為他們在上一階段決定了與內部部件有關的外觀形式。此階段的結果是有關最終外觀形式和內部零件確定佈局的 3D CAD 數據。 \n 第四階段 (Detail 設計測試與生產 / 後續）：此階段與類型 1 的階段沒有顯著差異。類型 2 的顯著特徵是工業設計師積極參與佈置內部功能組件，同時決定第二階段的外部形狀。儘管工業設計師對內部佈局和外部形狀之間的聯繫的了解較少集中在工程上，但這種情況很明顯。 \n 證明了工業設計師的作用已經超出了我們通常期望的範圍。結果，工業設計師變得有影響力並主動做出決策。此外，工程設計師幾乎沒有參與此階段。正如工程設計文獻所建議的那樣，我們期望版圖設計將是工程設計人員的專屬工作。我們假設至少工程設計人員會積極為工業設計人員提供建議和指導。但是，他們希望數據能夠從工業設計人員那裡獲得，並賦予工業設計師自由完成與產品內部結構有關的外部形式的能力。此時，公司的設計至上政策似乎是主要原因。 \n 2.3類型3 ： ED 主導的“內部優先”過程類型 3 與類型 1 和類型 2 有兩點不同：它們僅將其用於重新設計現有產品，工程設計師的活動先於工業設計師。它要求工程設計師扮演更重要的角色，同時減少工業設計師的角色。我們解釋它們的特徵如下： \n 第一階段 （產品計劃）：如圖 8 所示，產品計劃團隊首先根據年度產品開發路線圖啟動產品開發項目。在這一點上，它們確實具有功能路線圖中產品的概念。產品規劃專家根據市場上現有的產品確定目標市場，目標價格，產品尺寸和材料成本。工程設計人員經常通過分析競爭對手產品的技術部分並估算材料成本來幫助他們制定產品規格。此階段的結果是產品計劃文件，其中包括產品規格。 \n 第二階段 （概念設計 -E ）：工程設計師根據產品規格快速開發初步佈局。他們通常使用以前開發的產品的數據。完成後，他們將初步佈局作為 3D CAD 數據發送給工業設計師。這是工業設計過程的起點。工業設計人員將其用作開發外觀的輸入，而工程設計人員則尋求系統性能的解決方案並繼續優化佈局。隨著內部佈局和外部形式的同步發展，兩個團隊密切互動並討論分歧或衝突的任何方面，並反復交換反饋以進行修改。最終，當設計草圖發展為確定的外觀形式時，初步佈局成為確定的佈局。此階段的結果是確定的佈局，反映了所設計產品的最終尺寸。 \n 2.4階段 （概念設計 -I ）：該過程遠非一個獨立的後續階段，而是第二和第三階段之間的中間階段。因此，我們將其稱為第 2.5 階段。它從收到工程設計人員的初步佈局開始，並與 Concept Design-E 同時進行。工業設計師檢查內部佈局並以匹配的外部形式進行覆蓋。他們進行構想草圖， 3D CAD 建模，渲染，設計評估會議和模型選擇活動，以決定外觀模板的設計。工程設計人員不斷對外觀進行建議和評估。這樣，通過相互關聯的 Concept Design-I 和 Concept Design-E ，外觀形式和佈局便逐漸發展。 \n 第三階段（詳細設計測試和生產 / 跟進）：該階段與 Type 1 和 Type 2 並無明顯不同。 \n 除公司 B 以外的所有公司都使用此過程。這表明它被最廣泛地使用。受訪者指出，該過程在角色，任務和階段方面可與公司的官方設計過程指南相提並論。但是，他們提到實際時間比準則中指定的時間短。 \n 2.5類型4 ： ID ＆ ED 協同過程類型 4 不是通過官方提議發生的，而是個人設計者在早期階段所做的努力。在許多情況下，參與設計的工程設計師 \n 由於有限時間內的可行性問題，排隊模型往往會拒絕工業設計者提出的新穎設計概念。為了實施這些概念，工業設計師與自由設計師合作。因此，該過程使繼續拒絕的新穎設計概念成為可能。此外，工業設計師和工程設計人員也做出了協同努力。與傳統的分離方法不同，它們以集成方式處理設計概念，同時考慮了許多設計變量。此過程的詳細階段如下）： \n 第一階段 （概念孵化）：工業設計師獨立地構思新設計。他們大都是根據儘管有創新性但仍未進行項目的設計思想來構建它。 \n 第二階段 （概念設計）：此階段始於工業設計師尋找可以與他們合作的工程設計師。當工程設計師同意加入工業設計師以實施設計概念時，他們將在整個階段中緊密合作。工程設計師為工業設計師提供最先進的技術，以增強設計理念。內部佈局的第一層是根據要開發的外部形狀開發的。該階段的結果是有關外觀和內部佈局的 3D CAD 數據。 \n 第三階段 （產品計劃）：產品計劃團隊通過設計評估會議來決定設計的商業化。然後，產品計劃團隊定義設計的目標市場。從這個階段開始，負責開發陣容模型的工程設計人員就參與其中。 \n 第四階段 （詳細設計測試和生產 / 跟進）：該階段的過程與類型 1 、 2 和 3 的過程沒有太大不同。 \n 現有的產品開發環境使工程設計人員趨於保守。消費電子領域的大多數開發項目都是緊迫的。公司通常會在計劃中設定產品發布日。因此，設計人員將按照時間軸執行所有任務和事件。根據訪談數據，參與此類項目的工程設計師傾向於拒絕工業設計師提出的新穎設計概念，因為他們認為他們無法確保其概念的工作在選定的時間內通過了性能和可靠性測試。 。測試失敗將直接影響公司的產品開發路線圖以及工程設計師評估時的年度績效。這似乎使他們保守地選擇和評估設計概念。因此，對於直接參與按時間表進入市場的項目的設計人員來說，幾乎無法使用此過程。相反，例如，從時間表到市場相對自由的工程設計師，那些參與為未來產品開發先進技術的人員，將對新穎的設計理念更加開放。此外，更重要的是，似乎更願意與其他專家合作進行設計的設計師傾向於執行此過程。 \n 對於 D 公司，採用這種工藝的新產品在 Type 4 方面取得了巨大的市場成功。但是，在我們的採訪中沒有報告更多將這一過程積極應用於後續項目的案例。儘管如此，有趣的是 D 公司還是從先進技術開發團隊派遣了幾名工程設計師到工業設計團隊的相鄰辦公室。這啟用了協同處理案例。高層管理人員故意移動它們，以防止工業設計師提出不切實際的設計概念，方法是讓他們迅速為工業設計師提供必要的技術支持。這似乎激發了雙方更加親密，從而營造了合作的氣氛。這將增加新興的集成設計流程的可能性。 \n 3討論與啟示  3.1角色變更 \n 工業設計師的貢獻在概念設計階段占主導地位，此後，工程設計師接任其主要角色。 \n 被視為四種設計過程的一般特徵。除類型 3 外，所有設計過程均始於工業設計師開發的設計概念。對於類型 1 和類型 2 ，工業設計師根據形狀和用途獨立定義設計概念。  Type 4 在概念設計階段是集成的，但從工業設計師的初始設計概念開始。與其他三種類型不同，發生對現有產品的計劃修改的類型 3 情況，是從工程設計師的佈局設計開始的。看來他們的角色分為概念開發者和概念實現者。有趣的是，當一家公司追求新概念的產品或強調情感感覺和可用性（即使在重新設計案例中）時，工業設計師的作用似乎也很重要。這與通過開發新原理和技術來開發新概念產品的想法不同。他們寧願設計新用途或現有用途的含義。因此，這可以被視為新設計也從現有技術和原理開始的證據。 \n 關於工業設計師的知識，與我們認為很少考慮內部零件的信念相反，他們似乎具有足夠的知識來閱讀和處理內部功能組件並進行外部設計。除類型 1 外，外觀設計總是通過工業設計師考慮和重新佈置內部功能部件來實現。類型 2 是意外情況。工業設計師通過以下方式開發外形同時安排相關的內部組件。但是，他們在內部零件上的工作可能僅限於直接影響外部形狀的主要零件。儘管他們沒有完全參與設計內部零件的細節，但是很明顯，他們的作用已擴展到工程設計領域。這歸功於最高管理層對工業設計的大力支持以及兩組之間共享的 CAD 工具。 \n 3.2選擇設計方法 \n 理論上，發生了“由內而外”和“由外而內”的方法，這些方法是由工程設計師和工業設計師的不同工作傾向共同造成的。四種類型的協作設計過程可以看作是這兩種方法的擴展版本。本節討論四種類型與兩種方法之間的關係，以及成功應用每種類型並將其應用於顧問和客戶合作夥伴設置的條件。對於強調使用環境的消費產品，應該由工業設計人員首先定義與可用性和外觀相關的外觀，然後工程設計師確定與外部鏈接的內部功能部件以支持可用性和外觀。在這種情況下，這是一種由外而內的方法，其中類型 1 適用，類型 2 幾乎適用。如果我們將“由內而外”的過程定義為首先確定初步佈局，然後將其用於共同開發隨後的外部形式和確定性佈局，則類型 3 就是這種情況。考慮到這兩種方法，類型 4 被視為混合過程，因為外部和內部同時定義。如果我們將“由內而外”的過程定義為完成內部確定的佈局後再決定外部，則此處研究的公司中沒有這樣的過程。它不太適合與消費產品一起使用。它非常適合工業耐用品。例如，如果我們設計一個工業電動機，其容量將決定電線的纏繞數和磁芯的尺寸。我們應該科學地計算內部轉子和定子的佈局和尺寸，以實現最佳性能。因此，必須首先完全確定內部零件，然後將外部形式定義為覆蓋。如果我們根據預設的外部形式開發電機的內部零件，它將無法正常運行。 \n 使用 Type 1 時，工業設計師可以自由提出創新的設計思路。然而，該方法將導致兩個問題。首先，很難獲得工程技術性能。為了獲得最佳性能，內部功能部件可能會與外形衝突。其次，要解決第一個問題，設計團隊可能會在功能和外觀之間進行權衡，從而損害原始設計概念。為了成功地管理此方法，在以下情況下，高層管理人員必須保持強大的支持以保持設計的創新性。 \n 妥協將發生。正如我們在公司 B 中觀察到的那樣，類型 2 可以替代該問題。它的策略是由工業設計人員在移動或放置相關內部零件時確定外觀形式。這避免了內部和外部之間的嚴重干擾。然而，有爭議的是，工業設計師是否應在外觀設計開發之外還進行室內佈局設計，以犧牲想像力為代價。他們很可能會在自己的知識範圍內折衷創新。要成功應用 Type 2 ，設計師應該對工業設計和工程設計都具有很高的知識。 \n 為了在早期階段獲得高級設計概念的可行性，值得注意的是 Type 4 ，因為工業設計師的概念和工程設計師的技術支持可以開發新產品。鑑於此過程有效且有可能開發創新產品，公司需要為其提供適當的使用條件。戴森公司可以成為榜樣。眾所周知，設計師和工程師作為一個部門的成員共享一個工作區，以實現設計的集成實施。為了促進此過程，公司需要有一個集成的團隊，其中兩個小組共享一個工作空間，並按預期吸收每個學科的文化。沒有這種情況的改變，類型 4 甚至作為公司中有據可查的流程都將無法有效地發揮作用。 \n 在行業中，許多工程公司與外部工業設計師合作。儘管我們沒有調查這種類型的合作，但是，根據我們的發現對可能的過程方案進行討論將是有益的。當製造商與設計諮詢公司合作時，他們可以得到補充支持，以按時完成項目或產生新的想法。在顧問和客戶的合作關係中，有兩種過程耦合方式：被動耦合，其中顧問在與客戶聯繫以獲取更多信息或查看其結果時獨立開發解決方案，以及主動耦合，其中顧問和客戶設計師的協作團隊在工作緊密聯繫以產生解決方案。在無源耦合中，由於外部設計師獨立工作，其設計過程將類似於類型 1 或類型 2 。當客戶希望通過利用他們缺少的特定專業來收集盡可能多的創意時，類型 1 將非常有用。當客戶公司高度以技術為導向並且具有足夠的能力在強大的工程支持下實施好的概念時，這種情況將非常有用。如果客戶的能力低於上述情況，並且需要在初期階段就聘請外部工業設計師來領導他們的產品開發，則類型 2 將是合適的。主動耦合模式將具有與類型 3 和類型 4 相似的過程。如果客戶端已經具有類型 3 ，則類型 3 是合適的。 \n 良好的設計方向和相關技術，並希望改善產品的美學外觀。除非客戶和顧問公司的集成團隊在項目期間在同一空間工作，否則將根本無法實現類型 4 。在顧問和客戶合作夥伴的協同設計過程中應該考慮其他因素。在許多情況下，客戶為顧問提供的信息在一定程度上受到限制。因此，在顧問和客戶合作夥伴以及公司內部發生的相同類型的協作過程在內容方面將是不同的。儘管如此，我們的研究結果和討論仍可為在消費電子領域選擇更好的設計方法提供線索。 \n 3.3設計過程類型的含義工業設計師和工程設計師在設計方法和對產品開發的看法方面有所不同。工業設計師產生以用戶為中心的解決方案概念，工程設計師根據技術角度解決設計問題。這兩個群體的特殊性所涉及的過程可以成為開發具有競爭力的創新產品的基礎。此外，系統工程設計與以用戶為中心的設計思想的耦合過程有利於在顧問與客戶之間建立以用戶為中心的解決方案。耦合過程是公司採取並實現市場競爭力的最佳選擇。例如，消費電子公司使用四種類型的協作設計過程來實現其市場目標。在這四種類型的早期階段，工業設計者的作用是顯而易見的，採用工業設計師專業的方式是採用適當類型的協作設計過程的影響因素。通過給予類型 1 中的工業設計師自由，可以增加獲得創新設計概念的可能性。那麼，這種自由如何驅動工業設計師創造創新設計概念呢？實際上，建築和工業設計人員首先從解決方案圖像入手，然後通過重複試驗進行最終確定。這與設計者首先基於預設進行猜測然後進行分析的模型是一致的。這意味著工業設計者依靠對未來的展望來創造創新的概念，而不是對市場和客戶進行深入的設計研究。補充說，工業設計方法是價值驅動的。因此，類型 1 的工業設計師可以不受限制地通過設想期望的未來來產生創意。 \n 認為，創新產品開發是通過技術或含義的改變進行的，而不是以人為中心的認真的設計研究。他們補充說，以人為本的設計方法更適合於現有產品的逐步改進產品。在消費電子領域當前的產品開發環境中，產品規劃專家在市場和客戶研究中起著關鍵作用。因此，產品規劃團隊對工業設計師的投入將僅限於他們的創造力。這解釋了為什麼公司以相反的方式使用 Type 1 ；首先開發概念，然後再定義市場，而不是相反。通常，在產品設計概念中，設計師會考慮與技術高度相關的功能概念，以及會給用戶帶來新含義的樣式概念。因此，由於功能和 / 或樣式概念，工業設計師提出的設計概念應該是創新的。當涉及到技術時，工程設計師應開發新技術或尋找合適的技術來實施該概念。如果在產品開發計劃階段不予以拒絕，則這種類型的過程可以導致新技術的開發。 \n 在類型 2 中，公司對工業設計師承擔各種角色和職責。由於工程設計師不會打擾他們，所以他們可能有一定的自由度。工業設計師的方法是面向解決方案的。他們通常不遵循系統的過程。他們寧願提出新的想法並重複他們。但是，類型 2 可能通過強加他們在內部佈局設計和外部設計中扮演的另一角色而中斷了工業設計師的方法。工業設計師採用面向問題的系統方法肯定會限制他們在概念開發中的想像力。在考慮其設計概念的可行性時，這將使它們更加現實。因此，類型 2 的設計結果將不如類型 1 的創新。否則，類型 2 將比新設計更適合於重新設計。如果工業設計師不考慮使用 Type 2 的內部零件進行重新設計，則他們可能會面臨困難，並且設計概念可能會被拒絕。如果我們考慮將類型 2 和類型 3 用於重新設計，那麼類型 2 何時比類型 3 更好？類型 3 的特性符合工程設計中顯示的大多數設計過程。在設計設計領域，工業設計被認為是事後的想法。按照他們的觀點，工業設計的功能與確定產品的技術特徵後的外觀，樣式，形式和顏色等方面有關。第 3 類是工程設計師為設計概念提供技術解決方案的過程。他們要求工業設計師開發外觀。因此，類型 3 僅使用工業設計師的專業知識來創造美學外觀。從這個角度來看，類型 2 可以為工業設計師提供比類型 3 更多的方式來展示他們的專業知識。考慮到類型 3 是最常用的過程，因此在過程管理方面它可以更加有效。類型 3 早期階段的不確定性可能是四種類型中最小的。的大多數技術解決方案 \xa0 設計概念是由工程設計師在早期階段設定的，而工業設計師僅局限於創造美觀的外觀。 \n 我們無法發現的一個過程是類型 5 ： ED 主導的技術驅動過程。這可以與類型 1 ：由 ID 主導的概念驅動過程形成對比。在類型 5 中，工程設計人員將首先開發一項新技術而無需考慮產品開發計劃，然後通過測試原型來測試其性能。接下來，工業設計師為該技術提出了新的產品設計概念。然後，可視化的設計概念和原型可用於決定產品開發。應用類型 5 ，公司可以創建新類別的產品，從而增加了打開新市場的可能性。我們找不到這種類型的原因之一是創新技術開發的稀缺性，以及新技術滿足新概念的難得機會。另外，在決定產品開發之前，公司不太可能等不確定的工程設計師和工業設計師。為了使這一過程更好，我們需要工程設計人員開發新技術，而工業設計師則需要使用相互合作的技術來創建新概念。根據這種說法，類型 4 在正式申請創新產品設計時可能有用。它還可以使工程設計師開發的技術與工業設計師提出的新概念集成在一起。 \n 4結束語我們旨在確定協作設計過程類型的存在以及在公司中採用特定類型的條件。我們根據工業設計師和工程設計師的深入訪談數據建立了協作設計流程。結果，我們發現了四種類型的協作設計過程。根據設計過程早期階段的不同對它們進行了分類。四種類型的過程在不同的上下文中用於不同的目的。有時，它們會被戰略性地用於開發新設計或重新設計，有時它們會由於內部和外部因素而有機地應用。我們還發現，工業設計師的作用是有影響力的，而且是擴展的。 \n 設計過程模型的抽象特徵和研究中的一門學科方法與實際實踐並不完全匹配，並且被確定為造成這種問題情況的原因。在這方面，要求組合不同的設計過程模型。四種類型的過程是工業設計師驅動的以解決方案為導向的方法和工程設計師以問題為導向的方法的組合過程。它們表明，即使在單個領域（即消費類電子產品），實際的設計過程也無法用單個模型來表示。為了提高適用性 \n 設計過程並為了在設計實踐中獲得設計方法的適當支持，需要考慮公司和項目特定環境的更具體的過程模型。我們特別專注於消費電子領域，在該領域中，工業設計師和工程設計師在產品開發方面很重要。我們找到了四種類型的設計過程，並確定了它們的目的和背景。因此，我們的發現與上下文相關的細節將為公司計劃針對新產品開發的有效設計過程管理提供有用的信息，尤其是在消費電子領域。 \n 根據研究方法，我們展示瞭如何從設計師的深入訪談數據中建立協作設計過程。我們確定了流程元素，使用它們構建了部分流程，並使用鑲嵌方法構建了詳細的協作設計流程。我們還引入了“過程塊”，並將一個或兩個相互作用的塊定義為一個階段。我們認為這種方法有利於確定最佳水平的實際設計過程。我們認為該方法適用於發現其他設計過程。我們的過程模型的形式可與其他基於階段的模型相媲美。我們從模型中發現，在階段之間很少發生反向迭代或反饋。這與現有的基於階段的工程設計過程模型的描述不同。在理想情況下，我們認為雙向迭代是可能的，但是實際上由於激烈的市場競爭，我們認為這種情況很少發生。 \n 特別是針對其他產品領域中的其他項目案例，需要對該方法進行進一步的研究。本研究中的公司均為電子產品製造商。因此，結果僅限於此產品類別。我們需要測試這四個協作設計過程如何在其他公司中應用。相反，值得研究創新產品開發和應用過程的案例。", 'tags': '', 'url': '主題0.html'}]};